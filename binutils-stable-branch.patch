diff --git a/bfd/ChangeLog b/bfd/ChangeLog
index f60b5f8f4e..aa5a81ffed 100644
--- a/bfd/ChangeLog
+++ b/bfd/ChangeLog
@@ -1,3 +1,76 @@
+2019-10-12  Nick Clifton  <nickc@redhat.com>
+
+	Release 2.33.1
+	* version.m4 (BFD_VERSION) Set to 2.33.1
+	* po/bfd.pot: Regenerate.
+
+2019-10-10  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	Apply from master
+	2019-10-04  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+	PR ld/22263
+	PR ld/25056
+	* elf32-arm.c (elf32_arm_tls_transition): Use bfd_link_dll instead of
+	bfd_link_pic for TLS checks.
+	(elf32_arm_final_link_relocate): Likewise.
+	(allocate_dynrelocs_for_symbol): Likewise.
+
+2019-10-10  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	Apply from master
+	2019-10-04  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+	PR ld/25062
+	* elf32-arm.c (elf32_arm_final_link_relocate): Sign extend data.
+
+2019-10-09  Alan Modra  <amodra@gmail.com>
+
+	Apply from master
+	2019-10-07  Alan Modra  <amodra@gmail.com>
+	* elf32-ppc.c (ppc_elf_tls_optimize): Don't process R_PPC_TLSLD
+	with non-local symbol.  Don't double count __tls_get_addr calls
+	with marker relocs.
+	* elf64-ppc.c (ppc64_elf_tls_optimize): Likewise.
+
+	2019-10-07  Alan Modra  <amodra@gmail.com>
+	* elf32-ppc.c (nomark_tls_get_addr): Rename from has_tls_get_addr_call
+	throughout.
+	* elf64-ppc.c (nomark_tls_get_addr): Likewise.
+
+	2019-10-07  Alan Modra  <amodra@gmail.com>
+	* elf64-ppc.c (ppc64_elf_size_dynamic_sections): Do allocate
+	space for local got non-tls relocs when PIE.
+
+	2019-10-04  Alan Modra  <amodra@gmail.com>
+	* elf64-ppc.c (ppc64_elf_check_relocs): Move initialisation of vars.
+	(ppc64_elf_tls_optimize): Correct is_local condition.
+	(allocate_got): Don't reserve dynamic relocations for any of the
+	tls got relocs in PIEs when the symbol is local.
+	(allocate_dynrelocs): Correct validity test for local sym using
+	tlsld_got slot.
+	(ppc64_elf_size_dynamic_sections): Don't reserve dynamic relocations
+	for any of the tls got relocs in PIEs.
+	(ppc64_elf_layout_multitoc): Likewise.
+	(ppc64_elf_relocate_section): Correct validity test for local sym
+	using tlsld_got slot.  Don't emit dynamic relocations for any of
+	the tls got relocs in PIEs when the symbol is local.
+	* elf32-ppc.c (ppc_elf_tls_optimize): Correct is_local condition.
+	(got_relocs_needed): Delete.
+	(allocate_dynrelocs): Correct validity test for local sym using
+	tlsld_got slot.  Don't reserve dynamic relocations for any of the
+	tls got relocs in PIEs when the symbol is local.
+	(ppc_elf_size_dynamic_sections): Don't reserve dynamic relocations
+	for any of the tls got relocs in PIEs.
+	(ppc_elf_relocate_section): Correct validity test for local sym
+	using tlsld_got slot.  Don't emit dynamic relocations for any of
+	the tls got relocs in PIEs when the symbol is local.
+
+	2019-09-26  Alan Modra  <amodra@gmail.com>
+	PR 24262
+	* Makefile.am (AM_CPPFLAGS): Add -DLIBDIR.
+	* plugin.c (load_plugin): Search both ${libdir}/bfd-plugins and
+	${bindir}/../lib/bfd-plugins if different.
+	* Makefile.in: Regenerate.
+
 2019-09-30  Phil Blundell  <pb@pbcl.net>
 
 	Release 2.33
diff --git a/bfd/Makefile.am b/bfd/Makefile.am
index 4703955ee4..6a39ef5649 100644
--- a/bfd/Makefile.am
+++ b/bfd/Makefile.am
@@ -53,7 +53,7 @@ ZLIBINC = @zlibinc@
 WARN_CFLAGS = @WARN_CFLAGS@
 NO_WERROR = @NO_WERROR@
 AM_CFLAGS = $(WARN_CFLAGS) $(ZLIBINC)
-AM_CPPFLAGS = -DBINDIR='"$(bindir)"'
+AM_CPPFLAGS = -DBINDIR='"$(bindir)"' -DLIBDIR='"$(libdir)"'
 if PLUGINS
 bfdinclude_HEADERS += $(INCDIR)/plugin-api.h
 LIBDL = @lt_cv_dlopen_libs@
diff --git a/bfd/Makefile.in b/bfd/Makefile.in
index 9c14721fd8..80499d69cf 100644
--- a/bfd/Makefile.in
+++ b/bfd/Makefile.in
@@ -479,8 +479,9 @@ libbfd_la_LDFLAGS = $(am__append_1) -release `cat libtool-soversion` \
 ZLIB = @zlibdir@ -lz
 ZLIBINC = @zlibinc@
 AM_CFLAGS = $(WARN_CFLAGS) $(ZLIBINC)
-AM_CPPFLAGS = -DBINDIR='"$(bindir)"' @HDEFINES@ @COREFLAG@ @TDEFINES@ \
-	$(CSEARCH) $(CSWITCHES) $(HAVEVECS) @INCINTL@
+AM_CPPFLAGS = -DBINDIR='"$(bindir)"' -DLIBDIR='"$(libdir)"' @HDEFINES@ \
+	@COREFLAG@ @TDEFINES@ $(CSEARCH) $(CSWITCHES) $(HAVEVECS) \
+	@INCINTL@ $(am__empty)
 @PLUGINS_TRUE@LIBDL = @lt_cv_dlopen_libs@
 
 # bfd.h goes here, for now
diff --git a/bfd/configure b/bfd/configure
index d9da29ff18..a292a2ed28 100755
--- a/bfd/configure
+++ b/bfd/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for bfd 2.33.
+# Generated by GNU Autoconf 2.69 for bfd 2.33.1.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
@@ -587,8 +587,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='bfd'
 PACKAGE_TARNAME='bfd'
-PACKAGE_VERSION='2.33'
-PACKAGE_STRING='bfd 2.33'
+PACKAGE_VERSION='2.33.1'
+PACKAGE_STRING='bfd 2.33.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1391,7 +1391,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures bfd 2.33 to adapt to many kinds of systems.
+\`configure' configures bfd 2.33.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1462,7 +1462,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of bfd 2.33:";;
+     short | recursive ) echo "Configuration of bfd 2.33.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1589,7 +1589,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-bfd configure 2.33
+bfd configure 2.33.1
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -2237,7 +2237,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by bfd $as_me 2.33, which was
+It was created by bfd $as_me 2.33.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -4187,7 +4187,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='bfd'
- VERSION='2.33'
+ VERSION='2.33.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -16954,7 +16954,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by bfd $as_me 2.33, which was
+This file was extended by bfd $as_me 2.33.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -17020,7 +17020,7 @@ _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-bfd config.status 2.33
+bfd config.status 2.33.1
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
diff --git a/bfd/elf32-arm.c b/bfd/elf32-arm.c
index b675fc60c1..cce796dafd 100644
--- a/bfd/elf32-arm.c
+++ b/bfd/elf32-arm.c
@@ -4911,7 +4911,7 @@ elf32_arm_tls_transition (struct bfd_link_info *info, int r_type,
 {
   int is_local = (h == NULL);
 
-  if (bfd_link_pic (info)
+  if (bfd_link_dll (info)
       || (h && h->root.type == bfd_link_hash_undefweak))
     return r_type;
 
@@ -11697,7 +11697,7 @@ elf32_arm_final_link_relocate (reloc_howto_type *	    howto,
 	  {
 	    /* If we don't know the module number, create a relocation
 	       for it.  */
-	    if (bfd_link_pic (info))
+	    if (bfd_link_dll (info))
 	      {
 		Elf_Internal_Rela outrel;
 
@@ -11801,7 +11801,7 @@ elf32_arm_final_link_relocate (reloc_howto_type *	    howto,
 	       now, and emit any relocations.  If both an IE GOT and a
 	       GD GOT are necessary, we emit the GD first.  */
 
-	    if ((bfd_link_pic (info) || indx != 0)
+	    if ((bfd_link_dll (info) || indx != 0)
 		&& (h == NULL
 		    || (ELF_ST_VISIBILITY (h->other) == STV_DEFAULT
 			&& !resolved_to_zero)
@@ -11818,7 +11818,7 @@ elf32_arm_final_link_relocate (reloc_howto_type *	    howto,
 		/* We should have relaxed, unless this is an undefined
 		   weak symbol.  */
 		BFD_ASSERT ((h && (h->root.type == bfd_link_hash_undefweak))
-			    || bfd_link_pic (info));
+			    || bfd_link_dll (info));
 		BFD_ASSERT (globals->sgotplt_jump_table_size + offplt + 8
 			    <= globals->root.sgotplt->size);
 
@@ -12024,9 +12024,9 @@ elf32_arm_final_link_relocate (reloc_howto_type *	    howto,
 	    unsigned long data, insn;
 	    unsigned thumb;
 
-	    data = bfd_get_32 (input_bfd, hit_data);
+	    data = bfd_get_signed_32 (input_bfd, hit_data);
 	    thumb = data & 1;
-	    data &= ~1u;
+	    data &= ~1ul;
 
 	    if (thumb)
 	      {
@@ -16491,7 +16491,7 @@ allocate_dynrelocs_for_symbol (struct elf_link_hash_entry *h, void * inf)
 	    indx = h->dynindx;
 
 	  if (tls_type != GOT_NORMAL
-	      && (bfd_link_pic (info) || indx != 0)
+	      && (bfd_link_dll (info) || indx != 0)
 	      && (ELF_ST_VISIBILITY (h->other) == STV_DEFAULT
 		  || h->root.type != bfd_link_hash_undefweak))
 	    {
diff --git a/bfd/elf32-ppc.c b/bfd/elf32-ppc.c
index 5e5834a70c..565a334452 100644
--- a/bfd/elf32-ppc.c
+++ b/bfd/elf32-ppc.c
@@ -2222,8 +2222,9 @@ struct ppc_elf_link_hash_table
 /* Nonzero if this section has TLS related relocations.  */
 #define has_tls_reloc sec_flg0
 
-/* Nonzero if this section has a call to __tls_get_addr.  */
-#define has_tls_get_addr_call sec_flg1
+/* Nonzero if this section has a call to __tls_get_addr lacking marker
+   relocs.  */
+#define nomark_tls_get_addr sec_flg1
 
   /* Flag set when PLTCALL relocs are detected.  */
 #define has_pltcall sec_flg2
@@ -3010,7 +3011,7 @@ ppc_elf_check_relocs (bfd *abfd,
 	    ;
 	  else
 	    /* Mark this section as having an old-style call.  */
-	    sec->has_tls_get_addr_call = 1;
+	    sec->nomark_tls_get_addr = 1;
 	}
 
       switch (r_type)
@@ -4455,11 +4456,7 @@ ppc_elf_tls_optimize (bfd *obfd ATTRIBUTE_UNUSED,
 			h = (struct elf_link_hash_entry *) h->root.u.i.link;
 		    }
 
-		  is_local = FALSE;
-		  if (h == NULL
-		      || !h->def_dynamic)
-		    is_local = TRUE;
-
+		  is_local = SYMBOL_REFERENCES_LOCAL (info, h);
 		  r_type = ELF32_R_TYPE (rel->r_info);
 		  /* If this section has old-style __tls_get_addr calls
 		     without marker relocs, then check that each
@@ -4468,7 +4465,7 @@ ppc_elf_tls_optimize (bfd *obfd ATTRIBUTE_UNUSED,
 		     setup insn.  If we don't find matching arg setup
 		     relocs, don't do any tls optimization.  */
 		  if (pass == 0
-		      && sec->has_tls_get_addr_call
+		      && sec->nomark_tls_get_addr
 		      && h != NULL
 		      && h == htab->tls_get_addr
 		      && !expecting_tls_get_addr
@@ -4533,8 +4530,11 @@ ppc_elf_tls_optimize (bfd *obfd ATTRIBUTE_UNUSED,
 		      else
 			continue;
 
-		    case R_PPC_TLSGD:
 		    case R_PPC_TLSLD:
+		      if (!is_local)
+			continue;
+		      /* Fall through.  */
+		    case R_PPC_TLSGD:
 		      if (rel + 1 < relend
 			  && is_plt_seq_reloc (ELF32_R_TYPE (rel[1].r_info)))
 			{
@@ -4581,7 +4581,7 @@ ppc_elf_tls_optimize (bfd *obfd ATTRIBUTE_UNUSED,
 		  if (pass == 0)
 		    {
 		      if (!expecting_tls_get_addr
-			  || !sec->has_tls_get_addr_call)
+			  || !sec->nomark_tls_get_addr)
 			continue;
 
 		      if (rel + 1 < relend
@@ -4631,12 +4631,12 @@ ppc_elf_tls_optimize (bfd *obfd ATTRIBUTE_UNUSED,
 		     indirect call to __tls_get_addr without a marker.
 		     Disable optimization in this case.  */
 		  if ((tls_clear & (TLS_GD | TLS_LD)) != 0
-		      && !sec->has_tls_get_addr_call
+		      && !sec->nomark_tls_get_addr
 		      && ((*tls_mask & (TLS_TLS | TLS_MARK))
 			  != (TLS_TLS | TLS_MARK)))
 		    continue;
 
-		  if (expecting_tls_get_addr)
+		  if (expecting_tls_get_addr == 1 + !sec->nomark_tls_get_addr)
 		    {
 		      struct plt_entry *ent;
 		      bfd_vma addend = 0;
@@ -4649,10 +4649,9 @@ ppc_elf_tls_optimize (bfd *obfd ATTRIBUTE_UNUSED,
 					  got2, addend);
 		      if (ent != NULL && ent->plt.refcount > 0)
 			ent->plt.refcount -= 1;
-
-		      if (expecting_tls_get_addr == 2)
-			continue;
 		    }
+		  if (tls_clear == 0)
+		    continue;
 
 		  if (tls_set == 0)
 		    {
@@ -5049,24 +5048,6 @@ got_entries_needed (int tls_mask)
   return need;
 }
 
-/* Calculate size of relocs needed for symbol given its TLS_MASK and
-   NEEDed GOT entries.  KNOWN says a TPREL offset can be calculated at
-   link time.  */
-
-static inline unsigned int
-got_relocs_needed (int tls_mask, unsigned int need, bfd_boolean known)
-{
-  /* All the entries we allocated need relocs.
-     Except IE in executable with a local symbol.  We could also omit
-     the DTPREL reloc on the second word of a GD entry under the same
-     condition as that for IE, but ld.so needs to differentiate
-     LD and GD entries.  */
-  if (known && (tls_mask & TLS_TLS) != 0
-      && (tls_mask & (TLS_TPREL | TLS_GDIE)) != 0)
-    need -= 4;
-  return need * sizeof (Elf32_External_Rela) / 4;
-}
-
 /* If H is undefined, make it dynamic if that makes sense.  */
 
 static bfd_boolean
@@ -5119,7 +5100,7 @@ allocate_dynrelocs (struct elf_link_hash_entry *h, void *inf)
       need = 0;
       if ((eh->tls_mask & (TLS_TLS | TLS_LD)) == (TLS_TLS | TLS_LD))
 	{
-	  if (!eh->elf.def_dynamic)
+	  if (SYMBOL_REFERENCES_LOCAL (info, &eh->elf))
 	    /* We'll just use htab->tlsld_got.offset.  This should
 	       always be the case.  It's a little odd if we have
 	       a local dynamic reloc against a non-local symbol.  */
@@ -5133,20 +5114,19 @@ allocate_dynrelocs (struct elf_link_hash_entry *h, void *inf)
       else
 	{
 	  eh->elf.got.offset = allocate_got (htab, need);
-	  if ((bfd_link_pic (info)
+	  if (((bfd_link_pic (info)
+		&& !((eh->tls_mask & TLS_TLS) != 0
+		     && bfd_link_executable (info)
+		     && SYMBOL_REFERENCES_LOCAL (info, &eh->elf)))
 	       || (htab->elf.dynamic_sections_created
 		   && eh->elf.dynindx != -1
 		   && !SYMBOL_REFERENCES_LOCAL (info, &eh->elf)))
 	      && !UNDEFWEAK_NO_DYNAMIC_RELOC (info, &eh->elf))
 	    {
 	      asection *rsec;
-	      bfd_boolean tprel_known = (bfd_link_executable (info)
-					 && SYMBOL_REFERENCES_LOCAL (info,
-								     &eh->elf));
 
-	      need = got_relocs_needed (eh->tls_mask, need, tprel_known);
-	      if ((eh->tls_mask & (TLS_TLS | TLS_LD)) == (TLS_TLS | TLS_LD)
-		  && eh->elf.def_dynamic)
+	      need *= sizeof (Elf32_External_Rela) / 4;
+	      if ((eh->tls_mask & (TLS_TLS | TLS_LD)) == (TLS_TLS | TLS_LD))
 		need -= sizeof (Elf32_External_Rela);
 	      rsec = htab->elf.srelgot;
 	      if (eh->elf.type == STT_GNU_IFUNC)
@@ -5594,12 +5574,13 @@ ppc_elf_size_dynamic_sections (bfd *output_bfd,
 	    else
 	      {
 		*local_got = allocate_got (htab, need);
-		if (bfd_link_pic (info))
+		if (bfd_link_pic (info)
+		    && !((*lgot_masks & TLS_TLS) != 0
+			 && bfd_link_executable (info)))
 		  {
 		    asection *srel;
-		    bfd_boolean tprel_known = bfd_link_executable (info);
 
-		    need = got_relocs_needed (*lgot_masks, need, tprel_known);
+		    need *= sizeof (Elf32_External_Rela) / 4;
 		    srel = htab->elf.srelgot;
 		    if ((*lgot_masks & (TLS_TLS | PLT_IFUNC)) == PLT_IFUNC)
 		      srel = htab->elf.irelplt;
@@ -5676,7 +5657,7 @@ ppc_elf_size_dynamic_sections (bfd *output_bfd,
   if (htab->tlsld_got.refcount > 0)
     {
       htab->tlsld_got.offset = allocate_got (htab, 8);
-      if (bfd_link_pic (info))
+      if (bfd_link_dll (info))
 	htab->elf.srelgot->size += sizeof (Elf32_External_Rela);
     }
   else
@@ -7247,7 +7228,7 @@ ppc_elf_relocate_section (bfd *output_bfd,
 		 stays with its arg setup insns, ie. that the next
 		 reloc is the __tls_get_addr call associated with
 		 the current reloc.  Edit both insns.  */
-	      if (input_section->has_tls_get_addr_call
+	      if (input_section->nomark_tls_get_addr
 		  && rel + 1 < relend
 		  && branch_reloc_hash_match (input_bfd, rel + 1,
 					      htab->tls_get_addr))
@@ -7750,8 +7731,7 @@ ppc_elf_relocate_section (bfd *output_bfd,
 
 	    indx = 0;
 	    if (tls_type == (TLS_TLS | TLS_LD)
-		&& (h == NULL
-		    || !h->def_dynamic))
+		&& SYMBOL_REFERENCES_LOCAL (info, h))
 	      offp = &htab->tlsld_got.offset;
 	    else if (h != NULL)
 	      {
@@ -7793,8 +7773,8 @@ ppc_elf_relocate_section (bfd *output_bfd,
 
 		if (offp == &htab->tlsld_got.offset)
 		  tls_m = TLS_LD;
-		else if (h == NULL
-			 || !h->def_dynamic)
+		else if ((tls_m & TLS_LD) != 0
+			 && SYMBOL_REFERENCES_LOCAL (info, h))
 		  tls_m &= ~TLS_LD;
 
 		/* We might have multiple got entries for this sym.
@@ -7828,9 +7808,8 @@ ppc_elf_relocate_section (bfd *output_bfd,
 		    if (indx != 0
 			|| (bfd_link_pic (info)
 			    && (h == NULL
-				|| !UNDEFWEAK_NO_DYNAMIC_RELOC (info, h)
-				|| offp == &htab->tlsld_got.offset)
-			    && !(tls_ty == (TLS_TLS | TLS_TPREL)
+				|| !UNDEFWEAK_NO_DYNAMIC_RELOC (info, h))
+			    && !(tls_ty != 0
 				 && bfd_link_executable (info)
 				 && SYMBOL_REFERENCES_LOCAL (info, h))))
 		      {
@@ -7940,8 +7919,7 @@ ppc_elf_relocate_section (bfd *output_bfd,
 		if (tls_type != (TLS_TLS | TLS_LD))
 		  {
 		    if ((tls_mask & TLS_LD) != 0
-			&& !(h == NULL
-			     || !h->def_dynamic))
+			&& !SYMBOL_REFERENCES_LOCAL (info, h))
 		      off += 8;
 		    if (tls_type != (TLS_TLS | TLS_GD))
 		      {
diff --git a/bfd/elf64-ppc.c b/bfd/elf64-ppc.c
index 88ace7e6fe..731f1ca657 100644
--- a/bfd/elf64-ppc.c
+++ b/bfd/elf64-ppc.c
@@ -3212,8 +3212,9 @@ struct ppc_link_hash_table
 /* Nonzero if this section has TLS related relocations.  */
 #define has_tls_reloc sec_flg0
 
-/* Nonzero if this section has an old-style call to __tls_get_addr.  */
-#define has_tls_get_addr_call sec_flg1
+/* Nonzero if this section has a call to __tls_get_addr lacking marker
+   relocations.  */
+#define nomark_tls_get_addr sec_flg1
 
 /* Nonzero if this section has any toc or got relocs.  */
 #define has_toc_reloc sec_flg2
@@ -4537,8 +4538,6 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,
 	    sec->has_toc_reloc = 1;
 	}
 
-      tls_type = 0;
-      ifunc = NULL;
       r_type = ELF64_R_TYPE (rel->r_info);
       switch (r_type)
 	{
@@ -4591,6 +4590,7 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,
 	  break;
 	}
 
+      ifunc = NULL;
       if (h != NULL)
 	{
 	  if (h->type == STT_GNU_IFUNC)
@@ -4616,6 +4616,7 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,
 	    }
 	}
 
+      tls_type = 0;
       switch (r_type)
 	{
 	case R_PPC64_TLSGD:
@@ -4909,7 +4910,7 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,
 		    ;
 		  else
 		    /* Mark this section as having an old-style call.  */
-		    sec->has_tls_get_addr_call = 1;
+		    sec->nomark_tls_get_addr = 1;
 		}
 	      plt_list = &h->plt.plist;
 	    }
@@ -7777,11 +7778,9 @@ ppc64_elf_tls_optimize (struct bfd_link_info *info)
 		    value = sym->st_value;
 
 		  ok_tprel = FALSE;
-		  is_local = FALSE;
-		  if (h == NULL
-		      || !h->def_dynamic)
+		  is_local = SYMBOL_REFERENCES_LOCAL (info, h);
+		  if (is_local)
 		    {
-		      is_local = TRUE;
 		      if (h != NULL
 			  && h->root.type == bfd_link_hash_undefweak)
 			ok_tprel = TRUE;
@@ -7809,7 +7808,7 @@ ppc64_elf_tls_optimize (struct bfd_link_info *info)
 		     setup insn.  If we don't find matching arg setup
 		     relocs, don't do any tls optimization.  */
 		  if (pass == 0
-		      && sec->has_tls_get_addr_call
+		      && sec->nomark_tls_get_addr
 		      && h != NULL
 		      && (h == &htab->tls_get_addr->elf
 			  || h == &htab->tls_get_addr_fd->elf)
@@ -7881,8 +7880,11 @@ ppc64_elf_tls_optimize (struct bfd_link_info *info)
 			}
 		      continue;
 
-		    case R_PPC64_TLSGD:
 		    case R_PPC64_TLSLD:
+		      if (!is_local)
+			continue;
+		      /* Fall through.  */
+		    case R_PPC64_TLSGD:
 		      if (rel + 1 < relend
 			  && is_plt_seq_reloc (ELF64_R_TYPE (rel[1].r_info)))
 			{
@@ -8010,7 +8012,7 @@ ppc64_elf_tls_optimize (struct bfd_link_info *info)
 		  if (pass == 0)
 		    {
 		      if (!expecting_tls_get_addr
-			  || !sec->has_tls_get_addr_call)
+			  || !sec->nomark_tls_get_addr)
 			continue;
 
 		      if (rel + 1 < relend
@@ -8062,12 +8064,12 @@ ppc64_elf_tls_optimize (struct bfd_link_info *info)
 		     Disable optimization in this case.  */
 		  if ((tls_clear & (TLS_GD | TLS_LD)) != 0
 		      && (tls_set & TLS_EXPLICIT) == 0
-		      && !sec->has_tls_get_addr_call
+		      && !sec->nomark_tls_get_addr
 		      && ((*tls_mask & (TLS_TLS | TLS_MARK))
 			  != (TLS_TLS | TLS_MARK)))
 		    continue;
 
-		  if (expecting_tls_get_addr)
+		  if (expecting_tls_get_addr == 1 + !sec->nomark_tls_get_addr)
 		    {
 		      struct plt_entry *ent = NULL;
 
@@ -9252,7 +9254,7 @@ allocate_got (struct elf_link_hash_entry *h,
       htab->got_reli_size += rentsize;
     }
   else if (((bfd_link_pic (info)
-	     && !((gent->tls_type & TLS_TPREL) != 0
+	     && !(gent->tls_type != 0
 		  && bfd_link_executable (info)
 		  && SYMBOL_REFERENCES_LOCAL (info, h)))
 	    || (htab->elf.dynamic_sections_created
@@ -9358,7 +9360,7 @@ allocate_dynrelocs (struct elf_link_hash_entry *h, void *inf)
     if (gent->got.refcount > 0)
       {
 	if ((gent->tls_type & TLS_LD) != 0
-	    && !h->def_dynamic)
+	    && SYMBOL_REFERENCES_LOCAL (info, h))
 	  {
 	    ppc64_tlsld_got (gent->owner)->got.refcount += 1;
 	    *pgent = gent->next;
@@ -9784,7 +9786,7 @@ ppc64_elf_size_dynamic_sections (bfd *output_bfd,
 			htab->got_reli_size += rel_size;
 		      }
 		    else if (bfd_link_pic (info)
-			     && !((ent->tls_type & TLS_TPREL) != 0
+			     && !(ent->tls_type != 0
 				  && bfd_link_executable (info)))
 		      {
 			asection *srel = ppc64_elf_tdata (ibfd)->relgot;
@@ -9861,7 +9863,7 @@ ppc64_elf_size_dynamic_sections (bfd *output_bfd,
 	      ent->got.offset = s->size;
 	      ent->owner = ibfd;
 	      s->size += 16;
-	      if (bfd_link_pic (info))
+	      if (bfd_link_dll (info))
 		{
 		  asection *srel = ppc64_elf_tdata (ibfd)->relgot;
 		  srel->size += sizeof (Elf64_External_Rela);
@@ -12156,7 +12158,7 @@ ppc64_elf_layout_multitoc (struct bfd_link_info *info)
 		  htab->got_reli_size += rel_size;
 		}
 	      else if (bfd_link_pic (info)
-		       && !((ent->tls_type & TLS_TPREL) != 0
+		       && !(ent->tls_type != 0
 			    && bfd_link_executable (info)))
 		{
 		  asection *srel = ppc64_elf_tdata (ibfd)->relgot;
@@ -12182,7 +12184,7 @@ ppc64_elf_layout_multitoc (struct bfd_link_info *info)
 	  asection *s = ppc64_elf_tdata (ibfd)->got;
 	  ent->got.offset = s->size;
 	  s->size += 16;
-	  if (bfd_link_pic (info))
+	  if (bfd_link_dll (info))
 	    {
 	      asection *srel = ppc64_elf_tdata (ibfd)->relgot;
 	      srel->size += sizeof (Elf64_External_Rela);
@@ -14640,7 +14642,7 @@ ppc64_elf_relocate_section (bfd *output_bfd,
 		 stays with its arg setup insns, ie. that the next
 		 reloc is the __tls_get_addr call associated with
 		 the current reloc.  Edit both insns.  */
-	      if (input_section->has_tls_get_addr_call
+	      if (input_section->nomark_tls_get_addr
 		  && rel + 1 < relend
 		  && branch_reloc_hash_match (input_bfd, rel + 1,
 					      htab->tls_get_addr,
@@ -15521,8 +15523,7 @@ ppc64_elf_relocate_section (bfd *output_bfd,
 	    struct got_entry *ent;
 
 	    if (tls_type == (TLS_TLS | TLS_LD)
-		&& (h == NULL
-		    || !h->elf.def_dynamic))
+		&& SYMBOL_REFERENCES_LOCAL (info, &h->elf))
 	      ent = ppc64_tlsld_got (input_bfd);
 	    else
 	      {
@@ -15597,10 +15598,8 @@ ppc64_elf_relocate_section (bfd *output_bfd,
 		else if (indx != 0
 			 || (bfd_link_pic (info)
 			     && (h == NULL
-				 || !UNDEFWEAK_NO_DYNAMIC_RELOC (info, &h->elf)
-				 || (tls_type == (TLS_TLS | TLS_LD)
-				     && !h->elf.def_dynamic))
-			     && !(tls_type == (TLS_TLS | TLS_TPREL)
+				 || !UNDEFWEAK_NO_DYNAMIC_RELOC (info, &h->elf))
+			     && !(tls_type != 0
 				  && bfd_link_executable (info)
 				  && SYMBOL_REFERENCES_LOCAL (info, &h->elf))))
 		  relgot = ppc64_elf_tdata (ent->owner)->relgot;
diff --git a/bfd/plugin.c b/bfd/plugin.c
index 5f760e9c42..139f772168 100644
--- a/bfd/plugin.c
+++ b/bfd/plugin.c
@@ -366,11 +366,15 @@ register_ld_plugin_object_p (const bfd_target *(*object_p) (bfd *))
 static int
 load_plugin (bfd *abfd)
 {
-  char *plugin_dir;
-  char *p;
-  DIR *d;
-  struct dirent *ent;
+  /* The intent was to search ${libdir}/bfd-plugins for plugins, but
+     unfortunately the original implementation wasn't precisely that
+     when configuring binutils using --libdir.  Search in the proper
+     path first, then the old one for backwards compatibility.  */
+  static const char *path[]
+    = { LIBDIR "/bfd-plugins", BINDIR "/../lib/bfd-plugins" };
+  struct stat last_st;
   int found = 0;
+  unsigned int i;
 
   if (!has_plugin)
     return found;
@@ -381,38 +385,58 @@ load_plugin (bfd *abfd)
   if (plugin_program_name == NULL)
     return found;
 
-  plugin_dir = concat (BINDIR, "/../lib/bfd-plugins", NULL);
-  p = make_relative_prefix (plugin_program_name,
-			    BINDIR,
-			    plugin_dir);
-  free (plugin_dir);
-  plugin_dir = NULL;
-
-  d = opendir (p);
-  if (!d)
-    goto out;
-
-  while ((ent = readdir (d)))
+  /* Try not to search the same dir twice, by looking at st_dev and
+     st_ino for the dir.  If we are on a file system that always sets
+     st_ino to zero or the actual st_ino is zero we might waste some
+     time, but that doesn't matter too much.  */
+  last_st.st_dev = 0;
+  last_st.st_ino = 0;
+  for (i = 0; i < sizeof (path) / sizeof (path[0]); i++)
     {
-      char *full_name;
-      struct stat s;
-      int valid_plugin;
-
-      full_name = concat (p, "/", ent->d_name, NULL);
-      if (stat (full_name, &s) == 0 && S_ISREG (s.st_mode))
-	found = try_load_plugin (full_name, abfd, &valid_plugin);
-      if (has_plugin <= 0)
-	has_plugin = valid_plugin;
-      free (full_name);
+      char *plugin_dir = make_relative_prefix (plugin_program_name,
+					       BINDIR,
+					       path[i]);
+      if (plugin_dir)
+	{
+	  struct stat st;
+	  DIR *d;
+
+	  if (stat (plugin_dir, &st) == 0
+	      && S_ISDIR (st.st_mode)
+	      && !(last_st.st_dev == st.st_dev
+		   && last_st.st_ino == st.st_ino
+		   && st.st_ino != 0)
+	      && (d = opendir (plugin_dir)) != NULL)
+	    {
+	      struct dirent *ent;
+
+	      last_st.st_dev = st.st_dev;
+	      last_st.st_ino = st.st_ino;
+	      while ((ent = readdir (d)) != NULL)
+		{
+		  char *full_name;
+
+		  full_name = concat (plugin_dir, "/", ent->d_name, NULL);
+		  if (stat (full_name, &st) == 0 && S_ISREG (st.st_mode))
+		    {
+		      int valid_plugin;
+
+		      found = try_load_plugin (full_name, abfd, &valid_plugin);
+		      if (has_plugin <= 0)
+			has_plugin = valid_plugin;
+		    }
+		  free (full_name);
+		  if (found)
+		    break;
+		}
+	      closedir (d);
+	    }
+	  free (plugin_dir);
+	}
       if (found)
 	break;
     }
 
- out:
-  free (p);
-  if (d)
-    closedir (d);
-
   return found;
 }
 
diff --git a/bfd/po/bfd.pot b/bfd/po/bfd.pot
index 4fe8f735e4..44090ba9c1 100644
--- a/bfd/po/bfd.pot
+++ b/bfd/po/bfd.pot
@@ -8,7 +8,7 @@ msgid ""
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: bug-binutils@gnu.org\n"
-"POT-Creation-Date: 2019-09-30 10:59+0100\n"
+"POT-Creation-Date: 2019-10-12 14:58+0100\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
@@ -92,9 +92,9 @@ msgstr ""
 #: elf64-ppc.c:1346 elf64-ppc.c:1355 elf64-s390.c:328 elf64-s390.c:378
 #: elf64-x86-64.c:285 elfn32-mips.c:3786 elfxx-ia64.c:324 elfxx-riscv.c:955
 #: elfxx-sparc.c:589 elfxx-sparc.c:639 elfxx-tilegx.c:912 elfxx-tilegx.c:952
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:2214
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:2312 elf32-ia64.c:210
-#: elf32-ia64.c:3862 elf64-ia64.c:210 elf64-ia64.c:3862
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:2214
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:2312
+#: elf32-ia64.c:210 elf32-ia64.c:3862 elf64-ia64.c:210 elf64-ia64.c:3862
 #, c-format
 msgid "%pB: unsupported relocation type %#x"
 msgstr ""
@@ -265,7 +265,7 @@ msgid "using multiple gp values"
 msgstr ""
 
 #: coff-alpha.c:1501 coff-alpha.c:1507 elf.c:9212 elf32-mcore.c:100
-#: elf32-mcore.c:455 elf32-ppc.c:7687 elf32-ppc.c:8843 elf64-ppc.c:15452
+#: elf32-mcore.c:455 elf32-ppc.c:7668 elf32-ppc.c:8821 elf64-ppc.c:15454
 #, c-format
 msgid "%pB: %s unsupported"
 msgstr ""
@@ -907,9 +907,10 @@ msgstr ""
 #: elf-m10300.c:2092 elf32-arm.c:13445 elf32-i386.c:3403 elf32-m32r.c:2539
 #: elf32-m68k.c:3910 elf32-s390.c:3210 elf32-sh.c:3800 elf32-tilepro.c:3409
 #: elf32-xtensa.c:2965 elf64-s390.c:3159 elf64-x86-64.c:3961 elfxx-sparc.c:3904
-#: elfxx-tilegx.c:3793 ../../../binutils-gdb/bfd/elfnn-aarch64.c:5492
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:7080
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:2307
+#: elfxx-tilegx.c:3793
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:5492
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:7080
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:2307
 #, c-format
 msgid "%pB(%pA+%#<PRIx64>): unresolvable %s relocation against symbol `%s'"
 msgstr ""
@@ -1015,7 +1016,7 @@ msgstr ""
 msgid "%pB: invalid string offset %u >= %<PRIu64> for section `%s'"
 msgstr ""
 
-#: elf.c:509 ../../../binutils-gdb/bfd/elfnn-aarch64.c:8170
+#: elf.c:509 /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:8170
 #, c-format
 msgid "%pB symbol number %lu references nonexistent SHT_SYMTAB_SHNDX section"
 msgstr ""
@@ -1298,7 +1299,7 @@ msgstr ""
 
 #: elf32-arc.c:459 elf32-frv.c:6628 elf32-iq2000.c:868 elf32-m32c.c:914
 #: elf32-mt.c:562 elf32-rl78.c:1260 elf32-rx.c:3199 elf32-visium.c:839
-#: elf64-ppc.c:5250
+#: elf64-ppc.c:5251
 #, c-format
 msgid "private flags = 0x%lx:"
 msgstr ""
@@ -1345,7 +1346,7 @@ msgid ""
 msgstr ""
 
 #: elf32-arc.c:942 elf32-iq2000.c:844 elf32-m32c.c:889 elf32-m68hc1x.c:1383
-#: elf32-ppc.c:3855 elf64-sparc.c:727 elfxx-mips.c:15534
+#: elf32-ppc.c:3856 elf64-sparc.c:727 elfxx-mips.c:15534
 #, c-format
 msgid "%pB: uses different e_flags (%#x) fields than previous modules (%#x)"
 msgstr ""
@@ -1403,8 +1404,9 @@ msgid "%pB(%pA): internal error: unknown error"
 msgstr ""
 
 #: elf32-arc.c:2025 elf32-arc.c:2093 elf32-arm.c:15558 elf32-metag.c:2257
-#: elf32-nds32.c:5639 ../../../binutils-gdb/bfd/elfnn-aarch64.c:7735
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:511
+#: elf32-nds32.c:5639
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:7735
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:511
 #, c-format
 msgid ""
 "%pB: relocation %s against `%s' can not be used when making a shared object; "
@@ -1449,8 +1451,8 @@ msgid "no address assigned to the veneers output section %s"
 msgstr ""
 
 #: elf32-arm.c:4847 elf32-arm.c:6982 elf32-csky.c:3285 elf32-hppa.c:579
-#: elf32-m68hc1x.c:165 elf32-metag.c:1186 elf32-nios2.c:2208 elf64-ppc.c:3725
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:3235
+#: elf32-m68hc1x.c:165 elf32-metag.c:1186 elf32-nios2.c:2208 elf64-ppc.c:3726
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:3235
 #, c-format
 msgid "%pB: cannot create stub entry %s"
 msgstr ""
@@ -1648,29 +1650,29 @@ msgid "%pB(%pA+%#<PRIx64>): %s relocation against SEC_MERGE section"
 msgstr ""
 
 #: elf32-arm.c:13390 elf32-m68k.c:3947 elf32-xtensa.c:2703
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:6807
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:6807
 #, c-format
 msgid "%pB(%pA+%#<PRIx64>): %s used with TLS symbol %s"
 msgstr ""
 
 #: elf32-arm.c:13392 elf32-m68k.c:3949 elf32-xtensa.c:2705
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:6809
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:6809
 #, c-format
 msgid "%pB(%pA+%#<PRIx64>): %s used with non-TLS symbol %s"
 msgstr ""
 
 #: elf32-arm.c:13475 elf32-tic6x.c:2708
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:7144
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:7144
 msgid "out of range"
 msgstr ""
 
 #: elf32-arm.c:13479 elf32-nios2.c:4512 elf32-pru.c:933 elf32-tic6x.c:2712
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:7148
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:7148
 msgid "unsupported relocation"
 msgstr ""
 
 #: elf32-arm.c:13487 elf32-nios2.c:4522 elf32-pru.c:943 elf32-tic6x.c:2720
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:7156
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:7156
 msgid "unknown error"
 msgstr ""
 
@@ -1786,7 +1788,7 @@ msgstr ""
 #: elf32-arm.c:15114 elf32-bfin.c:4738 elf32-cris.c:3906 elf32-m68hc1x.c:1408
 #: elf32-m68k.c:1203 elf32-score.c:4000 elf32-score7.c:3805 elf32-vax.c:537
 #: elf32-xgate.c:494 elfxx-mips.c:16219
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:7310
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:7310
 #, c-format
 msgid "private flags = %lx:"
 msgstr ""
@@ -1916,7 +1918,8 @@ msgstr ""
 msgid " [FDPIC ABI supplement]"
 msgstr ""
 
-#: elf32-arm.c:15235 ../../../binutils-gdb/bfd/elfnn-aarch64.c:7313
+#: elf32-arm.c:15235
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:7313
 #, c-format
 msgid "<Unrecognised flag bits set>"
 msgstr ""
@@ -1924,8 +1927,8 @@ msgstr ""
 #: elf32-arm.c:15352 elf32-i386.c:1529 elf32-s390.c:960 elf32-tic6x.c:2783
 #: elf32-tilepro.c:1479 elf32-xtensa.c:1031 elf64-s390.c:882
 #: elf64-x86-64.c:1874 elfxx-sparc.c:1422 elfxx-tilegx.c:1700
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:7602
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:553
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:7602
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:553
 #, c-format
 msgid "%pB: bad symbol index: %d"
 msgstr ""
@@ -1938,11 +1941,11 @@ msgstr ""
 
 #: elf32-arm.c:16817 elf32-csky.c:1931 elf32-hppa.c:2088 elf32-lm32.c:2000
 #: elf32-m32r.c:2110 elf32-metag.c:2795 elf32-nds32.c:4330 elf32-or1k.c:2859
-#: elf32-ppc.c:5459 elf32-s390.c:1853 elf32-sh.c:2975 elf32-tic6x.c:3252
-#: elf32-tilepro.c:2245 elf64-ppc.c:9660 elf64-s390.c:1789 elfxx-sparc.c:2433
+#: elf32-ppc.c:5439 elf32-s390.c:1853 elf32-sh.c:2975 elf32-tic6x.c:3252
+#: elf32-tilepro.c:2245 elf64-ppc.c:9662 elf64-s390.c:1789 elfxx-sparc.c:2433
 #: elfxx-tilegx.c:2491 elfxx-x86.c:571
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:8943
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:1156
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:8943
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:1156
 #, c-format
 msgid "%pB: dynamic relocation against `%pT' in read-only section `%pA'\n"
 msgstr ""
@@ -2056,7 +2059,8 @@ msgstr ""
 msgid "internal error: dangerous relocation"
 msgstr ""
 
-#: elf32-avr.c:3339 ../../../binutils-gdb/bfd/elfnn-aarch64.c:3266
+#: elf32-avr.c:3339
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:3266
 #, c-format
 msgid "cannot create stub entry %s"
 msgstr ""
@@ -2486,7 +2490,7 @@ msgstr ""
 
 #: elf32-i386.c:1722 elf32-s390.c:1188 elf32-sh.c:5660 elf32-tilepro.c:1592
 #: elf32-xtensa.c:1203 elf64-s390.c:1120 elfxx-sparc.c:1591 elfxx-tilegx.c:1805
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:465
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:465
 #, c-format
 msgid "%pB: `%s' accessed both as normal and thread local symbol"
 msgstr ""
@@ -3038,70 +3042,70 @@ msgstr ""
 msgid "failed to install new APUinfo section"
 msgstr ""
 
-#: elf32-ppc.c:2860
+#: elf32-ppc.c:2861
 #, c-format
 msgid "%pB: relocation %s cannot be used when making a shared object"
 msgstr ""
 
-#: elf32-ppc.c:3577 elf32-ppc.c:3585
+#: elf32-ppc.c:3578 elf32-ppc.c:3586
 #, c-format
 msgid "%pB uses hard float, %pB uses soft float"
 msgstr ""
 
-#: elf32-ppc.c:3593 elf32-ppc.c:3601
+#: elf32-ppc.c:3594 elf32-ppc.c:3602
 #, c-format
 msgid ""
 "%pB uses double-precision hard float, %pB uses single-precision hard float"
 msgstr ""
 
-#: elf32-ppc.c:3620 elf32-ppc.c:3628
+#: elf32-ppc.c:3621 elf32-ppc.c:3629
 #, c-format
 msgid "%pB uses 64-bit long double, %pB uses 128-bit long double"
 msgstr ""
 
-#: elf32-ppc.c:3636 elf32-ppc.c:3644
+#: elf32-ppc.c:3637 elf32-ppc.c:3645
 #, c-format
 msgid "%pB uses IBM long double, %pB uses IEEE long double"
 msgstr ""
 
-#: elf32-ppc.c:3711 elf32-ppc.c:3720
+#: elf32-ppc.c:3712 elf32-ppc.c:3721
 #, c-format
 msgid "%pB uses AltiVec vector ABI, %pB uses SPE vector ABI"
 msgstr ""
 
-#: elf32-ppc.c:3749 elf32-ppc.c:3758
+#: elf32-ppc.c:3750 elf32-ppc.c:3759
 #, c-format
 msgid "%pB uses r3/r4 for small structure returns, %pB uses memory"
 msgstr ""
 
-#: elf32-ppc.c:3819
+#: elf32-ppc.c:3820
 #, c-format
 msgid ""
 "%pB: compiled with -mrelocatable and linked with modules compiled normally"
 msgstr ""
 
-#: elf32-ppc.c:3827
+#: elf32-ppc.c:3828
 #, c-format
 msgid ""
 "%pB: compiled normally and linked with modules compiled with -mrelocatable"
 msgstr ""
 
-#: elf32-ppc.c:3896
+#: elf32-ppc.c:3897
 #, c-format
 msgid "%pB(%pA+0x%lx): expected 16A style relocation on 0x%08x insn"
 msgstr ""
 
-#: elf32-ppc.c:3915
+#: elf32-ppc.c:3916
 #, c-format
 msgid "%pB(%pA+0x%lx): expected 16D style relocation on 0x%08x insn"
 msgstr ""
 
-#: elf32-ppc.c:4018
+#: elf32-ppc.c:4019
 #, c-format
 msgid "bss-plt forced due to %pB"
 msgstr ""
 
-#: elf32-ppc.c:4020
+#: elf32-ppc.c:4021
 msgid "bss-plt forced by profiling"
 msgstr ""
 
@@ -3109,40 +3113,40 @@ msgstr ""
 #. could just mark this symbol to exclude it
 #. from tls optimization but it's safer to skip
 #. the entire optimization.
-#: elf32-ppc.c:4596 elf64-ppc.c:8049
+#: elf32-ppc.c:4596 elf64-ppc.c:8051
 #, c-format
 msgid "%H arg lost __tls_get_addr, TLS optimization disabled\n"
 msgstr ""
 
-#: elf32-ppc.c:5567 elf32-sh.c:3078 elf32-tilepro.c:2339 elfxx-sparc.c:2532
+#: elf32-ppc.c:5547 elf32-sh.c:3078 elf32-tilepro.c:2339 elfxx-sparc.c:2532
 #: elfxx-tilegx.c:2579
 #, c-format
 msgid "%pB: dynamic relocation in read-only section `%pA'\n"
 msgstr ""
 
-#: elf32-ppc.c:7447
+#: elf32-ppc.c:7428
 msgid "%P: %H: error: %s with unexpected instruction %x\n"
 msgstr ""
 
-#: elf32-ppc.c:7484
+#: elf32-ppc.c:7465
 msgid "%H: fixup branch overflow\n"
 msgstr ""
 
-#: elf32-ppc.c:7524 elf32-ppc.c:7560
+#: elf32-ppc.c:7505 elf32-ppc.c:7541
 #, c-format
 msgid "%pB(%pA+%#<PRIx64>): error: %s with unexpected instruction %#x"
 msgstr ""
 
-#: elf32-ppc.c:7624
+#: elf32-ppc.c:7605
 #, c-format
 msgid "%X%H: unsupported bss-plt -fPIC ifunc %s\n"
 msgstr ""
 
-#: elf32-ppc.c:7663 elf64-ppc.c:16330
+#: elf32-ppc.c:7644 elf64-ppc.c:16329
 msgid "%H: warning: %s unexpected insn %#x.\n"
 msgstr ""
 
-#: elf32-ppc.c:7975
+#: elf32-ppc.c:7953
 #, c-format
 msgid "%H: non-zero addend on %s reloc against `%s'\n"
 msgstr ""
@@ -3155,54 +3159,54 @@ msgstr ""
 #. local won't have the +32k reloc addend trick marking
 #. -fPIC code, so the linker won't know whether r30 is
 #. _GLOBAL_OFFSET_TABLE_ or pointing into a .got2 section.
-#: elf32-ppc.c:8007
+#: elf32-ppc.c:7985
 #, c-format
 msgid "%X%H: @local call to ifunc %s\n"
 msgstr ""
 
-#: elf32-ppc.c:8185
+#: elf32-ppc.c:8163
 #, c-format
 msgid "%H: relocation %s for indirect function %s unsupported\n"
 msgstr ""
 
-#: elf32-ppc.c:8521 elf32-ppc.c:8552 elf32-ppc.c:8643 elf32-ppc.c:8739
+#: elf32-ppc.c:8499 elf32-ppc.c:8530 elf32-ppc.c:8621 elf32-ppc.c:8717
 #, c-format
 msgid ""
 "%pB: the target (%s) of a %s relocation is in the wrong output section (%s)"
 msgstr ""
 
-#: elf32-ppc.c:8869 elf32-ppc.c:8887
+#: elf32-ppc.c:8847 elf32-ppc.c:8865
 msgid "%X%P: %H: %s relocation unsupported for bss-plt\n"
 msgstr ""
 
-#: elf32-ppc.c:8968
+#: elf32-ppc.c:8946
 #, c-format
 msgid "%H: error: %s against `%s' not a multiple of %u\n"
 msgstr ""
 
-#: elf32-ppc.c:8997
+#: elf32-ppc.c:8975
 #, c-format
 msgid "%H: unresolvable %s relocation against symbol `%s'\n"
 msgstr ""
 
-#: elf32-ppc.c:9078
+#: elf32-ppc.c:9056
 #, c-format
 msgid "%H: %s reloc against `%s': error %d\n"
 msgstr ""
 
-#: elf32-ppc.c:9969 elf64-ppc.c:16883
+#: elf32-ppc.c:9947 elf64-ppc.c:16882
 msgid ""
 "%X%P: text relocations and GNU indirect functions will result in a segfault "
 "at runtime\n"
 msgstr ""
 
-#: elf32-ppc.c:9973 elf64-ppc.c:16887
+#: elf32-ppc.c:9951 elf64-ppc.c:16886
 msgid ""
 "%P: warning: text relocations and GNU indirect functions may result in a "
 "segfault at runtime\n"
 msgstr ""
 
-#: elf32-ppc.c:10018
+#: elf32-ppc.c:9996
 #, c-format
 msgid "%s not defined in linker created %pA"
 msgstr ""
@@ -3573,7 +3577,7 @@ msgstr ""
 msgid "overlay stub relocation overflow"
 msgstr ""
 
-#: elf32-spu.c:1989 elf64-ppc.c:14057
+#: elf32-spu.c:1989 elf64-ppc.c:14059
 msgid "stubs don't match calculated size"
 msgstr ""
 
@@ -3721,8 +3725,8 @@ msgid "warning: %pB and %pB differ in whether code is compiled for DSBT"
 msgstr ""
 
 #: elf32-tilepro.c:3761 elfxx-tilegx.c:4145 elfxx-x86.c:1433
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:9840
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:2610
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:9840
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:2610
 #, c-format
 msgid "discarded output section: `%pA'"
 msgstr ""
@@ -4084,7 +4088,8 @@ msgstr ""
 msgid "%pB: change in gp: BRSGP %s"
 msgstr ""
 
-#: elf64-alpha.c:4509 mach-o.c:616 ../../../binutils-gdb/bfd/elfnn-riscv.c:513
+#: elf64-alpha.c:4509 mach-o.c:616
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:513
 msgid "<unknown>"
 msgstr ""
 
@@ -4322,139 +4327,139 @@ msgid ""
 "internal inconsistency: remaining %lu != max %lu; please report this bug"
 msgstr ""
 
-#: elf64-ppc.c:4051
+#: elf64-ppc.c:4052
 #, c-format
 msgid "symbol '%s' has invalid st_other for ABI version 1"
 msgstr ""
 
-#: elf64-ppc.c:4226
+#: elf64-ppc.c:4227
 #, c-format
 msgid "%pB .opd not allowed in ABI version %d"
 msgstr ""
 
-#: elf64-ppc.c:4814
+#: elf64-ppc.c:4815
 #, c-format
 msgid "%H: %s reloc unsupported in shared libraries and PIEs\n"
 msgstr ""
 
-#: elf64-ppc.c:5219
+#: elf64-ppc.c:5220
 #, c-format
 msgid "%pB uses unknown e_flags 0x%lx"
 msgstr ""
 
-#: elf64-ppc.c:5227
+#: elf64-ppc.c:5228
 #, c-format
 msgid "%pB: ABI version %ld is not compatible with ABI version %ld output"
 msgstr ""
 
-#: elf64-ppc.c:5254
+#: elf64-ppc.c:5255
 #, c-format
 msgid " [abiv%ld]"
 msgstr ""
 
-#: elf64-ppc.c:6445
+#: elf64-ppc.c:6446
 msgid ""
 "%P: copy reloc against `%pT' requires lazy plt linking; avoid setting "
 "LD_BIND_NOW=1 or upgrade gcc\n"
 msgstr ""
 
-#: elf64-ppc.c:6717
+#: elf64-ppc.c:6718
 #, c-format
 msgid "%pB: undefined symbol on R_PPC64_TOCSAVE relocation"
 msgstr ""
 
-#: elf64-ppc.c:6954
+#: elf64-ppc.c:6955
 #, c-format
 msgid "dynreloc miscount for %pB, section %pA"
 msgstr ""
 
-#: elf64-ppc.c:7043
+#: elf64-ppc.c:7044
 #, c-format
 msgid "%pB: .opd is not a regular array of opd entries"
 msgstr ""
 
-#: elf64-ppc.c:7053
+#: elf64-ppc.c:7054
 #, c-format
 msgid "%pB: unexpected reloc type %u in .opd section"
 msgstr ""
 
-#: elf64-ppc.c:7075
+#: elf64-ppc.c:7076
 #, c-format
 msgid "%pB: undefined sym `%s' in .opd section"
 msgstr ""
 
-#: elf64-ppc.c:7564
+#: elf64-ppc.c:7565
 msgid ""
 "warning: --plt-localentry is especially dangerous without ld.so support to "
 "detect ABI violations"
 msgstr ""
 
-#: elf64-ppc.c:7819
+#: elf64-ppc.c:7818
 msgid "%H __tls_get_addr lost arg, TLS optimization disabled\n"
 msgstr ""
 
-#: elf64-ppc.c:8201 elf64-ppc.c:8909
+#: elf64-ppc.c:8203 elf64-ppc.c:8911
 #, c-format
 msgid "%s defined on removed toc entry"
 msgstr ""
 
-#: elf64-ppc.c:8866
+#: elf64-ppc.c:8868
 #, c-format
 msgid "%H: %s references optimized away TOC entry\n"
 msgstr ""
 
-#: elf64-ppc.c:9090
+#: elf64-ppc.c:9092
 #, c-format
 msgid "%H: got/toc optimization is not supported for %s instruction\n"
 msgstr ""
 
-#: elf64-ppc.c:9938
+#: elf64-ppc.c:9940
 #, c-format
 msgid "warning: discarding dynamic section %s"
 msgstr ""
 
-#: elf64-ppc.c:11002
+#: elf64-ppc.c:11004
 msgid "%P: cannot find opd entry toc for `%pT'\n"
 msgstr ""
 
-#: elf64-ppc.c:11091
+#: elf64-ppc.c:11093
 #, c-format
 msgid "long branch stub `%s' offset overflow"
 msgstr ""
 
-#: elf64-ppc.c:11118
+#: elf64-ppc.c:11120
 #, c-format
 msgid "can't find branch stub `%s'"
 msgstr ""
 
-#: elf64-ppc.c:11182 elf64-ppc.c:11449 elf64-ppc.c:13618
+#: elf64-ppc.c:11184 elf64-ppc.c:11451 elf64-ppc.c:13620
 #, c-format
 msgid "%P: linkage table error against `%pT'\n"
 msgstr ""
 
-#: elf64-ppc.c:11627
+#: elf64-ppc.c:11629
 #, c-format
 msgid "can't build branch stub `%s'"
 msgstr ""
 
-#: elf64-ppc.c:12606
+#: elf64-ppc.c:12608
 #, c-format
 msgid "%pB section %pA exceeds stub group size"
 msgstr ""
 
-#: elf64-ppc.c:14016 elf64-ppc.c:14035
+#: elf64-ppc.c:14018 elf64-ppc.c:14037
 #, c-format
 msgid "%s offset too large for .eh_frame sdata4 encoding"
 msgstr ""
 
-#: elf64-ppc.c:14071
+#: elf64-ppc.c:14073
 #, c-format
 msgid "linker stubs in %u group\n"
 msgid_plural "linker stubs in %u groups\n"
 msgstr[0] ""
 msgstr[1] ""
 
-#: elf64-ppc.c:14075
+#: elf64-ppc.c:14077
 #, c-format
 msgid ""
 "  branch         %lu\n"
@@ -4472,48 +4477,48 @@ msgid ""
 "  global entry   %lu"
 msgstr ""
 
-#: elf64-ppc.c:14409
+#: elf64-ppc.c:14411
 #, c-format
 msgid "%H: %s used with TLS symbol `%pT'\n"
 msgstr ""
 
-#: elf64-ppc.c:14411
+#: elf64-ppc.c:14413
 #, c-format
 msgid "%H: %s used with non-TLS symbol `%pT'\n"
 msgstr ""
 
-#: elf64-ppc.c:15165
+#: elf64-ppc.c:15167
 #, c-format
 msgid "%H: call to `%pT' lacks nop, can't restore toc; (plt call stub)\n"
 msgstr ""
 
-#: elf64-ppc.c:15171
+#: elf64-ppc.c:15173
 #, c-format
 msgid ""
 "%H: call to `%pT' lacks nop, can't restore toc; (toc save/adjust stub)\n"
 msgstr ""
 
-#: elf64-ppc.c:16057
+#: elf64-ppc.c:16056
 #, c-format
 msgid "%H: %s for indirect function `%pT' unsupported\n"
 msgstr ""
 
-#: elf64-ppc.c:16186
+#: elf64-ppc.c:16185
 #, c-format
 msgid "%P: %pB: %s is not supported for `%pT'\n"
 msgstr ""
 
-#: elf64-ppc.c:16445
+#: elf64-ppc.c:16444
 #, c-format
 msgid "%H: error: %s not a multiple of %u\n"
 msgstr ""
 
-#: elf64-ppc.c:16468
+#: elf64-ppc.c:16467
 #, c-format
 msgid "%H: unresolvable %s against `%pT'\n"
 msgstr ""
 
-#: elf64-ppc.c:16613
+#: elf64-ppc.c:16612
 #, c-format
 msgid "%H: %s against `%pT': error %d\n"
 msgstr ""
@@ -4610,7 +4615,8 @@ msgstr ""
 msgid "%pB: '%s' accessed both as normal and thread local symbol"
 msgstr ""
 
-#: elf64-x86-64.c:2700 ../../../binutils-gdb/bfd/elfnn-aarch64.c:5533
+#: elf64-x86-64.c:2700
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:5533
 #, c-format
 msgid ""
 "%pB: relocation %s against STT_GNU_IFUNC symbol `%s' has non-zero addend: "
@@ -4964,8 +4970,9 @@ msgid ""
 "%pB: warning: Weak TLS is implementation defined and may not work as expected"
 msgstr ""
 
-#: elfxx-aarch64.c:738 ../../../binutils-gdb/bfd/elfnn-aarch64.c:10038
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:10045
+#: elfxx-aarch64.c:738
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:10038
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:10045
 #, c-format
 msgid ""
 "%pB: warning: BTI turned on by -z force-bti when all inputs do not have BTI "
@@ -5329,7 +5336,8 @@ msgstr ""
 msgid " [not 32bitmode]"
 msgstr ""
 
-#: elfxx-sparc.c:3111 ../../../binutils-gdb/bfd/elfnn-aarch64.c:5517
+#: elfxx-sparc.c:3111
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:5517
 #, c-format
 msgid ""
 "%pB: relocation %s against STT_GNU_IFUNC symbol `%s' isn't handled by %s"
@@ -8194,142 +8202,142 @@ msgid "TOC overflow: %#<PRIx64> > 0x10000; try -mminimal-toc when compiling"
 msgstr ""
 
 #. Not fatal, this callback cannot fail.
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:2917
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:2917
 #, c-format
 msgid "unknown attribute for symbol `%s': 0x%02x"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:5236
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:5236
 #, c-format
 msgid "%pB: error: erratum 835769 stub out of range (input file too large)"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:5328
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:5328
 #, c-format
 msgid "%pB: error: erratum 843419 stub out of range (input file too large)"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:5341
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:5341
 msgid "%pB: error: erratum 843419 immediate 0x%"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:5875
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:5875
 #, c-format
 msgid ""
 "%pB: relocation %s against symbol `%s' which may bind externally can not be "
 "used when making a shared object; recompile with -fPIC"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:5968
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:5968
 #, c-format
 msgid ""
 "%pB: local symbol descriptor table be NULL when applying relocation %s "
 "against local symbol"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:6081
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:6118
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:6081
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:6118
 #, c-format
 msgid "%pB: TLS relocation %s against undefined symbol `%s'"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:7103
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:7103
 msgid "too many GOT entries for -fpic, please recompile with -fPIC"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:7131
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:7131
 msgid ""
 "one possible cause of this error is that the symbol is being referenced in "
 "the indicated code as if it had a larger alignment than was declared where "
 "it was defined"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-aarch64.c:7716
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-aarch64.c:7716
 #, c-format
 msgid ""
 "%pB: relocation %s against `%s' can not be used when making a shared object"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:182
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:217
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:182
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:217
 #, c-format
 msgid "%pB: warning: RVE PLT generation not supported"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:2342
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:2342
 msgid "%X%P: internal error: out of range error\n"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:2346
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:2346
 msgid "%X%P: internal error: unsupported relocation error\n"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:2356
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:2356
 msgid "%X%P: internal error: unknown error\n"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:2742
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:2742
 #, c-format
 msgid "error: %pB: Mis-matched ISA version for '%s' extension. %d.%d vs %d.%d"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:2760
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:2760
 #, c-format
 msgid ""
 "error: %pB: corrupted ISA string '%s'. First letter should be 'i' or 'e' but "
 "got '%s'."
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:2804
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:2804
 #, c-format
 msgid "error: %pB: Mis-matched ISA string to merge '%s' and '%s'."
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:2952
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:2952
 #, c-format
 msgid "error: %pB: ISA string of input (%s) doesn't match output (%s)."
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:2977
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:2977
 #, c-format
 msgid "error: %pB: XLEN of input (%u) doesn't match output (%u)."
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:2985
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:2985
 #, c-format
 msgid "error: %pB: Unsupported XLEN (%u), you might be using wrong emulation."
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:3070
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:3070
 #, c-format
 msgid "error: %pB: conflicting priv spec version (major/minor/revision)."
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:3086
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:3086
 #, c-format
 msgid ""
 "error: %pB use %u-byte stack aligned but the output use %u-byte stack "
 "aligned."
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:3126
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:3126
 #, c-format
 msgid ""
 "%pB: ABI is incompatible with that of the selected emulation:\n"
 "  target emulation `%s' does not match `%s'"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:3180
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:3180
 #, c-format
 msgid "%pB: can't link %s modules with %s modules"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:3190
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:3190
 #, c-format
 msgid "%pB: can't link RVE with other target"
 msgstr ""
 
-#: ../../../binutils-gdb/bfd/elfnn-riscv.c:3696
+#: /work/sources/binutils/branches/2.33/bfd/elfnn-riscv.c:3696
 #, c-format
 msgid ""
 "%pB(%pA+%#<PRIx64>): %<PRId64> bytes required for alignment to %<PRId64>-"
diff --git a/bfd/version.m4 b/bfd/version.m4
index 7f2f06fa17..d5b09a1cfe 100644
--- a/bfd/version.m4
+++ b/bfd/version.m4
@@ -1 +1 @@
-m4_define([BFD_VERSION], [2.33])
+m4_define([BFD_VERSION], [2.33.1])
diff --git a/binutils/ChangeLog b/binutils/ChangeLog
index e817655c21..d0e7778c15 100644
--- a/binutils/ChangeLog
+++ b/binutils/ChangeLog
@@ -1,3 +1,34 @@
+2019-10-12  Nick Clifton  <nickc@redhat.com>
+
+	Release 2.33.1
+	* configure: Regenerate.
+	* binutils.pot: Regenerate.
+
+2019-10-09  Alan Modra  <amodra@gmail.com>
+
+	Apply from master
+	2019-10-09  Alan Modra  <amodra@gmail.com>
+	PR 25079
+	* ar.c (decode_options): Don't try for command options if
+	write_armap or mri_mode is selected.
+
+	2019-09-30  Alan Modra  <amodra@gmail.com>
+	PR 25046
+	* readelf.c (process_program_headers): Clear dynamic_addr and
+	dynamic_size earlier.
+
+2019-10-02  Niklas Gürtler  <profclonk@gmail.com>
+
+	PR 24942
+	* objcopy.c (copy_usage): Update description of
+	--set-section-alignment.
+	(copy_main): Interpret numeric argument of --set-section-alignment
+	as a byte alignment, not a power of two alignment.
+	* doc/binutils.texi: Update description of
+	--set-section-alignment.
+	* testsuite/binutils-all/set-section-alignment.d: New test.
+	* testsuite/binutils-all/objcopy.exp: Run the new test.
+
 2019-09-30  Phil Blundell  <pb@pbcl.net>
 
 	Release 2.33
diff --git a/binutils/ar.c b/binutils/ar.c
index 4e953c054d..44a4d8f3a2 100644
--- a/binutils/ar.c
+++ b/binutils/ar.c
@@ -602,7 +602,8 @@ decode_options (int argc, char **argv)
   /* PR 13256: Allow for the possibility that the first command line option
      started with a dash (eg --plugin) but then the following option(s) are
      old style, non-dash-prefixed versions.  */
-  if (operation == none && optind > 0 && optind < argc)
+  if (operation == none && write_armap != 1 && !mri_mode
+      && optind > 0 && optind < argc)
     {
       argv += (optind - 1);
       argc -= (optind - 1);
diff --git a/binutils/configure b/binutils/configure
index f492b35457..317b1cff5c 100755
--- a/binutils/configure
+++ b/binutils/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for binutils 2.33.
+# Generated by GNU Autoconf 2.69 for binutils 2.33.1.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
@@ -587,8 +587,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='binutils'
 PACKAGE_TARNAME='binutils'
-PACKAGE_VERSION='2.33'
-PACKAGE_STRING='binutils 2.33'
+PACKAGE_VERSION='2.33.1'
+PACKAGE_STRING='binutils 2.33.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1372,7 +1372,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures binutils 2.33 to adapt to many kinds of systems.
+\`configure' configures binutils 2.33.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1443,7 +1443,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of binutils 2.33:";;
+     short | recursive ) echo "Configuration of binutils 2.33.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1570,7 +1570,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-binutils configure 2.33
+binutils configure 2.33.1
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -2218,7 +2218,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by binutils $as_me 2.33, which was
+It was created by binutils $as_me 2.33.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -4168,7 +4168,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='binutils'
- VERSION='2.33'
+ VERSION='2.33.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -15713,7 +15713,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by binutils $as_me 2.33, which was
+This file was extended by binutils $as_me 2.33.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -15779,7 +15779,7 @@ _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-binutils config.status 2.33
+binutils config.status 2.33.1
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
diff --git a/binutils/doc/binutils.texi b/binutils/doc/binutils.texi
index bb37cb0988..059d61c620 100644
--- a/binutils/doc/binutils.texi
+++ b/binutils/doc/binutils.texi
@@ -1622,9 +1622,9 @@ contents--just remove the section instead.  Not all flags are
 meaningful for all object file formats.
 
 @item --set-section-alignment @var{sectionpattern}=@var{align}
-Set the alignment for any sections matching @var{sectionpattern}.  @var{align}
-specifies the alignment as the exponent for the power of two, i.e. the
-alignment in bytes will be 2^@var{align}.
+Set the alignment for any sections matching @var{sectionpattern}.
+@var{align} specifies the alignment in bytes and must be a power of
+two, i.e. 1, 2, 4, 8@dots{}.
 
 @item --add-section @var{sectionname}=@var{filename}
 Add a new section named @var{sectionname} while copying the file.  The
diff --git a/binutils/objcopy.c b/binutils/objcopy.c
index b702e52d98..c05d4566b5 100644
--- a/binutils/objcopy.c
+++ b/binutils/objcopy.c
@@ -615,7 +615,7 @@ copy_usage (FILE *stream, int exit_status)
      --set-section-flags <name>=<flags>\n\
                                    Set section <name>'s properties to <flags>\n\
      --set-section-alignment <name>=<align>\n\
-                                   Set section <name>'s alignment to 2^<align> bytes\n\
+                                   Set section <name>'s alignment to <align> bytes\n\
      --add-section <name>=<file>   Add section <name> found in <file> to output\n\
      --update-section <name>=<file>\n\
                                    Update contents of section <name> with\n\
@@ -5283,24 +5283,37 @@ copy_main (int argc, char *argv[])
 	    const char *s;
 	    int len;
 	    char *name;
-	    int align;
+	    int palign, align;
 
 	    s = strchr (optarg, '=');
 	    if (s == NULL)
-	      fatal (_("bad format for %s"), "--set-section-alignment");
+	      fatal (_("bad format for --set-section-alignment: argument needed"));
 	    
-	    align = atoi(s+1);
-	    if (align < 0)
-	      fatal (_("bad format for %s"), "--set-section-alignment");
+	    align = atoi (s + 1);
+	    if (align <= 0)
+	      fatal (_("bad format for --set-section-alignment: numeric argument needed"));
 
+	    /* Convert integer alignment into a power-of-two alignment.  */
+	    palign = 0;
+	    while ((align & 1) == 0)
+	      {
+	    	align >>= 1;
+	    	++palign;
+	      }
+	    
+	    if (align != 1)
+	      /* Number has more than on 1, i.e. wasn't a power of 2.  */
+	      fatal (_("bad format for --set-section-alignment: alignment is not a power of two"));
+
+	    /* Add the alignment setting to the section list.  */
 	    len = s - optarg;
 	    name = (char *) xmalloc (len + 1);
 	    strncpy (name, optarg, len);
 	    name[len] = '\0';
 
 	    p = find_section_list (name, TRUE, SECTION_CONTEXT_SET_ALIGNMENT);
-
-	    p->alignment = align;
+	    if (p)
+	      p->alignment = palign;
 	  }
 	  break;
 	  
diff --git a/binutils/po/binutils.pot b/binutils/po/binutils.pot
index 92c75a8a53..a9259a114c 100644
--- a/binutils/po/binutils.pot
+++ b/binutils/po/binutils.pot
@@ -8,7 +8,7 @@ msgid ""
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: bug-binutils@gnu.org\n"
-"POT-Creation-Date: 2019-09-30 11:00+0100\n"
+"POT-Creation-Date: 2019-10-12 14:59+0100\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
@@ -96,7 +96,7 @@ msgstr ""
 msgid "%s: cannot find section %s"
 msgstr ""
 
-#: addr2line.c:448 ar.c:734 dlltool.c:3508 nm.c:1710 objcopy.c:5756
+#: addr2line.c:448 ar.c:735 dlltool.c:3508 nm.c:1710 objcopy.c:5769
 #: objdump.c:4291 size.c:153 strings.c:291 windmc.c:960 windres.c:816
 msgid "fatal error: libbfd ABI mismatch"
 msgstr ""
@@ -346,97 +346,97 @@ msgstr ""
 msgid "two different operation options specified"
 msgstr ""
 
-#: ar.c:588 ar.c:659 nm.c:1823
+#: ar.c:588 ar.c:660 nm.c:1823
 #, c-format
 msgid "sorry - this program has been built without plugin support\n"
 msgstr ""
 
-#: ar.c:790
+#: ar.c:791
 msgid "no operation specified"
 msgstr ""
 
-#: ar.c:793
+#: ar.c:794
 msgid "`u' is only meaningful with the `r' option."
 msgstr ""
 
-#: ar.c:796
+#: ar.c:797
 msgid "`u' is not meaningful with the `D' option."
 msgstr ""
 
-#: ar.c:799
+#: ar.c:800
 msgid "`u' modifier ignored since `D' is the default (see `U')"
 msgstr ""
 
-#: ar.c:808
+#: ar.c:809
 msgid "missing position arg."
 msgstr ""
 
-#: ar.c:814
+#: ar.c:815
 msgid "`N' is only meaningful with the `x' and `d' options."
 msgstr ""
 
-#: ar.c:816
+#: ar.c:817
 msgid "`N' missing value."
 msgstr ""
 
-#: ar.c:819
+#: ar.c:820
 msgid "Value for `N' must be positive."
 msgstr ""
 
-#: ar.c:835
+#: ar.c:836
 msgid "`x' cannot be used on thin archives."
 msgstr ""
 
-#: ar.c:882
+#: ar.c:883
 #, c-format
 msgid "internal error -- this option not implemented"
 msgstr ""
 
-#: ar.c:951
+#: ar.c:952
 #, c-format
 msgid "creating %s"
 msgstr ""
 
-#: ar.c:982
+#: ar.c:983
 #, c-format
 msgid "Cannot convert existing library %s to thin format"
 msgstr ""
 
-#: ar.c:988
+#: ar.c:989
 #, c-format
 msgid "Cannot convert existing thin library %s to normal format"
 msgstr ""
 
-#: ar.c:1020 ar.c:1084 ar.c:1414 objcopy.c:3391
+#: ar.c:1021 ar.c:1085 ar.c:1415 objcopy.c:3391
 #, c-format
 msgid "internal stat error on %s"
 msgstr ""
 
-#: ar.c:1039 ar.c:1117
+#: ar.c:1040 ar.c:1118
 #, c-format
 msgid "%s is not a valid archive"
 msgstr ""
 
-#: ar.c:1076 objcopy.c:3353
+#: ar.c:1077 objcopy.c:3353
 #, c-format
 msgid "illegal pathname found in archive member: %s"
 msgstr ""
 
-#: ar.c:1175
+#: ar.c:1176
 msgid "could not create temporary file whilst writing archive"
 msgstr ""
 
-#: ar.c:1319
+#: ar.c:1320
 #, c-format
 msgid "No member named `%s'\n"
 msgstr ""
 
-#: ar.c:1369
+#: ar.c:1370
 #, c-format
 msgid "no entry %s in archive %s!"
 msgstr ""
 
-#: ar.c:1508
+#: ar.c:1509
 #, c-format
 msgid "%s: no archive map to update"
 msgstr ""
@@ -4595,8 +4595,8 @@ msgid ""
 "                                   Set section <name>'s properties to "
 "<flags>\n"
 "     --set-section-alignment <name>=<align>\n"
-"                                   Set section <name>'s alignment to "
-"2^<align> bytes\n"
+"                                   Set section <name>'s alignment to <align> "
+"bytes\n"
 "     --add-section <name>=<file>   Add section <name> found in <file> to "
 "output\n"
 "     --update-section <name>=<file>\n"
@@ -5110,7 +5110,7 @@ msgid "unknown PE subsystem: %s"
 msgstr ""
 
 #: objcopy.c:4748 objcopy.c:5014 objcopy.c:5094 objcopy.c:5235 objcopy.c:5267
-#: objcopy.c:5290 objcopy.c:5294 objcopy.c:5317 objcopy.c:5321 objcopy.c:5341
+#: objcopy.c:5330 objcopy.c:5334 objcopy.c:5354
 #, c-format
 msgid "bad format for %s"
 msgstr ""
@@ -5152,86 +5152,99 @@ msgstr ""
 msgid "Warning: truncating gap-fill from 0x%s to 0x%x"
 msgstr ""
 
-#: objcopy.c:5396
+#: objcopy.c:5290
+msgid "bad format for --set-section-alignment: argument needed"
+msgstr ""
+
+#: objcopy.c:5294
+msgid "bad format for --set-section-alignment: numeric argument needed"
+msgstr ""
+
+#. Number has more than on 1, i.e. wasn't a power of 2.
+#: objcopy.c:5306
+msgid "bad format for --set-section-alignment: alignment is not a power of two"
+msgstr ""
+
+#: objcopy.c:5409
 #, c-format
 msgid "unknown long section names option '%s'"
 msgstr ""
 
-#: objcopy.c:5419
+#: objcopy.c:5432
 msgid "unable to parse alternative machine code"
 msgstr ""
 
-#: objcopy.c:5468
+#: objcopy.c:5481
 msgid "number of bytes to reverse must be positive and even"
 msgstr ""
 
-#: objcopy.c:5471
+#: objcopy.c:5484
 #, c-format
 msgid "Warning: ignoring previous --reverse-bytes value of %d"
 msgstr ""
 
-#: objcopy.c:5486
+#: objcopy.c:5499
 #, c-format
 msgid "%s: invalid reserve value for --heap"
 msgstr ""
 
-#: objcopy.c:5492
+#: objcopy.c:5505
 #, c-format
 msgid "%s: invalid commit value for --heap"
 msgstr ""
 
-#: objcopy.c:5517
+#: objcopy.c:5530
 #, c-format
 msgid "%s: invalid reserve value for --stack"
 msgstr ""
 
-#: objcopy.c:5523
+#: objcopy.c:5536
 #, c-format
 msgid "%s: invalid commit value for --stack"
 msgstr ""
 
-#: objcopy.c:5532
+#: objcopy.c:5545
 msgid "verilog data width must be at least 1 byte"
 msgstr ""
 
-#: objcopy.c:5549
+#: objcopy.c:5562
 msgid "--globalize-symbol(s) is incompatible with -G/--keep-global-symbol(s)"
 msgstr ""
 
-#: objcopy.c:5561
+#: objcopy.c:5574
 msgid "interleave start byte must be set with --byte"
 msgstr ""
 
-#: objcopy.c:5564
+#: objcopy.c:5577
 msgid "byte number must be less than interleave"
 msgstr ""
 
-#: objcopy.c:5567
+#: objcopy.c:5580
 msgid "interleave width must be less than or equal to interleave - byte`"
 msgstr ""
 
-#: objcopy.c:5596
+#: objcopy.c:5609
 #, c-format
 msgid "unknown input EFI target: %s"
 msgstr ""
 
-#: objcopy.c:5627
+#: objcopy.c:5640
 #, c-format
 msgid "unknown output EFI target: %s"
 msgstr ""
 
-#: objcopy.c:5640
+#: objcopy.c:5653
 #, c-format
 msgid "warning: could not locate '%s'.  System error message: %s"
 msgstr ""
 
-#: objcopy.c:5652
+#: objcopy.c:5665
 #, c-format
 msgid ""
 "warning: could not create temporary file whilst copying '%s', (error: %s)"
 msgstr ""
 
-#: objcopy.c:5685 objcopy.c:5699
+#: objcopy.c:5698 objcopy.c:5712
 #, c-format
 msgid "%s %s%c0x%s never used"
 msgstr ""
@@ -6895,64 +6908,64 @@ msgstr ""
 msgid "Out of memory reading %u program headers\n"
 msgstr ""
 
-#: readelf.c:5109
+#: readelf.c:5112
 msgid ""
 "possibly corrupt ELF header - it has a non-zero program header offset, but "
 "no program headers\n"
 msgstr ""
 
-#: readelf.c:5114
+#: readelf.c:5117
 #, c-format
 msgid ""
 "\n"
 "There are no program headers in this file.\n"
 msgstr ""
 
-#: readelf.c:5120
+#: readelf.c:5123
 #, c-format
 msgid ""
 "\n"
 "Elf file type is %s\n"
 msgstr ""
 
-#: readelf.c:5121
+#: readelf.c:5124
 #, c-format
 msgid "Entry point 0x%s\n"
 msgstr ""
 
-#: readelf.c:5122
+#: readelf.c:5125
 #, c-format
 msgid "There is %d program header, starting at offset %s\n"
 msgid_plural "There are %d program headers, starting at offset %s\n"
 msgstr[0] ""
 msgstr[1] ""
 
-#: readelf.c:5135 readelf.c:5137
+#: readelf.c:5138 readelf.c:5140
 #, c-format
 msgid ""
 "\n"
 "Program Headers:\n"
 msgstr ""
 
-#: readelf.c:5141
+#: readelf.c:5144
 #, c-format
 msgid ""
 "  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\n"
 msgstr ""
 
-#: readelf.c:5144
+#: readelf.c:5147
 #, c-format
 msgid ""
 "  Type           Offset   VirtAddr           PhysAddr           FileSiz  "
 "MemSiz   Flg Align\n"
 msgstr ""
 
-#: readelf.c:5148
+#: readelf.c:5151
 #, c-format
 msgid "  Type           Offset             VirtAddr           PhysAddr\n"
 msgstr ""
 
-#: readelf.c:5150
+#: readelf.c:5153
 #, c-format
 msgid "                 FileSiz            MemSiz              Flags  Align\n"
 msgstr ""
diff --git a/binutils/readelf.c b/binutils/readelf.c
index cc168163b2..0962877ad8 100644
--- a/binutils/readelf.c
+++ b/binutils/readelf.c
@@ -5101,6 +5101,9 @@ process_program_headers (Filedata * filedata)
   unsigned int i;
   Elf_Internal_Phdr * previous_load = NULL;
 
+  dynamic_addr = 0;
+  dynamic_size = 0;
+
   if (filedata->file_header.e_phnum == 0)
     {
       /* PR binutils/12467.  */
@@ -5151,9 +5154,6 @@ process_program_headers (Filedata * filedata)
 	}
     }
 
-  dynamic_addr = 0;
-  dynamic_size = 0;
-
   for (i = 0, segment = filedata->program_headers;
        i < filedata->file_header.e_phnum;
        i++, segment++)
diff --git a/binutils/testsuite/binutils-all/objcopy.exp b/binutils/testsuite/binutils-all/objcopy.exp
index 3e3c35556d..e12a8286a5 100644
--- a/binutils/testsuite/binutils-all/objcopy.exp
+++ b/binutils/testsuite/binutils-all/objcopy.exp
@@ -1310,3 +1310,5 @@ proc objcopy_remove_relocations_from_executable { } {
 objcopy_remove_relocations_from_executable
 
 run_dump_test "pr23633"
+
+run_dump_test "set-section-alignment"
diff --git a/binutils/testsuite/binutils-all/set-section-alignment.d b/binutils/testsuite/binutils-all/set-section-alignment.d
new file mode 100644
index 0000000000..d562ce1503
--- /dev/null
+++ b/binutils/testsuite/binutils-all/set-section-alignment.d
@@ -0,0 +1,9 @@
+#source: pr23633.s
+#PROG: objcopy
+#objcopy: --set-section-alignment .text=16
+#objdump: --section-headers
+#notarget: *-*-*aout *-*-*coff *-*-cygwin* *-*-darwin *-*-mingw* *-*-go32 *-*-*pe hppa*-*-hpux* ns32k-*-* powerpc-*-aix* rs6000-*-* rx-*-* *-*-vms
+
+#...
+.*\.text.*2\*\*4
+#pass
diff --git a/gas/ChangeLog b/gas/ChangeLog
index e522b8b7c0..75324bfaac 100644
--- a/gas/ChangeLog
+++ b/gas/ChangeLog
@@ -1,3 +1,18 @@
+2019-10-12  Nick Clifton  <nickc@redhat.com>
+
+	Release 2.33.1
+	* configure: Regenerate.
+	* po/gas.pot: Regenerate.
+
+2019-10-04  Jan Beulich  <jbeulich@suse.com>
+
+	PR gas/25012
+	* config/tc-i386.c (process_operands): Adjust handling of
+	PUSH/POP of segment registers.
+	* testsuite/gas/i386/x86-64-opcode.s: Add PUSHq/POPq case with
+	%fs/%gs operands. Add PUSHF/POPF case without suffix.
+	* testsuite/gas/i386/x86-64-opcode.d: Adjust expectations.
+
 2019-09-30  Phil Blundell  <pb@pbcl.net>
 
 	Release 2.33
diff --git a/gas/config/tc-i386.c b/gas/config/tc-i386.c
index 9a5043d0c2..cfa2e4d72a 100644
--- a/gas/config/tc-i386.c
+++ b/gas/config/tc-i386.c
@@ -7010,14 +7010,14 @@ duplicate:
 	  if (flag_code != CODE_64BIT
 	      ? i.tm.base_opcode == POP_SEG_SHORT
 		&& i.op[0].regs->reg_num == 1
-	      : (i.tm.base_opcode | 1) == POP_SEG_SHORT
+	      : (i.tm.base_opcode | 1) == POP_SEG386_SHORT
 		&& i.op[0].regs->reg_num < 4)
 	    {
 	      as_bad (_("you can't `%s %s%s'"),
 		      i.tm.name, register_prefix, i.op[0].regs->reg_name);
 	      return 0;
 	    }
-	  if ( i.op[0].regs->reg_num > 3 )
+	  if ( i.op[0].regs->reg_num > 3 && i.tm.opcode_length == 1 )
 	    {
 	      i.tm.base_opcode ^= POP_SEG_SHORT ^ POP_SEG386_SHORT;
 	      i.tm.opcode_length = 2;
diff --git a/gas/configure b/gas/configure
index 2e434bc6ad..c14eba1898 100755
--- a/gas/configure
+++ b/gas/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for gas 2.33.
+# Generated by GNU Autoconf 2.69 for gas 2.33.1.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
@@ -587,8 +587,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='gas'
 PACKAGE_TARNAME='gas'
-PACKAGE_VERSION='2.33'
-PACKAGE_STRING='gas 2.33'
+PACKAGE_VERSION='2.33.1'
+PACKAGE_STRING='gas 2.33.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1369,7 +1369,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures gas 2.33 to adapt to many kinds of systems.
+\`configure' configures gas 2.33.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1440,7 +1440,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of gas 2.33:";;
+     short | recursive ) echo "Configuration of gas 2.33.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1576,7 +1576,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-gas configure 2.33
+gas configure 2.33.1
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -2041,7 +2041,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by gas $as_me 2.33, which was
+It was created by gas $as_me 2.33.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -3988,7 +3988,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='gas'
- VERSION='2.33'
+ VERSION='2.33.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -15705,7 +15705,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by gas $as_me 2.33, which was
+This file was extended by gas $as_me 2.33.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -15771,7 +15771,7 @@ _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-gas config.status 2.33
+gas config.status 2.33.1
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
diff --git a/gas/po/gas.pot b/gas/po/gas.pot
index 6da07dfdb6..9dc94b18ea 100644
--- a/gas/po/gas.pot
+++ b/gas/po/gas.pot
@@ -9,7 +9,7 @@ msgid ""
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: bug-binutils@gnu.org\n"
-"POT-Creation-Date: 2019-09-30 10:59+0100\n"
+"POT-Creation-Date: 2019-10-12 14:58+0100\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
diff --git a/gas/testsuite/gas/i386/x86-64-opcode.d b/gas/testsuite/gas/i386/x86-64-opcode.d
index 35829f4f84..d8a1e44a45 100644
--- a/gas/testsuite/gas/i386/x86-64-opcode.d
+++ b/gas/testsuite/gas/i386/x86-64-opcode.d
@@ -255,13 +255,19 @@ Disassembly of section .text:
 [ 	]*[a-f0-9]+:	41 8f 00             	popq   \(%r8\)
 [ 	]*[a-f0-9]+:	8f 00                	popq   \(%rax\)
 [ 	]*[a-f0-9]+:	0f a1                	popq   %fs
+[ 	]*[a-f0-9]+:	0f a1                	popq   %fs
+[ 	]*[a-f0-9]+:	0f a9                	popq   %gs
 [ 	]*[a-f0-9]+:	0f a9                	popq   %gs
 [ 	]*[a-f0-9]+:	9d                   	popfq  
+[ 	]*[a-f0-9]+:	9d                   	popfq  
 [ 	]*[a-f0-9]+:	41 ff 30             	pushq  \(%r8\)
 [ 	]*[a-f0-9]+:	ff 30                	pushq  \(%rax\)
 [ 	]*[a-f0-9]+:	0f a0                	pushq  %fs
+[ 	]*[a-f0-9]+:	0f a0                	pushq  %fs
+[ 	]*[a-f0-9]+:	0f a8                	pushq  %gs
 [ 	]*[a-f0-9]+:	0f a8                	pushq  %gs
 [ 	]*[a-f0-9]+:	9c                   	pushfq 
+[ 	]*[a-f0-9]+:	9c                   	pushfq 
 [ 	]*[a-f0-9]+:	0f 77                	emms   
 [ 	]*[a-f0-9]+:	0f 0e                	femms  
 [ 	]*[a-f0-9]+:	0f 08                	invd   
diff --git a/gas/testsuite/gas/i386/x86-64-opcode.s b/gas/testsuite/gas/i386/x86-64-opcode.s
index 8d4a6ed9b2..caee124d16 100644
--- a/gas/testsuite/gas/i386/x86-64-opcode.s
+++ b/gas/testsuite/gas/i386/x86-64-opcode.s
@@ -323,15 +323,21 @@
 	POPq (%r8)		      #	 --  --	 -- 41	 8F 00				 ; REX to access upper reg.
 	POPq (%rax)		      #	 --  --	 -- --	 8F 00
 	POP %fs			      #	 --  --	 -- --	 0F A1
+	POPq %fs		      #	 --  --	 -- --	 0F A1
 	POP %gs			      #	 --  --	 -- --	 0F A9
-	POPFQ			      #	 --  --	 -- --	 9D
+	POPq %gs		      #	 --  --	 -- --	 0F A9
+	POPF			      #	 --  --	 -- --	 9D
+	POPFq			      #	 --  --	 -- --	 9D
 
 	# PUSH
 	PUSHq (%r8)		      #	 --  --	 -- 41	 FF 30				 ; REX to access upper reg.
 	PUSHq (%rax)		      #	 --  --	 -- --	 FF 30
 	PUSH %fs		      #	 --  --	 -- --	 0F A0
+	PUSHq %fs		      #	 --  --	 -- --	 0F A0
 	PUSH %gs		      #	 --  --	 -- --	 0F A8
-	PUSHFQ			      #	 --  --	 -- --	 9C
+	PUSHq %gs		      #	 --  --	 -- --	 0F A8
+	PUSHF			      #	 --  --	 -- --	 9C
+	PUSHFq			      #	 --  --	 -- --	 9C
 
 
 
diff --git a/gprof/ChangeLog b/gprof/ChangeLog
index 469c731b44..2cb31365d9 100644
--- a/gprof/ChangeLog
+++ b/gprof/ChangeLog
@@ -1,3 +1,8 @@
+2019-10-12  Nick Clifton  <nickc@redhat.com>
+
+	Release 2.33.1
+	* configure: Regenerate.
+
 2019-09-30  Phil Blundell  <pb@pbcl.net>
 
 	Release 2.33
diff --git a/gprof/configure b/gprof/configure
index 86de04eed6..f9aacb0a59 100755
--- a/gprof/configure
+++ b/gprof/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for gprof 2.33.
+# Generated by GNU Autoconf 2.69 for gprof 2.33.1.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
@@ -587,8 +587,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='gprof'
 PACKAGE_TARNAME='gprof'
-PACKAGE_VERSION='2.33'
-PACKAGE_STRING='gprof 2.33'
+PACKAGE_VERSION='2.33.1'
+PACKAGE_STRING='gprof 2.33.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1337,7 +1337,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures gprof 2.33 to adapt to many kinds of systems.
+\`configure' configures gprof 2.33.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1408,7 +1408,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of gprof 2.33:";;
+     short | recursive ) echo "Configuration of gprof 2.33.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1519,7 +1519,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-gprof configure 2.33
+gprof configure 2.33.1
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -1884,7 +1884,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by gprof $as_me 2.33, which was
+It was created by gprof $as_me 2.33.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -3831,7 +3831,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='gprof'
- VERSION='2.33'
+ VERSION='2.33.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -13086,7 +13086,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by gprof $as_me 2.33, which was
+This file was extended by gprof $as_me 2.33.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -13152,7 +13152,7 @@ _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-gprof config.status 2.33
+gprof config.status 2.33.1
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
diff --git a/ld/ChangeLog b/ld/ChangeLog
index 8c2455d61a..9f1179e15e 100644
--- a/ld/ChangeLog
+++ b/ld/ChangeLog
@@ -1,3 +1,41 @@
+2019-10-12  Nick Clifton  <nickc@redhat.com>
+
+	Release 2.33.1
+	* configure: Regenerate.
+	* po/ld.pot: Regenerate.
+
+2019-10-11  Alan Modra  <amodra@gmail.com>
+
+	Apply from master
+	2019-10-09  Alan Modra  <amodra@gmail.com>
+	PR 25081
+	* ldlang.c (lang_size_sections_1): Set lma from section vma
+	rather than dot.
+
+2019-10-10  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+
+	Apply from master
+	2019-10-04  Szabolcs Nagy  <szabolcs.nagy@arm.com>
+	PR ld/25062
+	* testsuite/ld-arm/arm-elf.exp: Update.
+	* testsuite/ld-arm/tls-gdesc-neg.d: New test.
+	* testsuite/ld-arm/tls-gdesc-neg.s: New test.
+
+2019-10-09  Alan Modra  <amodra@gmail.com>
+
+	Apply from master
+	2019-10-04  Alan Modra  <amodra@gmail.com>
+	* testsuite/ld-powerpc/tlsso.d: Adjust to suit tlsld_got usage change.
+	* testsuite/ld-powerpc/tlsso.g: Likewise.
+	* testsuite/ld-powerpc/tlsso.r: Likewise.
+	* testsuite/ld-powerpc/tlsso32.d: Likewise.
+	* testsuite/ld-powerpc/tlsso32.g: Likewise.
+	* testsuite/ld-powerpc/tlsso32.r: Likewise.
+
+	2019-09-26  Alan Modra  <amodra@gmail.com>
+	PR 24262
+	* ld.texi (-plugin): Revert 2019-03-15 change.
+
 2019-09-30  Phil Blundell  <pb@pbcl.net>
 
 	Release 2.33
diff --git a/ld/configure b/ld/configure
index 141e220683..b532ef94fa 100755
--- a/ld/configure
+++ b/ld/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for ld 2.33.
+# Generated by GNU Autoconf 2.69 for ld 2.33.1.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
@@ -587,8 +587,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='ld'
 PACKAGE_TARNAME='ld'
-PACKAGE_VERSION='2.33'
-PACKAGE_STRING='ld 2.33'
+PACKAGE_VERSION='2.33.1'
+PACKAGE_STRING='ld 2.33.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1390,7 +1390,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures ld 2.33 to adapt to many kinds of systems.
+\`configure' configures ld 2.33.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1461,7 +1461,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of ld 2.33:";;
+     short | recursive ) echo "Configuration of ld 2.33.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1596,7 +1596,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-ld configure 2.33
+ld configure 2.33.1
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -2311,7 +2311,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by ld $as_me 2.33, which was
+It was created by ld $as_me 2.33.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -4262,7 +4262,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='ld'
- VERSION='2.33'
+ VERSION='2.33.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -18226,7 +18226,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by ld $as_me 2.33, which was
+This file was extended by ld $as_me 2.33.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -18292,7 +18292,7 @@ _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-ld config.status 2.33
+ld config.status 2.33.1
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
diff --git a/ld/ld.texi b/ld/ld.texi
index 8d5c7bc140..b3447050ed 100644
--- a/ld/ld.texi
+++ b/ld/ld.texi
@@ -855,7 +855,7 @@ Note that the location of the compiler originated plugins is different
 from the place where the @command{ar}, @command{nm} and
 @command{ranlib} programs search for their plugins.  In order for
 those commands to make use of a compiler based plugin it must first be
-copied into the @file{$@{bindir@}/../lib/bfd-plugins} directory.  All gcc
+copied into the @file{$@{libdir@}/bfd-plugins} directory.  All gcc
 based linker plugins are backward compatible, so it is sufficient to
 just copy in the newest one.
 
diff --git a/ld/ldlang.c b/ld/ldlang.c
index cb98982d45..390546afae 100644
--- a/ld/ldlang.c
+++ b/ld/ldlang.c
@@ -5500,7 +5500,7 @@ lang_size_sections_1
 		    /* Otherwise, keep the same lma to vma relationship
 		       as the previous section.  */
 		    else
-		      lma = dot + last->lma - last->vma;
+		      lma = os->bfd_section->vma + last->lma - last->vma;
 
 		    if (section_alignment > 0)
 		      lma = align_power (lma, section_alignment);
diff --git a/ld/po/ld.pot b/ld/po/ld.pot
index 3900044118..cac16ce5c8 100644
--- a/ld/po/ld.pot
+++ b/ld/po/ld.pot
@@ -8,7 +8,7 @@ msgid ""
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: bug-binutils@gnu.org\n"
-"POT-Creation-Date: 2019-09-30 11:08+0100\n"
+"POT-Creation-Date: 2019-10-12 15:01+0100\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
diff --git a/ld/testsuite/ld-arm/arm-elf.exp b/ld/testsuite/ld-arm/arm-elf.exp
index 7203678527..118aa642d1 100644
--- a/ld/testsuite/ld-arm/arm-elf.exp
+++ b/ld/testsuite/ld-arm/arm-elf.exp
@@ -839,6 +839,11 @@ set armeabitests_nonacl {
      "" {tls-gdesc.s}
      {{readelf "-x .got" tls-gdesc-nlazy.g}}
      "tls-lib2-nlazy.so"}
+    {"TLS gnu shared library negative addend"
+     "--no-fix-arm1176 -shared -T arm-dyn.ld --hash-style=sysv" ""
+     "" {tls-gdesc-neg.s}
+     {{objdump -fdw tls-gdesc-neg.d}}
+     "tls-lib2-neg.so"}
     {"TLS long plt library"
      "-shared -T arm-dyn.ld --hash-style=sysv --section-start .foo=0x4001000" ""
      "" {tls-longplt-lib.s}
diff --git a/ld/testsuite/ld-arm/tls-gdesc-neg.d b/ld/testsuite/ld-arm/tls-gdesc-neg.d
new file mode 100644
index 0000000000..4bbd0124e7
--- /dev/null
+++ b/ld/testsuite/ld-arm/tls-gdesc-neg.d
@@ -0,0 +1,39 @@
+
+tmpdir/tls-lib2-neg.so:     file format elf32-littlearm
+architecture: armv.*, flags 0x[0-9a-f]+:
+HAS_SYMS, DYNAMIC, D_PAGED
+start address 0x[0-9a-f]+
+
+Disassembly of section .plt:
+
+00008164 <.plt>:
+    8164:	e52de004 	push	{lr}		; .*
+    8168:	e59fe004 	ldr	lr, \[pc, #4\]	; .*
+    816c:	e08fe00e 	add	lr, pc, lr
+    8170:	e5bef008 	ldr	pc, \[lr, #8\]!
+    8174:	000080d8 	.word	0x000080d8
+    8178:	e08e0000 	add	r0, lr, r0
+    817c:	e5901004 	ldr	r1, \[r0, #4\]
+    8180:	e12fff11 	bx	r1
+    8184:	e52d2004 	push	{r2}		; .*
+    8188:	e59f200c 	ldr	r2, \[pc, #12\]	; .*
+    818c:	e59f100c 	ldr	r1, \[pc, #12\]	; .*
+    8190:	e79f2002 	ldr	r2, \[pc, r2\]
+    8194:	e081100f 	add	r1, r1, pc
+    8198:	e12fff12 	bx	r2
+    819c:	000080c8 	.word	0x000080c8
+    81a0:	000080b0 	.word	0x000080b0
+
+Disassembly of section .text:
+
+000081a4 <foo>:
+    81a4:	e59f0000 	ldr	r0, \[pc\]	; .*
+    81a8:	ea000000 	b	81b0 <foo\+0xc>
+    81ac:	000080a4 	.word	0x000080a4
+    81b0:	fafffff0 	blx	8178 <.plt\+0x14>
+
+000081b4 <bar>:
+    81b4:	4800      	ldr	r0, \[pc, #0\]	; .*
+    81b6:	e001      	b.n	81bc <bar\+0x8>
+    81b8:	00008097 	.word	0x00008097
+    81bc:	f7ff efdc 	blx	8178 <.plt\+0x14>
diff --git a/ld/testsuite/ld-arm/tls-gdesc-neg.s b/ld/testsuite/ld-arm/tls-gdesc-neg.s
new file mode 100644
index 0000000000..78ec32f593
--- /dev/null
+++ b/ld/testsuite/ld-arm/tls-gdesc-neg.s
@@ -0,0 +1,29 @@
+	.text
+	.arm
+	.globl foo
+	.type foo, %function
+foo:
+	ldr	r0, 1f
+	b	2f
+1:
+	@ Negative addend for R_ARM_TLS_GOTDESC.
+	.word	tlsdata(tlsdesc) + (. - 2f + 0)
+2:
+	blx	tlsdata(tlscall)
+
+	.thumb
+	.globl bar
+	.type bar, %function
+bar:
+	ldr	r0, 1f
+	b	2f
+1:
+	@ Negative addend for R_ARM_TLS_GOTDESC.
+	.word	tlsdata(tlsdesc) + (. - 2f + 1)
+2:
+	blx	tlsdata(tlscall)
+
+	.section .tdata,"awT"
+	.global tlsdata
+tlsdata:
+	.space	4
diff --git a/ld/testsuite/ld-powerpc/tlsso.d b/ld/testsuite/ld-powerpc/tlsso.d
index caebc49575..4ef1f25a71 100644
--- a/ld/testsuite/ld-powerpc/tlsso.d
+++ b/ld/testsuite/ld-powerpc/tlsso.d
@@ -10,9 +10,9 @@ Disassembly of section \.text:
 
 .* <.*plt_call\.__tls_get_addr(|_opt)>:
 .*	(f8 41 00 28|28 00 41 f8) 	std     r2,40\(r1\)
-.*	(e9 82 80 78|78 80 82 e9) 	ld      r12,-32648\(r2\)
+.*	(e9 82 80 98|98 80 82 e9) 	ld      r12,-32616\(r2\)
 .*	(7d 89 03 a6|a6 03 89 7d) 	mtctr   r12
-.*	(e8 42 80 80|80 80 42 e8) 	ld      r2,-32640\(r2\)
+.*	(e8 42 80 a0|a0 80 42 e8) 	ld      r2,-32608\(r2\)
 .*	(28 22 00 00|00 00 22 28) 	cmpldi  r2,0
 .*	(4c e2 04 20|20 04 e2 4c) 	bnectr\+ *
 .*	(48 00 00 ..|.. 00 00 48) 	b       .* <__tls_get_addr@plt>
@@ -21,21 +21,21 @@ Disassembly of section \.text:
 .*	(38 62 80 20|20 80 62 38) 	addi    r3,r2,-32736
 .*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
 .*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
-.*	(38 62 80 50|50 80 62 38) 	addi    r3,r2,-32688
+.*	(38 62 80 40|40 80 62 38) 	addi    r3,r2,-32704
 .*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
 .*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
-.*	(38 62 80 38|38 80 62 38) 	addi    r3,r2,-32712
+.*	(38 62 80 58|58 80 62 38) 	addi    r3,r2,-32680
 .*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
 .*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
-.*	(38 62 80 50|50 80 62 38) 	addi    r3,r2,-32688
+.*	(38 62 80 30|30 80 62 38) 	addi    r3,r2,-32720
 .*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
 .*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
 .*	(39 23 80 40|40 80 23 39) 	addi    r9,r3,-32704
 .*	(3d 23 00 00|00 00 23 3d) 	addis   r9,r3,0
 .*	(81 49 80 48|48 80 49 81) 	lwz     r10,-32696\(r9\)
-.*	(e9 22 80 30|30 80 22 e9) 	ld      r9,-32720\(r2\)
+.*	(e9 22 80 50|50 80 22 e9) 	ld      r9,-32688\(r2\)
 .*	(7d 49 18 2a|2a 18 49 7d) 	ldx     r10,r9,r3
-.*	(e9 22 80 48|48 80 22 e9) 	ld      r9,-32696\(r2\)
+.*	(e9 22 80 68|68 80 22 e9) 	ld      r9,-32664\(r2\)
 .*	(7d 49 6a 2e|2e 6a 49 7d) 	lhzx    r10,r9,r13
 .*	(89 4d 00 00|00 00 4d 89) 	lbz     r10,0\(r13\)
 .*	(3d 2d 00 00|00 00 2d 3d) 	addis   r9,r13,0
@@ -43,7 +43,7 @@ Disassembly of section \.text:
 .*	(38 62 80 08|08 80 62 38) 	addi    r3,r2,-32760
 .*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
 .*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
-.*	(38 62 80 50|50 80 62 38) 	addi    r3,r2,-32688
+.*	(38 62 80 70|70 80 62 38) 	addi    r3,r2,-32656
 .*	(4b ff ff ..|.. ff ff 4b) 	bl      .*plt_call.__tls_get_addr.*
 .*	(e8 41 00 28|28 00 41 e8) 	ld      r2,40\(r1\)
 .*	(f9 43 80 08|08 80 43 f9) 	std     r10,-32760\(r3\)
@@ -51,7 +51,7 @@ Disassembly of section \.text:
 .*	(91 49 80 10|10 80 49 91) 	stw     r10,-32752\(r9\)
 .*	(e9 22 80 18|18 80 22 e9) 	ld      r9,-32744\(r2\)
 .*	(7d 49 19 2a|2a 19 49 7d) 	stdx    r10,r9,r3
-.*	(e9 22 80 48|48 80 22 e9) 	ld      r9,-32696\(r2\)
+.*	(e9 22 80 68|68 80 22 e9) 	ld      r9,-32664\(r2\)
 .*	(7d 49 6b 2e|2e 6b 49 7d) 	sthx    r10,r9,r13
 .*	(e9 4d 00 02|02 00 4d e9) 	lwa     r10,0\(r13\)
 .*	(3d 2d 00 00|00 00 2d 3d) 	addis   r9,r13,0
diff --git a/ld/testsuite/ld-powerpc/tlsso.g b/ld/testsuite/ld-powerpc/tlsso.g
index f8ac949dea..a263957f63 100644
--- a/ld/testsuite/ld-powerpc/tlsso.g
+++ b/ld/testsuite/ld-powerpc/tlsso.g
@@ -13,3 +13,5 @@ Contents of section \.got:
 .* 00000000 00000000 00000000 00000000  .*
 .* 00000000 00000000 00000000 00000000  .*
 .* 00000000 00000000 00000000 00000000  .*
+.* 00000000 00000000 00000000 00000000  .*
+.* 00000000 00000000 00000000 00000000  .*
diff --git a/ld/testsuite/ld-powerpc/tlsso.r b/ld/testsuite/ld-powerpc/tlsso.r
index c1d889af6b..94b8c3ccdf 100644
--- a/ld/testsuite/ld-powerpc/tlsso.r
+++ b/ld/testsuite/ld-powerpc/tlsso.r
@@ -44,9 +44,9 @@ Program Headers:
  +02 +\.dynamic *
  +03 +\.tdata \.tbss *
 
-Relocation section '\.rela\.dyn' at offset .* contains 18 entries:
+Relocation section '\.rela\.dyn' at offset .* contains 20 entries:
  +Offset +Info +Type +Symbol's Value +Symbol's Name \+ Addend
-[0-9a-f ]+R_PPC64_RELATIVE +4fc
+[0-9a-f ]+R_PPC64_RELATIVE +51c
 [0-9a-f ]+R_PPC64_RELATIVE +18800
 [0-9a-f ]+R_PPC64_TPREL16 +0+60 le0 \+ 0
 [0-9a-f ]+R_PPC64_TPREL16_HA +0+68 le1 \+ 0
@@ -60,6 +60,8 @@ Relocation section '\.rela\.dyn' at offset .* contains 18 entries:
 [0-9a-f ]+R_PPC64_DTPMOD64 +0
 [0-9a-f ]+R_PPC64_DTPMOD64 +0+ gd \+ 0
 [0-9a-f ]+R_PPC64_DTPREL64 +0+ gd \+ 0
+[0-9a-f ]+R_PPC64_DTPMOD64 +0+40 ld0 \+ 0
+[0-9a-f ]+R_PPC64_DTPMOD64 +0+ ld \+ 0
 [0-9a-f ]+R_PPC64_DTPREL64 +0+50 ld2 \+ 0
 [0-9a-f ]+R_PPC64_DTPMOD64 +0+38 gd0 \+ 0
 [0-9a-f ]+R_PPC64_DTPREL64 +0+38 gd0 \+ 0
diff --git a/ld/testsuite/ld-powerpc/tlsso32.d b/ld/testsuite/ld-powerpc/tlsso32.d
index 3365eb3635..c9a25d3482 100644
--- a/ld/testsuite/ld-powerpc/tlsso32.d
+++ b/ld/testsuite/ld-powerpc/tlsso32.d
@@ -13,13 +13,13 @@ Disassembly of section \.text:
 .*:	(7f c8 02 a6|a6 02 c8 7f) 	mflr    r30
 .*:	(3f de 00 02|02 00 de 3f) 	addis   r30,r30,2
 .*:	(3b de 80 e8|e8 80 de 3b) 	addi    r30,r30,-32536
-.*:	(38 7f ff e4|e4 ff 7f 38) 	addi    r3,r31,-28
+.*:	(38 7f ff d4|d4 ff 7f 38) 	addi    r3,r31,-44
 .*:	(48 00 00 01|01 00 00 48) 	bl      .*
-.*:	(38 7f ff f8|f8 ff 7f 38) 	addi    r3,r31,-8
+.*:	(38 7f ff e4|e4 ff 7f 38) 	addi    r3,r31,-28
 .*:	(48 00 00 01|01 00 00 48) 	bl      .*
 .*:	(38 7f ff ec|ec ff 7f 38) 	addi    r3,r31,-20
 .*:	(48 00 00 5d|5d 00 00 48) 	bl      .*<0+8000\.got2\.plt_pic32\.__tls_get_addr>
-.*:	(38 7f ff f8|f8 ff 7f 38) 	addi    r3,r31,-8
+.*:	(38 7f ff dc|dc ff 7f 38) 	addi    r3,r31,-36
 .*:	(48 00 00 55|55 00 00 48) 	bl      .*<0+8000\.got2\.plt_pic32\.__tls_get_addr>
 .*:	(39 23 80 20|20 80 23 39) 	addi    r9,r3,-32736
 .*:	(3d 23 00 00|00 00 23 3d) 	addis   r9,r3,0
@@ -29,7 +29,7 @@ Disassembly of section \.text:
 .*:	(89 42 00 00|00 00 42 89) 	lbz     r10,0\(r2\)
 .*:	(3d 22 00 00|00 00 22 3d) 	addis   r9,r2,0
 .*:	(99 49 00 00|00 00 49 99) 	stb     r10,0\(r9\)
-.*:	(38 7e ff dc|dc ff 7e 38) 	addi    r3,r30,-36
+.*:	(38 7e ff cc|cc ff 7e 38) 	addi    r3,r30,-52
 .*:	(48 00 00 01|01 00 00 48) 	bl      .*
 .*:	(38 7e ff f8|f8 ff 7e 38) 	addi    r3,r30,-8
 .*:	(48 00 00 01|01 00 00 48) 	bl      .*
@@ -43,7 +43,7 @@ Disassembly of section \.text:
 .*:	(a9 49 00 00|00 00 49 a9) 	lha     r10,0\(r9\)
 
 .* <00008000.got2.plt_pic32.__tls_get_addr>:
-.*:	(81 7e 80 d8|d8 80 7e 81) 	lwz     r11,-32552\(r30\)
+.*:	(81 7e 80 e8|e8 80 7e 81) 	lwz     r11,-32536\(r30\)
 .*:	(7d 69 03 a6|a6 03 69 7d) 	mtctr   r11
 .*:	(4e 80 04 20|20 04 80 4e) 	bctr
 .*:	(60 00 00 00|00 00 00 60) 	nop
@@ -57,8 +57,8 @@ Disassembly of section \.text:
 .*:	(7c 08 03 a6|a6 03 08 7c) 	mtlr    r0
 .*:	(7d 6c 58 50|50 58 6c 7d) 	subf    r11,r12,r11
 .*:	(3d 8c 00 01|01 00 8c 3d) 	addis   r12,r12,1
-.*:	(80 0c 01 20|20 01 0c 80) 	lwz     r0,288\(r12\)
-.*:	(81 8c 01 24|24 01 8c 81) 	lwz     r12,292\(r12\)
+.*:	(80 0c 01 30|30 01 0c 80) 	lwz     r0,304\(r12\)
+.*:	(81 8c 01 34|34 01 8c 81) 	lwz     r12,308\(r12\)
 .*:	(7c 09 03 a6|a6 03 09 7c) 	mtctr   r0
 .*:	(7c 0b 5a 14|14 5a 0b 7c) 	add     r0,r11,r11
 .*:	(7d 60 5a 14|14 5a 60 7d) 	add     r11,r0,r11
diff --git a/ld/testsuite/ld-powerpc/tlsso32.g b/ld/testsuite/ld-powerpc/tlsso32.g
index 0e01e5d917..bbeff7de8a 100644
--- a/ld/testsuite/ld-powerpc/tlsso32.g
+++ b/ld/testsuite/ld-powerpc/tlsso32.g
@@ -9,4 +9,5 @@
 Contents of section \.got:
 .* 00000000 00000000 00000000 00000000  .*
 .* 00000000 00000000 00000000 00000000  .*
-.* 00000000 (000103dc|dc030100) 00000000 00000000  .*
+.* 00000000 00000000 00000000 00000000  .*
+.* 00000000 (000103fc|fc030100) 00000000 00000000  .*
diff --git a/ld/testsuite/ld-powerpc/tlsso32.r b/ld/testsuite/ld-powerpc/tlsso32.r
index 56b87f350f..08fe4661f3 100644
--- a/ld/testsuite/ld-powerpc/tlsso32.r
+++ b/ld/testsuite/ld-powerpc/tlsso32.r
@@ -18,7 +18,7 @@ Section Headers:
  +\[[ 0-9]+\] \.tdata +PROGBITS .* 0+1c 0+ WAT +0 +0 +4
  +\[[ 0-9]+\] \.tbss +NOBITS .* 0+1c 0+ WAT +0 +0 +4
  +\[[ 0-9]+\] \.dynamic +DYNAMIC .* 08 +WA +3 +0 +4
- +\[[ 0-9]+\] \.got +PROGBITS .* 0+30 04 +WA +0 +0 +4
+ +\[[ 0-9]+\] \.got +PROGBITS .* 0+40 04 +WA +0 +0 +4
  +\[[ 0-9]+\] \.plt +PROGBITS .* 0+4 00 +WA +0 +0 +4
  +\[[ 0-9]+\] \.symtab +.*
  +\[[ 0-9]+\] \.strtab +.*
@@ -43,7 +43,7 @@ Program Headers:
  +02 +\.dynamic 
  +03 +\.tdata \.tbss 
 
-Relocation section '\.rela\.dyn' at offset 0x[0-9a-f]+ contains 18 entries:
+Relocation section '\.rela\.dyn' at offset 0x[0-9a-f]+ contains 20 entries:
  Offset +Info +Type +Sym\. Value +Symbol's Name \+ Addend
 [0-9a-f ]+R_PPC_REL24 +0+ +__tls_get_addr \+ 0
 [0-9a-f ]+R_PPC_REL24 +0+ +__tls_get_addr \+ 0
@@ -60,6 +60,8 @@ Relocation section '\.rela\.dyn' at offset 0x[0-9a-f]+ contains 18 entries:
 [0-9a-f ]+R_PPC_DTPMOD32 +0
 [0-9a-f ]+R_PPC_DTPMOD32 +0+ +gd \+ 0
 [0-9a-f ]+R_PPC_DTPREL32 +0+ +gd \+ 0
+[0-9a-f ]+R_PPC_DTPMOD32 +0+20 +ld0 \+ 0
+[0-9a-f ]+R_PPC_DTPMOD32 +0+ +ld \+ 0
 [0-9a-f ]+R_PPC_DTPMOD32 +0+1c +gd0 \+ 0
 [0-9a-f ]+R_PPC_DTPREL32 +0+1c +gd0 \+ 0
 [0-9a-f ]+R_PPC_TPREL32 +0+2c +ie0 \+ 0
diff --git a/opcodes/ChangeLog b/opcodes/ChangeLog
index 1481261ecf..d5ebd6ef98 100644
--- a/opcodes/ChangeLog
+++ b/opcodes/ChangeLog
@@ -1,3 +1,16 @@
+2019-10-12  Nick Clifton  <nickc@redhat.com>
+
+	Release 2.33.1
+	* configure: Regenerate.
+	* po/opcodes.pot: Regenerate.
+
+2019-10-04  Jan Beulich  <jbeulich@suse.com>
+
+	PR gas/25012
+	* i386-opc.tbl (push, pop): Re-instate distinct Cpu64 templates
+	with SReg operand.
+	* i386-tbl.h: Re-generate.
+
 2019-09-30  Phil Blundell  <pb@pbcl.net>
 
 	Release 2.33
diff --git a/opcodes/configure b/opcodes/configure
index d23f2ba339..7ad135041d 100755
--- a/opcodes/configure
+++ b/opcodes/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for opcodes 2.33.
+# Generated by GNU Autoconf 2.69 for opcodes 2.33.1.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
@@ -587,8 +587,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='opcodes'
 PACKAGE_TARNAME='opcodes'
-PACKAGE_VERSION='2.33'
-PACKAGE_STRING='opcodes 2.33'
+PACKAGE_VERSION='2.33.1'
+PACKAGE_STRING='opcodes 2.33.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1356,7 +1356,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures opcodes 2.33 to adapt to many kinds of systems.
+\`configure' configures opcodes 2.33.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1427,7 +1427,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of opcodes 2.33:";;
+     short | recursive ) echo "Configuration of opcodes 2.33.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1539,7 +1539,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-opcodes configure 2.33
+opcodes configure 2.33.1
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -1950,7 +1950,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by opcodes $as_me 2.33, which was
+It was created by opcodes $as_me 2.33.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -3897,7 +3897,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='opcodes'
- VERSION='2.33'
+ VERSION='2.33.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -13534,7 +13534,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by opcodes $as_me 2.33, which was
+This file was extended by opcodes $as_me 2.33.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -13600,7 +13600,7 @@ _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-opcodes config.status 2.33
+opcodes config.status 2.33.1
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
diff --git a/opcodes/i386-opc.tbl b/opcodes/i386-opc.tbl
index af2b600ba1..256ff04360 100644
--- a/opcodes/i386-opc.tbl
+++ b/opcodes/i386-opc.tbl
@@ -116,22 +116,24 @@ push, 1, 0x50, None, 1, CpuNo64, ShortForm|DefaultSize|No_bSuf|No_sSuf|No_qSuf|N
 push, 1, 0xff, 0x6, 1, CpuNo64, Modrm|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Reg16|Reg32|Word|Dword|Unspecified|BaseIndex }
 push, 1, 0x6a, None, 1, Cpu186|CpuNo64, DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm8S }
 push, 1, 0x68, None, 1, Cpu186|CpuNo64, DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Imm16|Imm32 }
-push, 1, 0x6, None, 1, 0, ShortForm|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { SReg }
+push, 1, 0x6, None, 1, CpuNo64, ShortForm|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { SReg }
 // In 64bit mode, the operand size is implicitly 64bit.
 push, 1, 0x50, None, 1, Cpu64, ShortForm|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { Reg16|Reg64 }
 push, 1, 0xff, 0x6, 1, Cpu64, Modrm|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { Reg16|Reg64|Word|Qword|Unspecified|BaseIndex }
 push, 1, 0x6a, None, 1, Cpu64, DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { Imm8S }
 push, 1, 0x68, None, 1, Cpu64, DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { Imm16|Imm32S }
+push, 1, 0xfa0, None, 2, Cpu64, ShortForm|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { SReg }
 
 pusha, 0, 0x60, None, 1, Cpu186|CpuNo64, DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { 0 }
 
 // Pop instructions.
 pop, 1, 0x58, None, 1, CpuNo64, ShortForm|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Reg16|Reg32 }
 pop, 1, 0x8f, 0x0, 1, CpuNo64, Modrm|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { Reg16|Reg32|Word|Dword|Unspecified|BaseIndex }
-pop, 1, 0x7, None, 1, 0, ShortForm|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { SReg }
+pop, 1, 0x7, None, 1, CpuNo64, ShortForm|DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { SReg }
 // In 64bit mode, the operand size is implicitly 64bit.
 pop, 1, 0x58, None, 1, Cpu64, ShortForm|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { Reg16|Reg64 }
 pop, 1, 0x8f, 0x0, 1, Cpu64, Modrm|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { Reg16|Reg64|Word|Qword|Unspecified|BaseIndex }
+pop, 1, 0xfa1, None, 2, Cpu64, ShortForm|DefaultSize|No_bSuf|No_lSuf|No_sSuf|No_ldSuf|NoRex64, { SReg }
 
 popa, 0, 0x61, None, 1, Cpu186|CpuNo64, DefaultSize|No_bSuf|No_sSuf|No_qSuf|No_ldSuf, { 0 }
 
diff --git a/opcodes/i386-tbl.h b/opcodes/i386-tbl.h
index 307415e8ca..89c752e826 100644
--- a/opcodes/i386-tbl.h
+++ b/opcodes/i386-tbl.h
@@ -635,7 +635,7 @@ const insn_template i386_optab[] =
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-        0, 0, 0, 0, 0, 0, 0, 0, 0 } },
+        0, 0, 0, 0, 0, 0, 0, 1, 0 } },
     { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1,
       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
@@ -694,6 +694,19 @@ const insn_template i386_optab[] =
       0 },
     { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
 	  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } } } },
+  { "push", 1, 0xfa0, None, 2,
+    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+        0, 0, 0, 0, 0, 0, 1, 0, 0 } },
+    { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0,
+      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+      0 },
+    { { { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+	  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } } } },
   { "pusha", 0, 0x60, None, 1,
     { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
@@ -739,7 +752,7 @@ const insn_template i386_optab[] =
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-        0, 0, 0, 0, 0, 0, 0, 0, 0 } },
+        0, 0, 0, 0, 0, 0, 0, 1, 0 } },
     { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1,
       1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
@@ -772,6 +785,19 @@ const insn_template i386_optab[] =
       0 },
     { { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0,
 	  0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 } } } },
+  { "pop", 1, 0xfa1, None, 2,
+    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+        0, 0, 0, 0, 0, 0, 1, 0, 0 } },
+    { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0,
+      1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
+      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+      0 },
+    { { { 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+	  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } } } },
   { "popa", 0, 0x61, None, 1,
     { { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
diff --git a/opcodes/po/opcodes.pot b/opcodes/po/opcodes.pot
index 35424bbcb5..f4c6640d17 100644
--- a/opcodes/po/opcodes.pot
+++ b/opcodes/po/opcodes.pot
@@ -8,7 +8,7 @@ msgid ""
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: bug-binutils@gnu.org\n"
-"POT-Creation-Date: 2019-09-30 10:59+0100\n"
+"POT-Creation-Date: 2019-10-12 14:58+0100\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
