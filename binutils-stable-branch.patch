Alan Modra (5):
      PR32067, ld -Wl,--oformat,binary crash in _bfd_elf_link_keep_memory
      PR32109, aborting at bfd/bfd.c:1236 in int _bfd_doprnt
      segv in bfd_elf_get_str_section
      PR32300, --dependency-file: link dependencies are not all collected
      PR32387 ppc64 TLS optimization bug with -fno-plt code

Andreas Krebbel (1):
      s390: Add arch15 instructions

H.J. Lu (11):
      LTO: Restore the wrapper symbol check for standard function
      ld: Add PR ld/32067 tests
      lto: Don't include unused LTO archive members in output
      ld: Add an LTO test for common symbol override
      lto: Add a test for PR ld/32083
      bfd: Pass true to ld_plugin_object_p
      x86/APX: Don't promote AVX/AVX2 instructions out of APX spec
      x86-64: Never make R_X86_64_GOT64 section relative
      x86-64: Disable PIE on PR gas/32189 test
      x86: Turn PLT32 to PC32 only for PC-relative relocations
      ld: Don't explicitly add .note.gnu.build-id in elf.sc

Jan Beulich (3):
      x86: correct .insn with opcode extension and VEX/XOP/EVEX encoding
      gas: correct .irpc handling with empty string
      x86-64: correct CODE_5 relocs

Jens Remus (6):
      s390: Document syntax to omit base register operand
      s390: Align opcodes to lower-case
      s390: Simplify (dis)assembly of insn operands with const bits
      s390: Relax risbg[n]z, risb{h|l}gz, {rns|ros|rxs}bgt operand constraints
      s390: Add arch15 instruction names
      s390: Add arch15 Concurrent-Functions Facility insns

Nick Clifton (3):
      Re-enable development on 2.43 branch
      This is the 2.43.1 release
      nm: Avoid potential segmentation fault when displaying symbols without version info.

Richard Henderson (1):
      gas: sparc: Fix faligndatai assembly and disassembly

Sam James (4):
      bfd: fix -std=gnu23 compatibility wrt _Bool
      opcodes: fix -std=gnu23 compatibility wrt static_assert
      binutils: fix -std=gnu23 compatibility wrt _Bool
      ld: fix -std=gnu23 compatibility wrt _Bool

Vladimir Mezentsev (1):
      gprofng: fix typo in src/collctrl.cc

Xi Ruoyao (1):
      LoongArch: Fix DT_RELR and relaxation interaction

Xiao Zeng (2):
      RISC-V: Add support for Zimop extension
      RISC-V: Add support for Zcmop extension

Xin Wang (1):
      LoongArch: Add elfNN_loongarch_mkobject to initialize LoongArch tdata

diff --git a/ChangeLog.git b/ChangeLog.git
index 2c017a55c0d..bea2a9bf80c 100644
--- a/ChangeLog.git
+++ b/ChangeLog.git
@@ -1,3 +1,290 @@
+2024-08-17  GDB Administrator  <gdbadmin@sourceware.org>
+
+	Automatic date update in version.in
+
+2024-08-16  Vladimir Mezentsev  <vladimir.mezentsev@oracle.com>
+
+	gprofng: fix typo in src/collctrl.cc
+	gprofng/ChangeLog
+	2024-08-13  Vladimir Mezentsev  <vladimir.mezentsev@oracle.com>
+
+		* src/collctrl.cc (read_cpuinfo): Fix typo.
+
+2024-08-16  GDB Administrator  <gdbadmin@sourceware.org>
+
+	Automatic date update in version.in
+
+2024-08-16  H.J. Lu  <hjl.tools@gmail.com>
+
+	lto: Don't include unused LTO archive members in output
+	When plugin_object_p is called by elf_link_is_defined_archive_symbol to
+	check if a symbol in archive is a real definition, set archive member
+	plugin_format to bfd_plugin_yes_unused to avoid including the unused LTO
+	archive members in linker output.  When plugin_object_p is called as
+	known used, call plugin claim_file if plugin_format is bfd_plugin_unknown
+	or bfd_plugin_yes_unused.
+
+	To get the proper support for archives with LTO common symbols with GCC,
+	the GCC fix for
+
+	https://gcc.gnu.org/bugzilla/show_bug.cgi?id=116361
+
+	is needed.
+
+	bfd/
+
+		PR ld/32083
+		* archures.c (bfd_arch_get_compatible): Treat bfd_plugin_yes_unused
+		the same as bfd_plugin_yes.
+		* elflink.c (elf_link_is_defined_archive_symbol): Likewise.
+		* bfd.c (bfd_plugin_format): Add bfd_plugin_yes_unused.
+		* plugin.c (try_claim): Try claim_file_v2 first.
+		* bfd-in2.h: Regenerated.
+
+	ld/
+
+		PR ld/32083
+		* plugin.c (plugin_call_claim_file): Add an argument to return
+		if LDPT_REGISTER_CLAIM_FILE_HOOK_V2 is used.
+		(plugin_object_p): When KNOWN_USED is false, we call plugin
+		claim_file if plugin_format is bfd_plugin_unknown and set
+		plugin_format to bfd_plugin_yes_unused on LTO object.  When
+		KNOWN_USED is true, we call plugin claim_file if plugin_format
+		is bfd_plugin_unknown or bfd_plugin_yes_unused.
+
+	(cherry picked from commit a6f8fe0a9e9cbe871652e46ba7c22d5e9fb86208)
+
+2024-08-15  GDB Administrator  <gdbadmin@sourceware.org>
+
+	Automatic date update in version.in
+
+2024-08-14  Jan Beulich  <jbeulich@suse.com>
+
+	gas: correct .irpc handling with empty string
+	Following 69cab370cf66 ("gas: adjust handling of quotes for .irpc") the
+	closing quote was mistakenly treated as the first quoted character.
+
+2024-08-14  Jan Beulich  <jbeulich@suse.com>
+
+	x86: correct .insn with opcode extension and VEX/XOP/EVEX encoding
+	When VexVVVV handling was re-worked, .insn broke: When an opcode
+	extension is in use, VexVVVV_DST needs using now, as ModR/M.reg is
+	already occupied, matching what c8866e3ec5e2 ("x86: Drop using
+	extension_opcode to encode vvvv register") did.
+
+	While adding (bad) POP2 forms, also slightly adjust existing ones:
+	No need to use XMM registers, and no need to specify %r8 when really
+	%rax is meant twice (EVEX.vvvv not really being the culprit there, or
+	else EVEX.V' would also have needed mentioning).
+
+2024-08-14  GDB Administrator  <gdbadmin@sourceware.org>
+
+	Automatic date update in version.in
+
+2024-08-13  H.J. Lu  <hjl.tools@gmail.com>
+
+	ld: Add PR ld/32067 tests
+	Add PR ld/32067 tests with the compiler driver since the -plugin option
+	is needed to trigger this --oformat binary bug.
+
+		PR ld/32067
+		* testsuite/ld-i386/i386.exp: Run PR ld/32067 test.
+		* testsuite/ld-x86-64/x86-64.exp: Likewise.
+		* testsuite/ld-i386/start.s: Add .note.GNU-stack section.
+		* testsuite/ld-x86-64/pr32067.s: New file.
+
+	(cherry picked from commit 602f5cf7e3a82229d75998a5f6eb13753f828bb3)
+
+2024-08-13  GDB Administrator  <gdbadmin@sourceware.org>
+
+	Automatic date update in version.in
+
+2024-08-12  Alan Modra  <amodra@gmail.com>
+
+	PR32067, ld -Wl,--oformat,binary crash in _bfd_elf_link_keep_memory
+	The direct fix for this segfault is to test for a non-NULL bed in
+	_bfd_elf_link_keep_memory, but also there isn't much point in running
+	code for LTO if the output is binary.
+
+		PR 32067
+		* elflink.c (_bfd_elf_link_keep_memory): Test for non-NULL bed.
+		(elf_link_add_object_symbols): Don't run the loop setting
+		non_ir_ref_regular if the output hash table is not ELF.
+
+	(cherry picked from commit ec8f5671b4e70806fe3053636426a8d179dfef55)
+
+2024-08-12  GDB Administrator  <gdbadmin@sourceware.org>
+
+	Automatic date update in version.in
+
+2024-08-11  GDB Administrator  <gdbadmin@sourceware.org>
+
+	Automatic date update in version.in
+
+2024-08-10  GDB Administrator  <gdbadmin@sourceware.org>
+
+	Automatic date update in version.in
+
+2024-08-09  GDB Administrator  <gdbadmin@sourceware.org>
+
+	Automatic date update in version.in
+
+2024-08-08  Richard Henderson  <richard.henderson@linaro.org>
+
+	gas: sparc: Fix faligndatai assembly and disassembly
+	The first operand is a general register, not an fp register;
+	the third operand is encoded into RS2, not RS3;
+	the second operand must match the destination operand.
+
+2024-08-08  GDB Administrator  <gdbadmin@sourceware.org>
+
+	Automatic date update in version.in
+
+2024-08-07  Xiao Zeng  <zengxiao@eswincomputing.com>
+
+	RISC-V: Add support for Zcmop extension
+	This implements the Zcmop (Compressed Zimop) extension, as of version 1.0.
+
+	View detailed information in:
+	<https://github.com/riscv/riscv-isa-manual/blob/main/src/zimop.adoc>
+
+	The Zcmop extension requires the Zca extension.
+
+	bfd/ChangeLog:
+
+		* elfxx-riscv.c (riscv_multi_subset_supports): Handle Zcmop.
+		(riscv_multi_subset_supports_ext): Ditto.
+
+	gas/ChangeLog:
+
+		* NEWS: Updated.
+		* testsuite/gas/riscv/march-help.l: Ditto.
+		* testsuite/gas/riscv/zcmop.d: New test.
+		* testsuite/gas/riscv/zcmop.s: New test.
+
+	include/ChangeLog:
+
+		* opcode/riscv-opc.h (DECLARE_INSN): New declarations for Zcmop.
+		(MATCH_C_MOP_1, MATCH_C_MOP_3, MATCH_C_MOP_5, MATCH_C_MOP_7,
+		MATCH_C_MOP_9, MATCH_C_MOP_11, MATCH_C_MOP_13, MATCH_C_MOP_15): Define.
+		(MASK_C_MOP_1, MASK_C_MOP_3, MASK_C_MOP_5, MASK_C_MOP_7,
+		MASK_C_MOP_9, MASK_C_MOP_11, MASK_C_MOP_13, MASK_C_MOP_15): Ditto.
+		* opcode/riscv.h (enum riscv_insn_class): Add INSN_CLASS_ZCMOP.
+
+	opcodes/ChangeLog:
+
+		* riscv-opc.c: Add Zcmop instructions.
+
+2024-08-07  Xiao Zeng  <zengxiao@eswincomputing.com>
+
+	RISC-V: Add support for Zimop extension
+	This implements the Zimop (May-Be-Operations) extension, as of version 1.0.
+
+	View detailed information in:
+	<https://github.com/riscv/riscv-isa-manual/blob/main/src/zimop.adoc>
+
+	bfd/ChangeLog:
+
+		* elfxx-riscv.c (riscv_multi_subset_supports): Handle Zimop
+		(riscv_multi_subset_supports_ext): Ditto.
+
+	gas/ChangeLog:
+
+		* NEWS: Updated.
+		* testsuite/gas/riscv/march-help.l: Ditto.
+		* testsuite/gas/riscv/zimop.d: New test.
+		* testsuite/gas/riscv/zimop.s: New test.
+
+	include/ChangeLog:
+
+		* opcode/riscv-opc.h (DECLARE_INSN): New declarations for Zimop.
+		(MATCH_MOP_R_0, MATCH_MOP_R_1, MATCH_MOP_R_2, MATCH_MOP_R_3,
+		MATCH_MOP_R_4, MATCH_MOP_R_5, MATCH_MOP_R_6, MATCH_MOP_R_7,
+		MATCH_MOP_R_8, MATCH_MOP_R_9, MATCH_MOP_R_10, MATCH_MOP_R_11,
+		MATCH_MOP_R_12, MATCH_MOP_R_13, MATCH_MOP_R_14, MATCH_MOP_R_15,
+		MATCH_MOP_R_16, MATCH_MOP_R_17, MATCH_MOP_R_18, MATCH_MOP_R_19,
+		MATCH_MOP_R_20, MATCH_MOP_R_21, MATCH_MOP_R_22, MATCH_MOP_R_23,
+		MATCH_MOP_R_24, MATCH_MOP_R_25, MATCH_MOP_R_26, MATCH_MOP_R_27,
+		MATCH_MOP_R_28, MATCH_MOP_R_29, MATCH_MOP_R_30, MATCH_MOP_R_31,
+		MATCH_MOP_RR_0, MATCH_MOP_RR_1, MATCH_MOP_RR_2, MATCH_MOP_RR_3,
+		MATCH_MOP_RR_4, MATCH_MOP_RR_5, MATCH_MOP_RR_6, MATCH_MOP_RR_7): Define.
+		(MASK_MOP_R_0, MASK_MOP_R_1, MASK_MOP_R_2, MASK_MOP_R_3, MASK_MOP_R_4,
+		MASK_MOP_R_5, MASK_MOP_R_6, MASK_MOP_R_7, MASK_MOP_R_8, MASK_MOP_R_9,
+		MASK_MOP_R_10, MASK_MOP_R_11, MASK_MOP_R_12, MASK_MOP_R_13,
+		MASK_MOP_R_14, MASK_MOP_R_15, MASK_MOP_R_16, MASK_MOP_R_17,
+		MASK_MOP_R_18, MASK_MOP_R_19, MASK_MOP_R_20, MASK_MOP_R_21,
+		MASK_MOP_R_22, MASK_MOP_R_23, MASK_MOP_R_24, MASK_MOP_R_25,
+		MASK_MOP_R_26, MASK_MOP_R_27, MASK_MOP_R_28, MASK_MOP_R_29,
+		MASK_MOP_R_30, MASK_MOP_R_31, MASK_MOP_RR_0, MASK_MOP_RR_1,
+		MASK_MOP_RR_2, MASK_MOP_RR_3, MASK_MOP_RR_4, MASK_MOP_RR_5,
+		MASK_MOP_RR_6, MASK_MOP_RR_7): Ditto.
+		* opcode/riscv.h (enum riscv_insn_class): Add INSN_CLASS_ZIMOP.
+
+	opcodes/ChangeLog:
+
+		* riscv-opc.c: Add Zimop instructions.
+
+2024-08-07  GDB Administrator  <gdbadmin@sourceware.org>
+
+	Automatic date update in version.in
+
+2024-08-06  GDB Administrator  <gdbadmin@sourceware.org>
+
+	Automatic date update in version.in
+
+2024-08-05  Xi Ruoyao  <xry111@xry111.site>
+
+	LoongArch: Fix DT_RELR and relaxation interaction
+
+2024-08-05  H.J. Lu  <hjl.tools@gmail.com>
+
+	LTO: Restore the wrapper symbol check for standard function
+	Call unwrap_hash_lookup to restore the wrapper symbol check for standard
+	function since reference to standard function may not show up in LTO
+	symbol table:
+
+	[hjl@gnu-tgl-3 pr31956-3]$ nm foo.o
+	00000000 T main
+	         U __real_malloc
+	00000000 T __wrap_malloc
+	[hjl@gnu-tgl-3 pr31956-3]$  lto-dump -list foo.o
+	Type   Visibility  Size  Name
+	function  default     0  malloc
+	function  default     0  __real_malloc
+	function  default     3  main
+	function  default     5  __wrap_malloc
+	[hjl@gnu-tgl-3 pr31956-3]$ make
+	gcc -O2 -flto -Wall   -c -o foo.o foo.c
+	gcc -Wl,--wrap=malloc -O2 -flto -Wall -o x foo.o
+	/usr/local/bin/ld: /tmp/ccsPW0a9.ltrans0.ltrans.o: in function `main':
+	<artificial>:(.text.startup+0xa): undefined reference to `__wrap_malloc'
+	collect2: error: ld returned 1 exit status
+	make: *** [Makefile:22: x] Error 1
+	[hjl@gnu-tgl-3 pr31956-3]$
+
+	Also add a test to verify that the unused wrapper is removed.
+
+		PR ld/31956
+		* plugin.c (get_symbols): Restore the wrapper symbol check for
+		standard function.
+		* testsuite/ld-plugin/lto.exp: Run the malloc test and the
+		unused test.
+		* testsuite/ld-plugin/pr31956c.c: New file.
+		* testsuite/ld-plugin/pr31956d.c: New file.
+		* testsuite/ld-plugin/pr31956d.d: New file.
+
+	(cherry picked from commit 3221c470f0765886a49a1a3d2ec602e4104a377b)
+
+2024-08-05  GDB Administrator  <gdbadmin@sourceware.org>
+
+	Automatic date update in version.in
+
+2024-08-04  Nick Clifton  <nickc@redhat.com>
+
+	Re-enable development on 2.43 branch
+
+	this-is-the-2.43-release
+
 2024-08-04  GDB Administrator  <gdbadmin@sourceware.org>
 
 	Automatic date update in version.in
@@ -213978,11 +214265,3 @@
 
 		* dwarf2/read.c (lnp_state_machine::record_line): Use 'true'.
 		(dwarf_decode_lines): Remove '=='.
-
-2021-07-03  Nick Clifton  <nickc@redhat.com>
-
-	More minor updates to the how-to-make-a-release documentation
-
-	Update version number and regenerate files
-
-	Add markers for 2.37 branch
diff --git a/bfd/archures.c b/bfd/archures.c
index 94118b8d2cf..c4decc59e4a 100644
--- a/bfd/archures.c
+++ b/bfd/archures.c
@@ -947,6 +947,7 @@ bfd_arch_get_compatible (const bfd *abfd,
      to assume that they know what they are doing.  */
   if (accept_unknowns
       || ubfd->plugin_format == bfd_plugin_yes
+      || ubfd->plugin_format == bfd_plugin_yes_unused
       || strcmp (bfd_get_target (ubfd), "binary") == 0)
     return kbfd->arch_info;
   return NULL;
diff --git a/bfd/bfd-in2.h b/bfd/bfd-in2.h
index e3b5a8b8522..40ec416dded 100644
--- a/bfd/bfd-in2.h
+++ b/bfd/bfd-in2.h
@@ -1947,7 +1947,8 @@ enum bfd_plugin_format
   {
     bfd_plugin_unknown = 0,
     bfd_plugin_yes = 1,
-    bfd_plugin_no = 2
+    bfd_plugin_yes_unused = 2,
+    bfd_plugin_no = 3
   };
 
 struct bfd_build_id
diff --git a/bfd/bfd.c b/bfd/bfd.c
index ae79c6490b5..a93be109f11 100644
--- a/bfd/bfd.c
+++ b/bfd/bfd.c
@@ -65,7 +65,8 @@ EXTERNAL
 .  {
 .    bfd_plugin_unknown = 0,
 .    bfd_plugin_yes = 1,
-.    bfd_plugin_no = 2
+.    bfd_plugin_yes_unused = 2,
+.    bfd_plugin_no = 3
 .  };
 .
 .struct bfd_build_id
diff --git a/bfd/configure b/bfd/configure
index c66a79ee343..90a60f50822 100755
--- a/bfd/configure
+++ b/bfd/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for bfd 2.43.
+# Generated by GNU Autoconf 2.69 for bfd 2.43.1.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
@@ -587,8 +587,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='bfd'
 PACKAGE_TARNAME='bfd'
-PACKAGE_VERSION='2.43'
-PACKAGE_STRING='bfd 2.43'
+PACKAGE_VERSION='2.43.1'
+PACKAGE_STRING='bfd 2.43.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1411,7 +1411,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures bfd 2.43 to adapt to many kinds of systems.
+\`configure' configures bfd 2.43.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1482,7 +1482,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of bfd 2.43:";;
+     short | recursive ) echo "Configuration of bfd 2.43.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1627,7 +1627,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-bfd configure 2.43
+bfd configure 2.43.1
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -2221,7 +2221,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by bfd $as_me 2.43, which was
+It was created by bfd $as_me 2.43.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -3204,7 +3204,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='bfd'
- VERSION='2.43'
+ VERSION='2.43.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -18093,7 +18093,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by bfd $as_me 2.43, which was
+This file was extended by bfd $as_me 2.43.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -18159,7 +18159,7 @@ _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-bfd config.status 2.43
+bfd config.status 2.43.1
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
diff --git a/bfd/elf.c b/bfd/elf.c
index f85f79e1e35..b02d95579b7 100644
--- a/bfd/elf.c
+++ b/bfd/elf.c
@@ -285,9 +285,7 @@ bfd_elf_get_str_section (bfd *abfd, unsigned int shindex)
       offset = i_shdrp[shindex]->sh_offset;
       shstrtabsize = i_shdrp[shindex]->sh_size;
 
-      /* Allocate and clear an extra byte at the end, to prevent crashes
-	 in case the string table is not terminated.  */
-      if (shstrtabsize + 1 <= 1
+      if (shstrtabsize == 0
 	  || bfd_seek (abfd, offset, SEEK_SET) != 0
 	  || (shstrtab
 	      = _bfd_mmap_readonly_persistent (abfd, shstrtabsize)) == NULL)
@@ -297,14 +295,14 @@ bfd_elf_get_str_section (bfd *abfd, unsigned int shindex)
 	     the string table over and over.  */
 	  i_shdrp[shindex]->sh_size = 0;
 	}
-      else if (shstrtab[shstrtabsize - 1] != '\0')
+      else if (shstrtab[shstrtabsize - 1] != 0)
 	{
 	  /* It is an error if a string table isn't terminated.  */
 	  _bfd_error_handler
 	    /* xgettext:c-format */
-	    (_("%pB(%pA): string table is corrupt"),
-	     abfd, i_shdrp[shindex]->bfd_section);
-	  return NULL;
+	    (_("%pB: string table [%u] is corrupt"), abfd, shindex);
+	  shstrtab = NULL;
+	  i_shdrp[shindex]->sh_size = 0;
 	}
       i_shdrp[shindex]->contents = shstrtab;
     }
@@ -1914,7 +1912,7 @@ _bfd_elf_get_dynamic_symbols (bfd *abfd, Elf_Internal_Phdr *phdr,
       _bfd_error_handler
 	/* xgettext:c-format */
 	(_("%pB: DT_STRTAB table is corrupt"), abfd);
-      goto error_return;
+      strbuf[dt_strsz - 1] = 0;
     }
 
   /* Get the real symbol count from DT_HASH or DT_GNU_HASH.  Prefer
diff --git a/bfd/elf32-ppc.c b/bfd/elf32-ppc.c
index a5370a0624e..8c89ae1611f 100644
--- a/bfd/elf32-ppc.c
+++ b/bfd/elf32-ppc.c
@@ -4352,7 +4352,7 @@ ppc_elf_tls_setup (bfd *obfd, struct bfd_link_info *info)
 		      _bfd_elf_strtab_delref (elf_hash_table (info)->dynstr,
 					      opt->dynstr_index);
 		      if (!bfd_elf_link_record_dynamic_symbol (info, opt))
-			return false;
+			return NULL;
 		    }
 		  htab->tls_get_addr = opt;
 		}
diff --git a/bfd/elf32-xtensa.c b/bfd/elf32-xtensa.c
index eb7fef9331e..58f79e55529 100644
--- a/bfd/elf32-xtensa.c
+++ b/bfd/elf32-xtensa.c
@@ -10070,7 +10070,7 @@ translate_reloc_bfd_fix (reloc_bfd_fix *fix)
      location.  Otherwise, the relocation should move within the
      section.  */
 
-  removed = false;
+  removed = NULL;
   if (is_operand_relocation (fix->src_type))
     {
       /* Check if the original relocation is against a literal being
@@ -10141,7 +10141,7 @@ translate_reloc (const r_reloc *orig_rel, r_reloc *new_rel, asection *sec)
 
   target_offset = orig_rel->target_offset;
 
-  removed = false;
+  removed = NULL;
   if (is_operand_relocation (ELF32_R_TYPE (orig_rel->rela.r_info)))
     {
       /* Check if the original relocation is against a literal being
diff --git a/bfd/elf64-ppc.c b/bfd/elf64-ppc.c
index cd3aaacaeb3..f7debc1edbc 100644
--- a/bfd/elf64-ppc.c
+++ b/bfd/elf64-ppc.c
@@ -4664,7 +4664,7 @@ update_local_sym_info (bfd *abfd, Elf_Internal_Shdr *symtab_hdr,
 	  size_t amt = sizeof (*ent);
 	  ent = bfd_alloc (abfd, amt);
 	  if (ent == NULL)
-	    return false;
+	    return NULL;
 	  ent->next = local_got_ents[r_symndx];
 	  ent->addend = r_addend;
 	  ent->owner = abfd;
@@ -4915,6 +4915,15 @@ ppc64_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,
       tls_type = 0;
       switch (r_type)
 	{
+	case R_PPC64_PLTSEQ:
+	case R_PPC64_PLTSEQ_NOTOC:
+	  /* Inline plt call code emitted by gcc doesn't support
+	     modifying the tls_index words to short-circuit
+	     __tls_get_addr calls.  See PR32387.  */
+	  if (h != NULL && (h == tga || h == dottga))
+	    htab->params->tls_get_addr_opt = 0;
+	  break;
+
 	case R_PPC64_TLSGD:
 	case R_PPC64_TLSLD:
 	  /* These special tls relocs tie a call to __tls_get_addr with
diff --git a/bfd/elflink.c b/bfd/elflink.c
index a180e59e8ca..336bcbf4658 100644
--- a/bfd/elflink.c
+++ b/bfd/elflink.c
@@ -64,7 +64,7 @@ _bfd_elf_link_keep_memory (struct bfd_link_info *info)
      this is opt-in by each backend.  */
   const struct elf_backend_data *bed
     = get_elf_backend_data (info->output_bfd);
-  if (bed->use_mmap)
+  if (bed != NULL && bed->use_mmap)
     return false;
 #endif
   bfd *abfd;
@@ -3653,6 +3653,7 @@ elf_link_is_defined_archive_symbol (bfd * abfd, carsym * symdef)
      object file is an IR object, give linker LTO plugin a chance to
      get the correct symbol table.  */
   if (abfd->plugin_format == bfd_plugin_yes
+      || abfd->plugin_format == bfd_plugin_yes_unused
 #if BFD_SUPPORTS_PLUGINS
       || (abfd->plugin_format == bfd_plugin_unknown
 	  && bfd_link_plugin_object_p (abfd))
@@ -5694,7 +5695,8 @@ elf_link_add_object_symbols (bfd *abfd, struct bfd_link_info *info)
       && !bfd_link_relocatable (info)
       && (abfd->flags & BFD_PLUGIN) == 0
       && !just_syms
-      && extsymcount)
+      && extsymcount != 0
+      && is_elf_hash_table (&htab->root))
     {
       int r_sym_shift;
 
diff --git a/bfd/elfnn-loongarch.c b/bfd/elfnn-loongarch.c
index db6d419a052..312707bb00b 100644
--- a/bfd/elfnn-loongarch.c
+++ b/bfd/elfnn-loongarch.c
@@ -84,6 +84,14 @@ struct _bfd_loongarch_elf_obj_tdata
    && elf_tdata (bfd) != NULL						\
    && elf_object_id (bfd) == LARCH_ELF_DATA)
 
+static bool
+elfNN_loongarch_object (bfd *abfd)
+{
+  return bfd_elf_allocate_object (abfd,
+				  sizeof (struct _bfd_loongarch_elf_obj_tdata),
+				  LARCH_ELF_DATA);
+}
+
 struct relr_entry
 {
   asection *sec;
@@ -121,6 +129,12 @@ struct loongarch_elf_link_hash_table
 
   /* Layout recomputation count.  */
   bfd_size_type relr_layout_iter;
+
+  /* In BFD DT_RELR is implemented as a "relaxation."  If in a relax trip
+     size_relative_relocs is updating the layout, relax_section may see
+     a partially updated state (some sections have vma updated but the
+     others do not), and it's unsafe to do the normal relaxation.  */
+  bool layout_mutating_for_relr;
 };
 
 struct loongarch_elf_section_data
@@ -2212,6 +2226,8 @@ loongarch_elf_size_relative_relocs (struct bfd_link_info *info,
 	  *need_layout = false;
 	}
     }
+
+  htab->layout_mutating_for_relr = *need_layout;
   return true;
 }
 
@@ -4133,7 +4149,8 @@ loongarch_elf_relocate_section (bfd *output_bfd, struct bfd_link_info *info,
 							    bfd_link_pic (info),
 							    h)
 			  && bfd_link_pic (info)
-			  && LARCH_REF_LOCAL (info, h))
+			  && LARCH_REF_LOCAL (info, h)
+			  && !info->enable_dt_relr)			  
 			{
 			  Elf_Internal_Rela rela;
 			  rela.r_offset = sec_addr (got) + got_off;
@@ -5259,6 +5276,12 @@ loongarch_elf_relax_section (bfd *abfd, asection *sec,
   *again = false;
   bfd_vma max_alignment = 0;
 
+  /* It may happen that some sections have updated vma but the others do
+     not.  Go to the next relax trip (size_relative_relocs should have
+     been demending another relax trip anyway).  */
+  if (htab->layout_mutating_for_relr)
+    return true;
+
   if (bfd_link_relocatable (info)
       || sec->sec_flg0
       || (sec->flags & SEC_RELOC) == 0
@@ -6132,6 +6155,8 @@ elf_loongarch64_hash_symbol (struct elf_link_hash_entry *h)
 #define bfd_elfNN_bfd_reloc_name_lookup loongarch_reloc_name_lookup
 #define elf_info_to_howto_rel NULL /* Fall through to elf_info_to_howto.  */
 #define elf_info_to_howto loongarch_info_to_howto_rela
+#define bfd_elfNN_mkobject						  \
+  elfNN_loongarch_object
 #define bfd_elfNN_bfd_merge_private_bfd_data				  \
   elfNN_loongarch_merge_private_bfd_data
 
diff --git a/bfd/elfxx-riscv.c b/bfd/elfxx-riscv.c
index b3adbed1913..80260d513c4 100644
--- a/bfd/elfxx-riscv.c
+++ b/bfd/elfxx-riscv.c
@@ -1213,6 +1213,7 @@ static struct riscv_implicit_subset riscv_implicit_subsets[] =
   {"zcd", "+d,+zca", check_implicit_always},
   {"zcf", "+f,+zca", check_implicit_always},
   {"zcmp", "+zca", check_implicit_always},
+  {"zcmop", "+zca", check_implicit_always},
 
   {"shcounterenw", "+h", check_implicit_always},
   {"shgatpa", "+h", check_implicit_always},
@@ -1344,6 +1345,7 @@ static struct riscv_supported_ext riscv_supported_std_z_ext[] =
   {"zihintntl",		ISA_SPEC_CLASS_DRAFT,		1, 0,  0 },
   {"zihintpause",	ISA_SPEC_CLASS_DRAFT,		2, 0,  0 },
   {"zihpm",		ISA_SPEC_CLASS_DRAFT,		2, 0,  0 },
+  {"zimop",		ISA_SPEC_CLASS_DRAFT,		1, 0,  0 },
   {"zmmul",		ISA_SPEC_CLASS_DRAFT,		1, 0,  0 },
   {"za64rs",		ISA_SPEC_CLASS_DRAFT,		1, 0,  0 },
   {"za128rs",		ISA_SPEC_CLASS_DRAFT,		1, 0,  0 },
@@ -1420,6 +1422,7 @@ static struct riscv_supported_ext riscv_supported_std_z_ext[] =
   {"zcb",		ISA_SPEC_CLASS_DRAFT,		1, 0,  0 },
   {"zcf",		ISA_SPEC_CLASS_DRAFT,		1, 0,  0 },
   {"zcd",		ISA_SPEC_CLASS_DRAFT,		1, 0,  0 },
+  {"zcmop",		ISA_SPEC_CLASS_DRAFT,		1, 0,  0 },
   {"zcmp",		ISA_SPEC_CLASS_DRAFT,		1, 0,  0 },
   {NULL, 0, 0, 0, 0}
 };
@@ -2556,6 +2559,8 @@ riscv_multi_subset_supports (riscv_parse_subset_t *rps,
 		  || riscv_subset_supports (rps, "zca")));
     case INSN_CLASS_ZIHINTPAUSE:
       return riscv_subset_supports (rps, "zihintpause");
+    case INSN_CLASS_ZIMOP:
+      return riscv_subset_supports (rps, "zimop");
     case INSN_CLASS_M:
       return riscv_subset_supports (rps, "m");
     case INSN_CLASS_ZMMUL:
@@ -2708,6 +2713,8 @@ riscv_multi_subset_supports (riscv_parse_subset_t *rps,
     case INSN_CLASS_ZCB_AND_ZMMUL:
       return (riscv_subset_supports (rps, "zcb")
 	      && riscv_subset_supports (rps, "zmmul"));
+    case INSN_CLASS_ZCMOP:
+      return riscv_subset_supports (rps, "zcmop");
     case INSN_CLASS_ZCMP:
       return riscv_subset_supports (rps, "zcmp");
     case INSN_CLASS_SVINVAL:
@@ -2803,6 +2810,8 @@ riscv_multi_subset_supports_ext (riscv_parse_subset_t *rps,
 	return _("c' or `zca");
     case INSN_CLASS_ZIHINTPAUSE:
       return "zihintpause";
+    case INSN_CLASS_ZIMOP:
+      return "zimop";
     case INSN_CLASS_M:
       return "m";
     case INSN_CLASS_ZMMUL:
@@ -2982,6 +2991,8 @@ riscv_multi_subset_supports_ext (riscv_parse_subset_t *rps,
       return _("zcb' and `zbb");
     case INSN_CLASS_ZCB_AND_ZMMUL:
       return _("zcb' and `zmmul', or `zcb' and `m");
+    case INSN_CLASS_ZCMOP:
+      return "zcmop";
     case INSN_CLASS_ZCMP:
       return "zcmp";
     case INSN_CLASS_SVINVAL:
diff --git a/bfd/libbfd.c b/bfd/libbfd.c
index 53868471001..4da842ead84 100644
--- a/bfd/libbfd.c
+++ b/bfd/libbfd.c
@@ -1126,7 +1126,7 @@ _bfd_munmap_readonly_temporary (void *ptr, size_t rsize)
 {
   /* NB: Since _bfd_munmap_readonly_temporary is called like free, PTR
      may be NULL.  Otherwise, PTR and RSIZE must be valid.  If RSIZE is
-     0, _bfd_malloc_and_read is called.  */
+     0, free is called.  */
   if (ptr == NULL)
     return;
   if (rsize != 0)
diff --git a/bfd/mach-o.c b/bfd/mach-o.c
index 93224aaed00..974747caadd 100644
--- a/bfd/mach-o.c
+++ b/bfd/mach-o.c
@@ -6037,7 +6037,7 @@ bfd_mach_o_lookup_uuid_command (bfd *abfd)
   bfd_mach_o_load_command *uuid_cmd = NULL;
   int ncmd = bfd_mach_o_lookup_command (abfd, BFD_MACH_O_LC_UUID, &uuid_cmd);
   if (ncmd != 1 || uuid_cmd == NULL)
-    return false;
+    return NULL;
   return &uuid_cmd->command.uuid;
 }
 
diff --git a/bfd/plugin.c b/bfd/plugin.c
index 026654fd9d3..de2137fddc4 100644
--- a/bfd/plugin.c
+++ b/bfd/plugin.c
@@ -329,13 +329,23 @@ try_claim (bfd *abfd)
   struct ld_plugin_input_file file;
 
   file.handle = abfd;
-  if (bfd_plugin_open_input (abfd, &file)
-      && current_plugin->claim_file)
+  if (bfd_plugin_open_input (abfd, &file))
     {
-      current_plugin->claim_file (&file, &claimed);
-      bfd_plugin_close_file_descriptor ((abfd->my_archive != NULL
-					 ? abfd : NULL),
-					file.fd);
+      bool claim_file_called = false;
+      if (current_plugin->claim_file_v2)
+	{
+	  current_plugin->claim_file_v2 (&file, &claimed, false);
+	  claim_file_called = true;
+	}
+      else if (current_plugin->claim_file)
+	{
+	  current_plugin->claim_file (&file, &claimed);
+	  claim_file_called = true;
+	}
+      if (claim_file_called)
+	bfd_plugin_close_file_descriptor ((abfd->my_archive != NULL
+					   ? abfd : NULL),
+					  file.fd);
     }
 
   return claimed;
@@ -586,8 +596,12 @@ load_plugin (bfd *abfd)
 static bfd_cleanup
 bfd_plugin_object_p (bfd *abfd)
 {
+  /* Since ld_plugin_object_p is called only for linker command-line input
+     objects, pass true to ld_plugin_object_p so that the same input IR
+     file won't be included twice if the LDPT_REGISTER_CLAIM_FILE_HOOK_V2
+     isn't used.  */
   if (ld_plugin_object_p)
-    return ld_plugin_object_p (abfd, false);
+    return ld_plugin_object_p (abfd, true);
 
   if (abfd->plugin_format == bfd_plugin_unknown && !load_plugin (abfd))
     return NULL;
diff --git a/bfd/po/bfd.pot b/bfd/po/bfd.pot
index 1a5ce2e1345..bbb84807c21 100644
--- a/bfd/po/bfd.pot
+++ b/bfd/po/bfd.pot
@@ -8,7 +8,7 @@ msgid ""
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: https://sourceware.org/bugzilla/\n"
-"POT-Creation-Date: 2024-08-04 14:00+0100\n"
+"POT-Creation-Date: 2024-08-17 17:39+0100\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
@@ -129,7 +129,7 @@ msgstr ""
 msgid "warning: writing archive was slow: rewriting timestamp"
 msgstr ""
 
-#: archive.c:2363 archive.c:2424 elflink.c:4930 linker.c:1436
+#: archive.c:2363 archive.c:2424 elflink.c:4931 linker.c:1436
 #, c-format
 msgid "%pB: plugin needed to handle lto object"
 msgstr ""
@@ -142,115 +142,115 @@ msgstr ""
 msgid "Writing updated armap timestamp"
 msgstr ""
 
-#: bfd.c:777
-msgid "no error"
-msgstr ""
-
 #: bfd.c:778
-msgid "system call error"
+msgid "no error"
 msgstr ""
 
 #: bfd.c:779
-msgid "invalid bfd target"
+msgid "system call error"
 msgstr ""
 
 #: bfd.c:780
-msgid "file in wrong format"
+msgid "invalid bfd target"
 msgstr ""
 
 #: bfd.c:781
-msgid "archive object file in wrong format"
+msgid "file in wrong format"
 msgstr ""
 
 #: bfd.c:782
-msgid "invalid operation"
+msgid "archive object file in wrong format"
 msgstr ""
 
 #: bfd.c:783
-msgid "memory exhausted"
+msgid "invalid operation"
 msgstr ""
 
 #: bfd.c:784
-msgid "no symbols"
+msgid "memory exhausted"
 msgstr ""
 
 #: bfd.c:785
-msgid "archive has no index; run ranlib to add one"
+msgid "no symbols"
 msgstr ""
 
 #: bfd.c:786
-msgid "no more archived files"
+msgid "archive has no index; run ranlib to add one"
 msgstr ""
 
 #: bfd.c:787
-msgid "malformed archive"
+msgid "no more archived files"
 msgstr ""
 
 #: bfd.c:788
-msgid "DSO missing from command line"
+msgid "malformed archive"
 msgstr ""
 
 #: bfd.c:789
-msgid "file format not recognized"
+msgid "DSO missing from command line"
 msgstr ""
 
 #: bfd.c:790
-msgid "file format is ambiguous"
+msgid "file format not recognized"
 msgstr ""
 
 #: bfd.c:791
-msgid "section has no contents"
+msgid "file format is ambiguous"
 msgstr ""
 
 #: bfd.c:792
-msgid "nonrepresentable section on output"
+msgid "section has no contents"
 msgstr ""
 
 #: bfd.c:793
-msgid "symbol needs debug section which does not exist"
+msgid "nonrepresentable section on output"
 msgstr ""
 
 #: bfd.c:794
-msgid "bad value"
+msgid "symbol needs debug section which does not exist"
 msgstr ""
 
 #: bfd.c:795
-msgid "file truncated"
+msgid "bad value"
 msgstr ""
 
 #: bfd.c:796
-msgid "file too big"
+msgid "file truncated"
 msgstr ""
 
 #: bfd.c:797
-msgid "sorry, cannot handle this file"
+msgid "file too big"
 msgstr ""
 
 #: bfd.c:798
-#, c-format
-msgid "error reading %s: %s"
+msgid "sorry, cannot handle this file"
 msgstr ""
 
 #: bfd.c:799
+#, c-format
+msgid "error reading %s: %s"
+msgstr ""
+
+#: bfd.c:800
 msgid "#<invalid error code>"
 msgstr ""
 
-#: bfd.c:2198
+#: bfd.c:2199
 #, c-format
 msgid "BFD %s assertion fail %s:%d"
 msgstr ""
 
-#: bfd.c:2211
+#: bfd.c:2212
 #, c-format
 msgid "%s: BFD %s internal error, aborting at %s:%d in %s\n"
 msgstr ""
 
-#: bfd.c:2215
+#: bfd.c:2216
 #, c-format
 msgid "%s: BFD %s internal error, aborting at %s:%d\n"
 msgstr ""
 
-#: bfd.c:2218
+#: bfd.c:2219
 #, c-format
 msgid "Please report this bug.\n"
 msgstr ""
@@ -560,16 +560,16 @@ msgstr ""
 msgid "<corrupt info> %s"
 msgstr ""
 
-#: coffgen.c:2796 elflink.c:15466 linker.c:2987
+#: coffgen.c:2796 elflink.c:15468 linker.c:2987
 msgid "%F%P: already_linked_table: %E\n"
 msgstr ""
 
-#: coffgen.c:3138 elflink.c:14404
+#: coffgen.c:3138 elflink.c:14406
 #, c-format
 msgid "removing unused section '%pA' in file '%pB'"
 msgstr ""
 
-#: coffgen.c:3215 elflink.c:14635
+#: coffgen.c:3215 elflink.c:14637
 msgid "warning: gc-sections option ignored"
 msgstr ""
 
@@ -578,7 +578,7 @@ msgstr ""
 msgid "warning: symbol `%s' is both section and non-section"
 msgstr ""
 
-#: cofflink.c:503 elf64-ia64-vms.c:5199 elflink.c:5559
+#: cofflink.c:503 elf64-ia64-vms.c:5199 elflink.c:5560
 #, c-format
 msgid "warning: type of symbol `%s' changed from %d to %d in %pB"
 msgstr ""
@@ -588,7 +588,7 @@ msgstr ""
 msgid "%pB: relocs in section `%pA', but it has no contents"
 msgstr ""
 
-#: cofflink.c:2403 elflink.c:11802
+#: cofflink.c:2403 elflink.c:11804
 #, c-format
 msgid ""
 "%X`%s' referenced in section `%pA' of %pB: defined in discarded section `%"
@@ -916,7 +916,7 @@ msgstr ""
 
 #. xgettext:c-format.
 #: elf-ifunc.c:144
-#: elfnn-loongarch.c:1624
+#: elfnn-loongarch.c:1630
 #, c-format
 msgid ""
 "%F%P: dynamic STT_GNU_IFUNC symbol `%s' with pointer equality in `%pB' can "
@@ -1127,7 +1127,7 @@ msgstr ""
 
 #: elf.c:518 elf32-arm.c:17695
 #: elfnn-aarch64.c:8344
-#: elfnn-loongarch.c:5920
+#: elfnn-loongarch.c:5935
 #, c-format
 msgid "%pB symbol number %lu references nonexistent SHT_SYMTAB_SHNDX section"
 msgstr ""
@@ -2185,7 +2185,7 @@ msgstr ""
 #: elfxx-x86.c:970
 #: elfnn-aarch64.c:7848
 #: elfnn-kvx.c:3248
-#: elfnn-loongarch.c:910
+#: elfnn-loongarch.c:916
 #: elfnn-riscv.c:768
 #, c-format
 msgid "%pB: bad symbol index: %d"
@@ -2202,7 +2202,7 @@ msgstr ""
 msgid "errors encountered processing file %pB"
 msgstr ""
 
-#: elf32-arm.c:17364 elflink.c:13561 elflink.c:13608
+#: elf32-arm.c:17364 elflink.c:13563 elflink.c:13610
 #, c-format
 msgid "could not find section %s"
 msgstr ""
@@ -2792,7 +2792,7 @@ msgstr ""
 #: elf32-i386.c:1713 elf32-s390.c:1151 elf32-sh.c:5500 elf32-tilepro.c:1548
 #: elf32-xtensa.c:1263 elf64-s390.c:1083 elfxx-sparc.c:1556
 #: elfxx-tilegx.c:1767
-#: elfnn-loongarch.c:726
+#: elfnn-loongarch.c:732
 #: elfnn-riscv.c:675
 #, c-format
 msgid "%pB: `%s' accessed both as normal and thread local symbol"
@@ -4086,7 +4086,7 @@ msgstr ""
 #: elf32-tilepro.c:3626 elfxx-tilegx.c:4018 elfxx-x86.c:2727
 #: elfnn-aarch64.c:10453
 #: elfnn-kvx.c:4633
-#: elfnn-loongarch.c:5850
+#: elfnn-loongarch.c:5865
 #: elfnn-riscv.c:3617
 #, c-format
 msgid "discarded output section: `%pA'"
@@ -4455,9 +4455,9 @@ msgstr ""
 msgid "%pB: .got subsegment exceeds 64K (size %d)"
 msgstr ""
 
-#: elf64-alpha.c:2680 elflink.c:15728
+#: elf64-alpha.c:2680 elflink.c:15730
 #: elfnn-kvx.c:4020
-#: elfnn-loongarch.c:1927
+#: elfnn-loongarch.c:1933
 #, c-format
 msgid "%pB: dynamic relocation against `%pT' in read-only section `%pA'\n"
 msgstr ""
@@ -4478,7 +4478,7 @@ msgid "%pB: change in gp: BRSGP %s"
 msgstr ""
 
 #: elf64-alpha.c:4465 mach-o.c:625
-#: elfnn-loongarch.c:868
+#: elfnn-loongarch.c:874
 #: elfnn-riscv.c:726
 #: elfnn-riscv.c:931
 #: elfnn-riscv.c:973
@@ -4642,7 +4642,7 @@ msgstr ""
 msgid "%pB: linking auto-pic files with non-auto-pic files"
 msgstr ""
 
-#: elf64-ia64-vms.c:5149 elflink.c:5490
+#: elf64-ia64-vms.c:5149 elflink.c:5491
 #, c-format
 msgid ""
 "warning: alignment %u of common symbol `%s' in %pB is greater than the "
@@ -4654,7 +4654,7 @@ msgstr ""
 msgid "warning: alignment %u of symbol `%s' in %pB is smaller than %u in %pB"
 msgstr ""
 
-#: elf64-ia64-vms.c:5172 elflink.c:5519
+#: elf64-ia64-vms.c:5172 elflink.c:5520
 #, c-format
 msgid ""
 "warning: size of symbol `%s' changed from %<PRIu64> in %pB to %<PRIu64> in %"
@@ -5093,7 +5093,7 @@ msgid ""
 "section `%pA' is out of range"
 msgstr ""
 
-#: elf64-x86-64.c:3714 elflink.c:14034
+#: elf64-x86-64.c:3714 elflink.c:14036
 msgid "%F%P: corrupt input: %pB\n"
 msgstr ""
 
@@ -5210,306 +5210,306 @@ msgstr ""
 msgid "%P: copy reloc against protected `%pT' is dangerous\n"
 msgstr ""
 
-#: elflink.c:4337
+#: elflink.c:4338
 msgid "%F%P: %pB: failed to add %s to first hash\n"
 msgstr ""
 
-#: elflink.c:4405
+#: elflink.c:4406
 msgid "%F%P: first_hash failed to create: %E\n"
 msgstr ""
 
-#: elflink.c:4436
+#: elflink.c:4437
 #, c-format
 msgid "alternate ELF machine code found (%d) in %pB, expecting %d"
 msgstr ""
 
-#: elflink.c:4919
+#: elflink.c:4920
 #, c-format
 msgid "%pB: invalid version offset %lx (max %lx)"
 msgstr ""
 
-#: elflink.c:4988
+#: elflink.c:4989
 #, c-format
 msgid "%pB: %s local symbol at index %lu (>= sh_info of %lu)"
 msgstr ""
 
-#: elflink.c:5136
+#: elflink.c:5137
 #, c-format
 msgid "%pB: not enough version information"
 msgstr ""
 
-#: elflink.c:5174
+#: elflink.c:5175
 #, c-format
 msgid "%pB: %s: invalid version %u (max %d)"
 msgstr ""
 
-#: elflink.c:5211
+#: elflink.c:5212
 #, c-format
 msgid "%pB: %s: invalid needed version %d"
 msgstr ""
 
-#: elflink.c:5497
+#: elflink.c:5498
 #, c-format
 msgid ""
 "warning: alignment %u of normal symbol `%s' in %pB is smaller than %u used "
 "by the common definition in %pB"
 msgstr ""
 
-#: elflink.c:5504
+#: elflink.c:5505
 msgid ""
 "warning: NOTE: alignment discrepancies can cause real problems.  "
 "Investigation is advised."
 msgstr ""
 
-#: elflink.c:5526
+#: elflink.c:5527
 msgid ""
 "warning: NOTE: size discrepancies can cause real problems.  Investigation is "
 "advised."
 msgstr ""
 
-#: elflink.c:5669
+#: elflink.c:5670
 #, c-format
 msgid "%pB: undefined reference to symbol '%s'"
 msgstr ""
 
-#: elflink.c:6759
+#: elflink.c:6761
 #, c-format
 msgid "%pB: stack size specified and %s set"
 msgstr ""
 
-#: elflink.c:6763
+#: elflink.c:6765
 #, c-format
 msgid "%pB: %s not absolute"
 msgstr ""
 
-#: elflink.c:6975
+#: elflink.c:6977
 #, c-format
 msgid "%s: undefined version: %s"
 msgstr ""
 
-#: elflink.c:7364
+#: elflink.c:7366
 msgid ""
 "error: creating an executable stack because of -z execstack command line "
 "option"
 msgstr ""
 
-#: elflink.c:7370
+#: elflink.c:7372
 msgid ""
 "warning: enabling an executable stack because of -z execstack command line "
 "option"
 msgstr ""
 
-#: elflink.c:7432
+#: elflink.c:7434
 #, c-format
 msgid ""
 "error: %s: is triggering the generation of an executable stack (because it "
 "has an executable .note.GNU-stack section)"
 msgstr ""
 
-#: elflink.c:7438
+#: elflink.c:7440
 #, c-format
 msgid ""
 "warning: %s: requires executable stack (because the .note.GNU-stack section "
 "is executable)"
 msgstr ""
 
-#: elflink.c:7446
+#: elflink.c:7448
 #, c-format
 msgid ""
 "error: %s: is triggering the generation of an executable stack because it "
 "does not have a .note.GNU-stack section"
 msgstr ""
 
-#: elflink.c:7452
+#: elflink.c:7454
 #, c-format
 msgid "warning: %s: missing .note.GNU-stack section implies executable stack"
 msgstr ""
 
-#: elflink.c:7455
+#: elflink.c:7457
 msgid ""
 "NOTE: This behaviour is deprecated and will be removed in a future version "
 "of the linker"
 msgstr ""
 
-#: elflink.c:7609
+#: elflink.c:7611
 #, c-format
 msgid "%pB: .preinit_array section is not allowed in DSO"
 msgstr ""
 
-#: elflink.c:9207
+#: elflink.c:9209
 #, c-format
 msgid "undefined %s reference in complex symbol: %s"
 msgstr ""
 
-#: elflink.c:9370 elflink.c:9378
+#: elflink.c:9372 elflink.c:9380
 msgid "division by zero"
 msgstr ""
 
-#: elflink.c:9392
+#: elflink.c:9394
 #, c-format
 msgid "unknown operator '%c' in complex symbol"
 msgstr ""
 
 #. PR 21524: Let the user know if a symbol was removed by garbage collection.
-#: elflink.c:9728
+#: elflink.c:9730
 #, c-format
 msgid ""
 "%pB:%pA: error: relocation references symbol %s which was removed by garbage "
 "collection"
 msgstr ""
 
-#: elflink.c:9731
+#: elflink.c:9733
 #, c-format
 msgid "%pB:%pA: error: try relinking with --gc-keep-exported enabled"
 msgstr ""
 
-#: elflink.c:9982 elflink.c:10000 elflink.c:10039 elflink.c:10057
+#: elflink.c:9984 elflink.c:10002 elflink.c:10041 elflink.c:10059
 #, c-format
 msgid "%pB: unable to sort relocs - they are in more than one size"
 msgstr ""
 
 #. The section size is not divisible by either -
 #. something is wrong.
-#: elflink.c:10016 elflink.c:10073
+#: elflink.c:10018 elflink.c:10075
 #, c-format
 msgid "%pB: unable to sort relocs - they are of an unknown size"
 msgstr ""
 
-#: elflink.c:10125
+#: elflink.c:10127
 msgid "not enough memory to sort relocations"
 msgstr ""
 
-#: elflink.c:10463
+#: elflink.c:10465
 #, c-format
 msgid "%pB: too many sections: %d (>= %d)"
 msgstr ""
 
-#: elflink.c:10739
+#: elflink.c:10741
 #, c-format
 msgid "%pB: internal symbol `%s' in %pB is referenced by DSO"
 msgstr ""
 
-#: elflink.c:10742
+#: elflink.c:10744
 #, c-format
 msgid "%pB: hidden symbol `%s' in %pB is referenced by DSO"
 msgstr ""
 
-#: elflink.c:10745
+#: elflink.c:10747
 #, c-format
 msgid "%pB: local symbol `%s' in %pB is referenced by DSO"
 msgstr ""
 
-#: elflink.c:10838
+#: elflink.c:10840
 #, c-format
 msgid "%pB: could not find output section %pA for input section %pA"
 msgstr ""
 
-#: elflink.c:10996
+#: elflink.c:10998
 #, c-format
 msgid "%pB: protected symbol `%s' isn't defined"
 msgstr ""
 
-#: elflink.c:10999
+#: elflink.c:11001
 #, c-format
 msgid "%pB: internal symbol `%s' isn't defined"
 msgstr ""
 
-#: elflink.c:11002
+#: elflink.c:11004
 #, c-format
 msgid "%pB: hidden symbol `%s' isn't defined"
 msgstr ""
 
-#: elflink.c:11034
+#: elflink.c:11036
 #, c-format
 msgid "%pB: no symbol version section for versioned symbol `%s'"
 msgstr ""
 
-#: elflink.c:11716
+#: elflink.c:11718
 #, c-format
 msgid ""
 "error: %pB contains a reloc (%#<PRIx64>) for section %pA that references a "
 "non-existent global symbol"
 msgstr ""
 
-#: elflink.c:12186
+#: elflink.c:12188
 #, c-format
 msgid "error: %pB: size of section %pA is not multiple of address size"
 msgstr ""
 
-#: elflink.c:12466
+#: elflink.c:12468
 #, c-format
 msgid "%pB: no symbol found for import library"
 msgstr ""
 
-#: elflink.c:13072
+#: elflink.c:13074
 msgid "%F%P: %pB: failed to finish relative relocations\n"
 msgstr ""
 
-#: elflink.c:13149
+#: elflink.c:13151
 #, c-format
 msgid "%pB: file class %s incompatible with %s"
 msgstr ""
 
-#: elflink.c:13398
+#: elflink.c:13400
 #, c-format
 msgid "%pB: failed to generate import library"
 msgstr ""
 
-#: elflink.c:13566
+#: elflink.c:13568
 #, c-format
 msgid "warning: %s section has zero size"
 msgstr ""
 
-#: elflink.c:13614
+#: elflink.c:13616
 #, c-format
 msgid "warning: section '%s' is being made into a note"
 msgstr ""
 
-#: elflink.c:13708
+#: elflink.c:13710
 msgid "%P%X: read-only segment has dynamic relocations\n"
 msgstr ""
 
-#: elflink.c:13711
+#: elflink.c:13713
 msgid "%P: warning: creating DT_TEXTREL in a shared object\n"
 msgstr ""
 
-#: elflink.c:13714
+#: elflink.c:13716
 msgid "%P: warning: creating DT_TEXTREL in a PDE\n"
 msgstr ""
 
-#: elflink.c:13717
+#: elflink.c:13719
 msgid "%P: warning: creating DT_TEXTREL in a PIE\n"
 msgstr ""
 
-#: elflink.c:13854
+#: elflink.c:13856
 msgid "%P%X: can not read symbols: %E\n"
 msgstr ""
 
-#: elflink.c:14287
+#: elflink.c:14289
 msgid "%F%P: %pB(%pA): error: need linked-to section for --gc-sections\n"
 msgstr ""
 
-#: elflink.c:14767
+#: elflink.c:14769
 #, c-format
 msgid "%pB: %pA+%#<PRIx64>: no symbol found for INHERIT"
 msgstr ""
 
-#: elflink.c:14808
+#: elflink.c:14810
 #, c-format
 msgid "%pB: section '%pA': corrupt VTENTRY entry"
 msgstr ""
 
-#: elflink.c:14951
+#: elflink.c:14953
 #, c-format
 msgid "unrecognized INPUT_SECTION_FLAG %s\n"
 msgstr ""
 
-#: elflink.c:15734
+#: elflink.c:15736
 #, c-format
 msgid "%P: %pB: warning: relocation against `%s' in read-only section `%pA'\n"
 msgstr ""
 
-#: elflink.c:15823
+#: elflink.c:15825
 msgid ""
 "%P: warning: GNU indirect functions with DT_TEXTREL may result in a segfault "
 "at runtime; recompile with %s\n"
@@ -5918,242 +5918,242 @@ msgstr ""
 msgid " [not 32bitmode]"
 msgstr ""
 
-#: elfxx-riscv.c:1799
+#: elfxx-riscv.c:1802
 #, c-format
 msgid "x ISA extension `%s' must be set with the versions"
 msgstr ""
 
-#: elfxx-riscv.c:1805
+#: elfxx-riscv.c:1808
 #, c-format
 msgid "cannot find default versions of the ISA extension `%s'"
 msgstr ""
 
-#: elfxx-riscv.c:1911
+#: elfxx-riscv.c:1914
 #, c-format
 msgid "%s: first ISA extension must be `e', `i' or `g'"
 msgstr ""
 
-#: elfxx-riscv.c:1935
+#: elfxx-riscv.c:1938
 #, c-format
 msgid "%s: unknown standard ISA extension or prefix class `%c'"
 msgstr ""
 
-#: elfxx-riscv.c:1971
+#: elfxx-riscv.c:1974
 #, c-format
 msgid "%s: invalid prefixed ISA extension `%s' ends with <number>p"
 msgstr ""
 
-#: elfxx-riscv.c:1995
+#: elfxx-riscv.c:1998
 #, c-format
 msgid "%s: unknown prefixed ISA extension `%s'"
 msgstr ""
 
-#: elfxx-riscv.c:2019
+#: elfxx-riscv.c:2022
 #, c-format
 msgid "%s: prefixed ISA extension must separate with _"
 msgstr ""
 
-#: elfxx-riscv.c:2059
+#: elfxx-riscv.c:2062
 #, c-format
 msgid "rv%de does not support the `h' extension"
 msgstr ""
 
-#: elfxx-riscv.c:2067
+#: elfxx-riscv.c:2070
 #, c-format
 msgid "rv%d does not support the `q' extension"
 msgstr ""
 
-#: elfxx-riscv.c:2074
+#: elfxx-riscv.c:2077
 msgid "zcmp' is incompatible with `d/zcd' extension"
 msgstr ""
 
-#: elfxx-riscv.c:2081
+#: elfxx-riscv.c:2084
 #, c-format
 msgid "rv%d does not support the `zcf' extension"
 msgstr ""
 
-#: elfxx-riscv.c:2088
+#: elfxx-riscv.c:2091
 msgid "`zfinx' is conflict with the `f/d/q/zfh/zfhmin' extension"
 msgstr ""
 
-#: elfxx-riscv.c:2095
+#: elfxx-riscv.c:2098
 msgid "`xtheadvector' is conflict with the `v' extension"
 msgstr ""
 
-#: elfxx-riscv.c:2116
+#: elfxx-riscv.c:2119
 msgid "zvl*b extensions need to enable either `v' or `zve' extension"
 msgstr ""
 
-#: elfxx-riscv.c:2178
+#: elfxx-riscv.c:2181
 #, c-format
 msgid "%s: ISA string cannot contain uppercase letters"
 msgstr ""
 
-#: elfxx-riscv.c:2206
+#: elfxx-riscv.c:2209
 #, c-format
 msgid "%s: ISA string must begin with rv32 or rv64"
 msgstr ""
 
-#: elfxx-riscv.c:2443
+#: elfxx-riscv.c:2446
 #, c-format
 msgid "%sinvalid ISA extension ends with <number>p in %s `%s'"
 msgstr ""
 
-#: elfxx-riscv.c:2466
+#: elfxx-riscv.c:2469
 #, c-format
 msgid "%sunknown ISA extension `%s' in %s `%s'"
 msgstr ""
 
-#: elfxx-riscv.c:2478
+#: elfxx-riscv.c:2481
 #, c-format
 msgid "%scannot + or - base extension `%s' in %s `%s'"
 msgstr ""
 
-#: elfxx-riscv.c:2763 elfxx-riscv.c:3033
+#: elfxx-riscv.c:2770 elfxx-riscv.c:3044
 msgid "internal: unreachable INSN_CLASS_*"
 msgstr ""
 
-#: elfxx-riscv.c:2798
+#: elfxx-riscv.c:2805
 msgid "zihintntl' and `c', or `zihintntl' and `zca"
 msgstr ""
 
-#: elfxx-riscv.c:2803 elfxx-riscv.c:2827
+#: elfxx-riscv.c:2810 elfxx-riscv.c:2836
 msgid "c' or `zca"
 msgstr ""
 
-#: elfxx-riscv.c:2809
+#: elfxx-riscv.c:2818
 msgid "m' or `zmmul"
 msgstr ""
 
-#: elfxx-riscv.c:2833
+#: elfxx-riscv.c:2842
 msgid "f' and `c', or `f' and `zcf"
 msgstr ""
 
-#: elfxx-riscv.c:2838
+#: elfxx-riscv.c:2847
 msgid "c' or `zcf"
 msgstr ""
 
-#: elfxx-riscv.c:2844
+#: elfxx-riscv.c:2853
 msgid "d' and `c', or `d' and `zcd"
 msgstr ""
 
-#: elfxx-riscv.c:2849
+#: elfxx-riscv.c:2858
 msgid "c' or `zcd"
 msgstr ""
 
-#: elfxx-riscv.c:2851
+#: elfxx-riscv.c:2860
 msgid "f' or `zfinx"
 msgstr ""
 
-#: elfxx-riscv.c:2853
+#: elfxx-riscv.c:2862
 msgid "d' or `zdinx"
 msgstr ""
 
-#: elfxx-riscv.c:2855
+#: elfxx-riscv.c:2864
 msgid "q' or `zqinx"
 msgstr ""
 
-#: elfxx-riscv.c:2857
+#: elfxx-riscv.c:2866
 msgid "zfh' or `zhinx"
 msgstr ""
 
-#: elfxx-riscv.c:2861
+#: elfxx-riscv.c:2870
 msgid "zfhmin' or `zhinxmin"
 msgstr ""
 
-#: elfxx-riscv.c:2872
+#: elfxx-riscv.c:2881
 msgid "zfhmin' and `d', or `zhinxmin' and `zdinx"
 msgstr ""
 
-#: elfxx-riscv.c:2883
+#: elfxx-riscv.c:2892
 msgid "zfhmin' and `q', or `zhinxmin' and `zqinx"
 msgstr ""
 
-#: elfxx-riscv.c:2891
+#: elfxx-riscv.c:2900
 msgid "d' and `zfa"
 msgstr ""
 
-#: elfxx-riscv.c:2899
+#: elfxx-riscv.c:2908
 msgid "q' and `zfa"
 msgstr ""
 
-#: elfxx-riscv.c:2907
+#: elfxx-riscv.c:2916
 msgid "zfh' and `zfa"
 msgstr ""
 
-#: elfxx-riscv.c:2917
+#: elfxx-riscv.c:2926
 msgid "zfh' and `zfa', or `zvfh' and `zfa"
 msgstr ""
 
-#: elfxx-riscv.c:2922
+#: elfxx-riscv.c:2931
 msgid "zfh' or `zvfh"
 msgstr ""
 
-#: elfxx-riscv.c:2938
+#: elfxx-riscv.c:2947
 msgid "zbb' or `zbkb"
 msgstr ""
 
-#: elfxx-riscv.c:2940
+#: elfxx-riscv.c:2949
 msgid "zbc' or `zbkc"
 msgstr ""
 
-#: elfxx-riscv.c:2948
+#: elfxx-riscv.c:2957
 msgid "zknd' or `zkne"
 msgstr ""
 
-#: elfxx-riscv.c:2954
+#: elfxx-riscv.c:2963
 msgid "v' or `zve64x' or `zve32x"
 msgstr ""
 
-#: elfxx-riscv.c:2956
+#: elfxx-riscv.c:2965
 msgid "v' or `zve64d' or `zve64f' or `zve32f"
 msgstr ""
 
-#: elfxx-riscv.c:2958
+#: elfxx-riscv.c:2967
 msgid "zvbb"
 msgstr ""
 
-#: elfxx-riscv.c:2960
+#: elfxx-riscv.c:2969
 msgid "zvbc"
 msgstr ""
 
-#: elfxx-riscv.c:2966
+#: elfxx-riscv.c:2975
 msgid "zvkb"
 msgstr ""
 
-#: elfxx-riscv.c:2968
+#: elfxx-riscv.c:2977
 msgid "zvkg"
 msgstr ""
 
-#: elfxx-riscv.c:2970
+#: elfxx-riscv.c:2979
 msgid "zvkned"
 msgstr ""
 
-#: elfxx-riscv.c:2972
+#: elfxx-riscv.c:2981
 msgid "zvknha' or `zvknhb"
 msgstr ""
 
-#: elfxx-riscv.c:2974
+#: elfxx-riscv.c:2983
 msgid "zvksed"
 msgstr ""
 
-#: elfxx-riscv.c:2976
+#: elfxx-riscv.c:2985
 msgid "zvksh"
 msgstr ""
 
-#: elfxx-riscv.c:2980
+#: elfxx-riscv.c:2989
 msgid "zcb' and `zba"
 msgstr ""
 
-#: elfxx-riscv.c:2982
+#: elfxx-riscv.c:2991
 msgid "zcb' and `zbb"
 msgstr ""
 
-#: elfxx-riscv.c:2984
+#: elfxx-riscv.c:2993
 msgid "zcb' and `zmmul', or `zcb' and `m"
 msgstr ""
 
-#: elfxx-riscv.c:2990
+#: elfxx-riscv.c:3001
 msgid "h"
 msgstr ""
 
@@ -9364,13 +9364,13 @@ msgstr ""
 msgid "relocation against `%s' has faulty GOT type "
 msgstr ""
 
-#: elfnn-loongarch.c:283
-#: elfnn-loongarch.c:335
+#: elfnn-loongarch.c:289
+#: elfnn-loongarch.c:341
 #, c-format
 msgid "%#<PRIx64> invaild imm"
 msgstr ""
 
-#: elfnn-loongarch.c:517
+#: elfnn-loongarch.c:523
 #: elfnn-riscv.c:4161
 #, c-format
 msgid ""
@@ -9378,47 +9378,47 @@ msgid ""
 "  target emulation `%s' does not match `%s'"
 msgstr ""
 
-#: elfnn-loongarch.c:572
+#: elfnn-loongarch.c:578
 #, c-format
 msgid "%pB: can't link different ABI object."
 msgstr ""
 
-#: elfnn-loongarch.c:714
+#: elfnn-loongarch.c:720
 msgid "Internal error: unreachable."
 msgstr ""
 
-#: elfnn-loongarch.c:866
+#: elfnn-loongarch.c:872
 #, c-format
 msgid ""
 "%pB:(%pA+%#lx): relocation %s against `%s` can not be used when making a "
 "shared object; recompile with -fPIC"
 msgstr ""
 
-#: elfnn-loongarch.c:990
+#: elfnn-loongarch.c:996
 #, c-format
 msgid ""
 "%pB: stack based reloc type (%u) is not supported with -z pack-relative-"
 "relocs"
 msgstr ""
 
-#: elfnn-loongarch.c:1151
+#: elfnn-loongarch.c:1157
 #, c-format
 msgid ""
 "%pB: relocation R_LARCH_32 against non-absolute symbol `%s' cannot be used "
 "in ELFCLASS64 when making a shared object or PIE"
 msgstr ""
 
-#: elfnn-loongarch.c:1216
+#: elfnn-loongarch.c:1222
 #, c-format
 msgid ""
 "%pB: R_LARCH_ALIGN with offset %<PRId64> not aligned to instruction boundary"
 msgstr ""
 
-#: elfnn-loongarch.c:4526
+#: elfnn-loongarch.c:4535
 msgid "recompile with 'gcc -mno-relax' or 'as -mno-relax' or 'ld --no-relax'"
 msgstr ""
 
-#: elfnn-loongarch.c:5124
+#: elfnn-loongarch.c:5133
 #: elfnn-riscv.c:4934
 #, c-format
 msgid ""
diff --git a/bfd/version.m4 b/bfd/version.m4
index e3d21199369..f2e4acdb55f 100644
--- a/bfd/version.m4
+++ b/bfd/version.m4
@@ -1 +1 @@
-m4_define([BFD_VERSION], [2.43])
+m4_define([BFD_VERSION], [2.43.1])
diff --git a/bfd/xsym.c b/bfd/xsym.c
index 070ba4a2318..fe14acc121f 100644
--- a/bfd/xsym.c
+++ b/bfd/xsym.c
@@ -130,7 +130,7 @@ bfd_sym_read_name_table (bfd *abfd, bfd_sym_header_block *dshb)
   size_t table_offset = dshb->dshb_nte.dti_first_page * dshb->dshb_page_size;
 
   if (bfd_seek (abfd, table_offset, SEEK_SET) != 0)
-    return false;
+    return NULL;
   return _bfd_alloc_and_read (abfd, table_size, table_size);
 }
 
diff --git a/binutils/configure b/binutils/configure
index 934b9a7352e..0e54d77015d 100755
--- a/binutils/configure
+++ b/binutils/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for binutils 2.43.
+# Generated by GNU Autoconf 2.69 for binutils 2.43.1.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
@@ -587,8 +587,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='binutils'
 PACKAGE_TARNAME='binutils'
-PACKAGE_VERSION='2.43'
-PACKAGE_STRING='binutils 2.43'
+PACKAGE_VERSION='2.43.1'
+PACKAGE_STRING='binutils 2.43.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1407,7 +1407,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures binutils 2.43 to adapt to many kinds of systems.
+\`configure' configures binutils 2.43.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1478,7 +1478,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of binutils 2.43:";;
+     short | recursive ) echo "Configuration of binutils 2.43.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1640,7 +1640,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-binutils configure 2.43
+binutils configure 2.43.1
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -2108,7 +2108,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by binutils $as_me 2.43, which was
+It was created by binutils $as_me 2.43.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -3091,7 +3091,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='binutils'
- VERSION='2.43'
+ VERSION='2.43.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -17170,7 +17170,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by binutils $as_me 2.43, which was
+This file was extended by binutils $as_me 2.43.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -17236,7 +17236,7 @@ _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-binutils config.status 2.43
+binutils config.status 2.43.1
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
diff --git a/binutils/nm.c b/binutils/nm.c
index faf27c59b4d..0ba7604d34f 100644
--- a/binutils/nm.c
+++ b/binutils/nm.c
@@ -682,7 +682,7 @@ print_symname (const char *form, struct extended_symbol_info *info,
 	       const char *name, bfd *abfd)
 {
   char *alloc = NULL;
-  char *atver = NULL;
+  char *atname = NULL;
 
   if (name == NULL)
     name = info->sinfo->name;
@@ -690,9 +690,19 @@ print_symname (const char *form, struct extended_symbol_info *info,
   if (!with_symbol_versions
       && bfd_get_flavour (abfd) == bfd_target_elf_flavour)
     {
-      atver = strchr (name, '@');
+      char *atver = strchr (name, '@');
+
       if (atver)
-	*atver = 0;
+	{
+	  /* PR 32467 - Corrupt binaries might include an @ character in a
+	     symbol name.  Since non-versioned symbol names can be in
+	     read-only memory (via memory mapping of a file's contents) we
+	     cannot just replace the @ character with a NUL.  Instead we
+	     create a truncated copy of the name.  */
+	  atname = xstrdup (name);
+	  atname [atver - name] = 0;
+	  name = atname;
+	}
     }
 
   if (do_demangle && *name)
@@ -703,9 +713,7 @@ print_symname (const char *form, struct extended_symbol_info *info,
     }
 
   if (unicode_display != unicode_default)
-    {
-      name = convert_utf8 (name);
-    }
+    name = convert_utf8 (name);
 
   if (info != NULL && info->elfinfo && with_symbol_versions)
     {
@@ -726,8 +734,8 @@ print_symname (const char *form, struct extended_symbol_info *info,
 	}
     }
   printf (form, name);
-  if (atver)
-    *atver = '@';
+
+  free (atname);
   free (alloc);
 }
 
diff --git a/binutils/prdbg.c b/binutils/prdbg.c
index 3941d6e1791..d6e828ee545 100644
--- a/binutils/prdbg.c
+++ b/binutils/prdbg.c
@@ -2818,7 +2818,7 @@ visibility_name (enum debug_visibility visibility)
       break;
     default:
       abort ();
-      return false;
+      return NULL;
     }
   return s;
 }
diff --git a/gas/NEWS b/gas/NEWS
index b9d742a2375..85523348370 100644
--- a/gas/NEWS
+++ b/gas/NEWS
@@ -46,6 +46,8 @@ Changes in 2.43:
 
 * Add support for RISC-V Zcmp extension with version 1.0.
 
+* Add support for RISC-V Zimop and Zcmop extensions with version 1.0.
+
 * Add support for RISC-V Zfbfmin extension with version 1.0.
 
 * Add support for RISC-V Zvfbfmin extension with version 1.0.
diff --git a/gas/config/tc-i386.c b/gas/config/tc-i386.c
index f7be075d14b..bed54f18e8f 100644
--- a/gas/config/tc-i386.c
+++ b/gas/config/tc-i386.c
@@ -3799,12 +3799,18 @@ tc_i386_fix_adjustable (fixS *fixP)
       || fixP->fx_r_type == BFD_RELOC_X86_64_TPOFF32
       || fixP->fx_r_type == BFD_RELOC_X86_64_TPOFF64
       || fixP->fx_r_type == BFD_RELOC_X86_64_GOTOFF64
+      || fixP->fx_r_type == BFD_RELOC_X86_64_GOT64
       || fixP->fx_r_type == BFD_RELOC_X86_64_GOTPC32_TLSDESC
       || fixP->fx_r_type == BFD_RELOC_X86_64_CODE_4_GOTPC32_TLSDESC
       || fixP->fx_r_type == BFD_RELOC_X86_64_TLSDESC_CALL
       || fixP->fx_r_type == BFD_RELOC_VTABLE_INHERIT
       || fixP->fx_r_type == BFD_RELOC_VTABLE_ENTRY)
     return 0;
+  /* Resolve PLT32 relocation against local symbol to section only for
+     PC-relative relocations.  */
+  if (fixP->fx_r_type == BFD_RELOC_386_PLT32
+      || fixP->fx_r_type == BFD_RELOC_X86_64_PLT32)
+    return fixP->fx_pcrel;
   return 1;
 }
 #endif
@@ -14038,7 +14044,8 @@ s_insn (int dummy ATTRIBUTE_UNUSED)
 	case 3:
 	  if (pp.encoding != encoding_default)
 	    {
-	      i.tm.opcode_modifier.vexvvvv = VexVVVV_SRC1;
+	      i.tm.opcode_modifier.vexvvvv = i.tm.extension_opcode == None
+					     ? VexVVVV_SRC1 : VexVVVV_DST;
 	      break;
 	    }
 	  /* Fall through.  */
@@ -18320,8 +18327,12 @@ i386_validate_fix (fixS *fixp)
     {
       /* NB: Commit 292676c1 resolved PLT32 reloc aganst local symbol
 	 to section.  Since PLT32 relocation must be against symbols,
-	 turn such PLT32 relocation into PC32 relocation.  */
+	 turn such PLT32 relocation into PC32 relocation.  NB: We can
+	 turn PLT32 relocation into PC32 relocation only for PC-relative
+	 relocations since non-PC-relative relocations need PLT entries.
+       */
       if (fixp->fx_addsy
+	  && fixp->fx_pcrel
 	  && (fixp->fx_r_type == BFD_RELOC_386_PLT32
 	      || fixp->fx_r_type == BFD_RELOC_X86_64_PLT32)
 	  && symbol_section_p (fixp->fx_addsy))
diff --git a/gas/config/tc-s390.c b/gas/config/tc-s390.c
index 659c6af392b..055b6948c84 100644
--- a/gas/config/tc-s390.c
+++ b/gas/config/tc-s390.c
@@ -342,6 +342,8 @@ s390_parse_cpu (const char *arg,
     { STRING_COMMA_LEN ("z15"), STRING_COMMA_LEN ("arch13"),
       S390_INSTR_FLAG_HTM | S390_INSTR_FLAG_VX },
     { STRING_COMMA_LEN ("z16"), STRING_COMMA_LEN ("arch14"),
+      S390_INSTR_FLAG_HTM | S390_INSTR_FLAG_VX },
+    { STRING_COMMA_LEN (""), STRING_COMMA_LEN ("arch15"),
       S390_INSTR_FLAG_HTM | S390_INSTR_FLAG_VX }
   };
   static struct
@@ -795,13 +797,6 @@ s390_insert_operand (unsigned char *insn,
       uval &= 0xf;
     }
 
-  if (operand->flags & S390_OPERAND_OR1)
-    uval |= 1;
-  if (operand->flags & S390_OPERAND_OR2)
-    uval |= 2;
-  if (operand->flags & S390_OPERAND_OR8)
-    uval |= 8;
-
   /* Duplicate the GPR/VR operand at bit pos 12 to 16.  */
   if (operand->flags & S390_OPERAND_CP16)
     {
diff --git a/gas/config/tc-sparc.c b/gas/config/tc-sparc.c
index aca60e6c4f5..e37189e7c5e 100644
--- a/gas/config/tc-sparc.c
+++ b/gas/config/tc-sparc.c
@@ -2593,13 +2593,6 @@ sparc_ip (char *str, const struct sparc_opcode **pinsn)
 		    break;
 		  }	/* if not an 'f' register.  */
 
-		if (*args == '}' && mask != RS2 (opcode))
-		  {
-		    error_message
-		      = _(": Instruction requires frs2 and frsd must be the same register");
-		    goto error;
-		  }
-
 		switch (*args)
 		  {
 		  case 'v':
@@ -2628,10 +2621,18 @@ sparc_ip (char *str, const struct sparc_opcode **pinsn)
 		  case 'g':
 		  case 'H':
 		  case 'J':
-		  case '}':
                   case '^':
 		    opcode |= RD (mask);
 		    continue;
+
+		  case '}':
+		    if (RD (mask) != (opcode & RD (0x1f)))
+		      {
+			error_message = _(": Instruction requires frs2 and "
+					  "frsd must be the same register");
+			goto error;
+		      }
+		    continue;
 		  }		/* Pack it in.  */
 
 		know (0);
diff --git a/gas/configure b/gas/configure
index b2c5126f788..8f5450c0947 100755
--- a/gas/configure
+++ b/gas/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for gas 2.43.
+# Generated by GNU Autoconf 2.69 for gas 2.43.1.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
@@ -587,8 +587,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='gas'
 PACKAGE_TARNAME='gas'
-PACKAGE_VERSION='2.43'
-PACKAGE_STRING='gas 2.43'
+PACKAGE_VERSION='2.43.1'
+PACKAGE_STRING='gas 2.43.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1392,7 +1392,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures gas 2.43 to adapt to many kinds of systems.
+\`configure' configures gas 2.43.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1463,7 +1463,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of gas 2.43:";;
+     short | recursive ) echo "Configuration of gas 2.43.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1619,7 +1619,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-gas configure 2.43
+gas configure 2.43.1
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -2030,7 +2030,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by gas $as_me 2.43, which was
+It was created by gas $as_me 2.43.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -3010,7 +3010,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='gas'
- VERSION='2.43'
+ VERSION='2.43.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -16855,7 +16855,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by gas $as_me 2.43, which was
+This file was extended by gas $as_me 2.43.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -16921,7 +16921,7 @@ _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-gas config.status 2.43
+gas config.status 2.43.1
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
diff --git a/gas/doc/as.texi b/gas/doc/as.texi
index 3501744dd31..b7fefa1fe49 100644
--- a/gas/doc/as.texi
+++ b/gas/doc/as.texi
@@ -1961,7 +1961,7 @@ Specify which s390 processor variant is the target, @samp{g5} (or
 @samp{arch6}), @samp{z9-109}, @samp{z9-ec} (or @samp{arch7}), @samp{z10} (or
 @samp{arch8}), @samp{z196} (or @samp{arch9}), @samp{zEC12} (or @samp{arch10}),
 @samp{z13} (or @samp{arch11}), @samp{z14} (or @samp{arch12}), @samp{z15}
-(or @samp{arch13}), or @samp{z16} (or @samp{arch14}).
+(or @samp{arch13}), @samp{z16} (or @samp{arch14}), or @samp{arch15}.
 @item -mregnames
 @itemx -mno-regnames
 Allow or disallow symbolic names for registers.
diff --git a/gas/doc/c-s390.texi b/gas/doc/c-s390.texi
index f73dfdeae60..9a4fdfe14f1 100644
--- a/gas/doc/c-s390.texi
+++ b/gas/doc/c-s390.texi
@@ -18,7 +18,7 @@ and eleven chip levels. The architecture modes are the Enterprise System
 Architecture (ESA) and the newer z/Architecture mode. The chip levels
 are g5 (or arch3), g6, z900 (or arch5), z990 (or arch6), z9-109, z9-ec
 (or arch7), z10 (or arch8), z196 (or arch9), zEC12 (or arch10), z13
-(or arch11), z14 (or arch12), z15 (or arch13), or z16 (or arch14).
+(or arch11), z14 (or arch12), z15 (or arch13), z16 (or arch14), or arch15.
 
 @menu
 * s390 Options::                Command-line Options.
@@ -71,8 +71,9 @@ are recognized:
 @code{zEC12} (or @code{arch10}),
 @code{z13} (or @code{arch11}),
 @code{z14} (or @code{arch12}),
-@code{z15} (or @code{arch13}), and
-@code{z16} (or @code{arch14}).
+@code{z15} (or @code{arch13}),
+@code{z16} (or @code{arch14}), and
+@code{arch15}.
 
 Assembling an instruction that is not supported on the target
 processor results in an error message.
@@ -300,10 +301,11 @@ field. The notation changes as follows:
 @display
 @multitable @columnfractions 0.30 0.30
 @headitem full notation @tab short notation
-@item Dn(0,Bn) @tab Dn(Bn)
+@item Dn(Xn,0) @tab Dn(Xn,)
+@item Dn(0,Bn) @tab Dn(,Bn) or Dn(Bn)
 @item Dn(0,0) @tab Dn
 @item Dn(0) @tab Dn
-@item Dn(Ln,0) @tab Dn(Ln)
+@item Dn(Ln,0) @tab Dn(Ln,) or Dn(Ln)
 @end multitable
 @end display
 
diff --git a/gas/macro.c b/gas/macro.c
index a35e1356bbf..d0c90d30e47 100644
--- a/gas/macro.c
+++ b/gas/macro.c
@@ -1389,6 +1389,7 @@ expand_irp (int irpc, size_t idx, sb *in, sb *out, size_t (*get_line) (sb *))
 		      if (idx >= in->len)
 			break;
 		    }
+		  continue;
 		}
 	      sb_reset (&f.actual);
 	      sb_add_char (&f.actual, in->ptr[idx]);
diff --git a/gas/po/gas.pot b/gas/po/gas.pot
index be9b0cd3f7d..e052dceed7f 100644
--- a/gas/po/gas.pot
+++ b/gas/po/gas.pot
@@ -8,7 +8,7 @@ msgid ""
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: https://sourceware.org/bugzilla/\n"
-"POT-Creation-Date: 2024-08-04 14:01+0100\n"
+"POT-Creation-Date: 2024-08-17 17:40+0100\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
@@ -187,12 +187,12 @@ msgstr ""
 msgid "  --elf-stt-common=[no|yes] "
 msgstr ""
 
-#: as.c:307 as.c:318 config/tc-i386.c:17974 config/tc-i386.c:17994
+#: as.c:307 as.c:318 config/tc-i386.c:17975 config/tc-i386.c:17995
 #, c-format
 msgid "(default: yes)\n"
 msgstr ""
 
-#: as.c:309 as.c:320 config/tc-i386.c:17976 config/tc-i386.c:17996
+#: as.c:309 as.c:320 config/tc-i386.c:17977 config/tc-i386.c:17997
 #, c-format
 msgid "(default: no)\n"
 msgstr ""
@@ -946,7 +946,7 @@ msgstr ""
 msgid "Can't set register masks"
 msgstr ""
 
-#: config/obj-elf.c:318 config/tc-sparc.c:4383 config/tc-v850.c:508
+#: config/obj-elf.c:318 config/tc-sparc.c:4384 config/tc-v850.c:508
 #, c-format
 msgid "bad .common segment %s"
 msgstr ""
@@ -1629,7 +1629,7 @@ msgstr ""
 msgid "bad expression"
 msgstr ""
 
-#: config/tc-aarch64.c:722 config/tc-sparc.c:3379
+#: config/tc-aarch64.c:722 config/tc-sparc.c:3380
 msgid "bad segment"
 msgstr ""
 
@@ -2757,12 +2757,12 @@ msgstr ""
 msgid ".COMMon length (%ld.) <0! Ignored."
 msgstr ""
 
-#: config/tc-alpha.c:3525 config/tc-ia64.c:1091 config/tc-sparc.c:4273
+#: config/tc-alpha.c:3525 config/tc-ia64.c:1091 config/tc-sparc.c:4274
 #: config/tc-v850.c:303
 msgid "Ignoring attempt to re-define symbol"
 msgstr ""
 
-#: config/tc-alpha.c:3617 config/tc-sparc.c:4281
+#: config/tc-alpha.c:3617 config/tc-sparc.c:4282
 #, c-format
 msgid "Length of .comm \"%s\" is already %ld. Not changed to %ld."
 msgstr ""
@@ -6255,7 +6255,7 @@ msgstr ""
 msgid "internal error: reloc %d (`%s') not supported by object file format"
 msgstr ""
 
-#: config/tc-cr16.c:696 config/tc-i386.c:18173 config/tc-s390.c:2333
+#: config/tc-cr16.c:696 config/tc-i386.c:18174 config/tc-s390.c:2333
 msgid "GOT already in symbol table"
 msgstr ""
 
@@ -7433,7 +7433,7 @@ msgid "Invalid expression after # number\n"
 msgstr ""
 
 #: config/tc-dlx.c:1178 config/tc-m32r.c:2275 config/tc-nds32.c:7841
-#: config/tc-sparc.c:4014
+#: config/tc-sparc.c:4015
 #, c-format
 msgid "internal error: can't export reloc type %d (`%s')"
 msgstr ""
@@ -8397,7 +8397,7 @@ msgstr ""
 msgid "Intel MCU is 32bit ELF only"
 msgstr ""
 
-#: config/tc-i386.c:3305 config/tc-i386.c:18069
+#: config/tc-i386.c:3305 config/tc-i386.c:18070
 msgid "unknown architecture"
 msgstr ""
 
@@ -9029,7 +9029,7 @@ msgstr ""
 msgid "eGPR use conflicts with encoding specifier"
 msgstr ""
 
-#: config/tc-i386.c:14003 config/tc-i386.c:14046
+#: config/tc-i386.c:14003 config/tc-i386.c:14047
 msgid "too many register/memory operands"
 msgstr ""
 
@@ -9042,7 +9042,7 @@ msgstr ""
 msgid "constant doesn't fit in %d bits"
 msgstr ""
 
-#: config/tc-i386.c:14097
+#: config/tc-i386.c:14098
 msgid "VSIB unavailable with legacy encoding"
 msgstr ""
 
@@ -9050,372 +9050,372 @@ msgstr ""
 #. an 8-bit immediate like for 4-register-operand insns, but that
 #. would require ugly fiddling with process_operands() and/or
 #. build_modrm_byte().
-#: config/tc-i386.c:14108
+#: config/tc-i386.c:14109
 msgid "too many register operands with VSIB"
 msgstr ""
 
-#: config/tc-i386.c:14127
+#: config/tc-i386.c:14128
 #, c-format
 msgid "can't encode register '%s%s' with VEX/XOP/EVEX"
 msgstr ""
 
-#: config/tc-i386.c:14332
+#: config/tc-i386.c:14333
 msgid "conflicting .insn operands"
 msgstr ""
 
-#: config/tc-i386.c:14365 read.c:4266
+#: config/tc-i386.c:14366 read.c:4266
 msgid "SCFI: hand-crafting instructions not supported"
 msgstr ""
 
-#: config/tc-i386.c:14434
+#: config/tc-i386.c:14435
 #, c-format
 msgid "duplicated `{%s}'"
 msgstr ""
 
-#: config/tc-i386.c:14507
+#: config/tc-i386.c:14508
 #, c-format
 msgid "Unsupported broadcast: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:14582
+#: config/tc-i386.c:14583
 #, c-format
 msgid "`%s%s' can't be used for write mask"
 msgstr ""
 
-#: config/tc-i386.c:14602
+#: config/tc-i386.c:14603
 #, c-format
 msgid "invalid write mask `%s'"
 msgstr ""
 
-#: config/tc-i386.c:14623
+#: config/tc-i386.c:14624
 #, c-format
 msgid "duplicated `%s'"
 msgstr ""
 
-#: config/tc-i386.c:14633
+#: config/tc-i386.c:14634
 #, c-format
 msgid "invalid zeroing-masking `%s'"
 msgstr ""
 
-#: config/tc-i386.c:14651
+#: config/tc-i386.c:14652
 #, c-format
 msgid "missing `}' in `%s'"
 msgstr ""
 
 #. We don't know this one.
-#: config/tc-i386.c:14663
+#: config/tc-i386.c:14664
 #, c-format
 msgid "unknown vector operation: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:14669
+#: config/tc-i386.c:14670
 msgid "zeroing-masking only allowed with write mask"
 msgstr ""
 
-#: config/tc-i386.c:14689
+#: config/tc-i386.c:14690
 #, c-format
 msgid "at most %d immediate operands are allowed"
 msgstr ""
 
-#: config/tc-i386.c:14728 config/tc-i386.c:14988
+#: config/tc-i386.c:14729 config/tc-i386.c:14989
 #, c-format
 msgid "junk `%s' after expression"
 msgstr ""
 
-#: config/tc-i386.c:14741
+#: config/tc-i386.c:14742
 #, c-format
 msgid "illegal immediate register operand %s"
 msgstr ""
 
-#: config/tc-i386.c:14755
+#: config/tc-i386.c:14756
 #, c-format
 msgid "missing or invalid immediate expression `%s'"
 msgstr ""
 
-#: config/tc-i386.c:14779 config/tc-i386.c:15068
+#: config/tc-i386.c:14780 config/tc-i386.c:15069
 #, c-format
 msgid "unimplemented segment %s in operand"
 msgstr ""
 
-#: config/tc-i386.c:14828
+#: config/tc-i386.c:14829
 #, c-format
 msgid "expecting scale factor of 1, 2, 4, or 8: got `%s'"
 msgstr ""
 
-#: config/tc-i386.c:14837
+#: config/tc-i386.c:14838
 #, c-format
 msgid "scale factor of %d without an index register"
 msgstr ""
 
-#: config/tc-i386.c:14859
+#: config/tc-i386.c:14860
 #, c-format
 msgid "at most %d displacement operands are allowed"
 msgstr ""
 
-#: config/tc-i386.c:15043
+#: config/tc-i386.c:15044
 #, c-format
 msgid "missing or invalid displacement expression `%s'"
 msgstr ""
 
-#: config/tc-i386.c:15219
+#: config/tc-i386.c:15220
 #, c-format
 msgid "`%s' is not valid here (expected `%c%s%s%c')"
 msgstr ""
 
-#: config/tc-i386.c:15231
+#: config/tc-i386.c:15232
 #, c-format
 msgid "`%s' is not a valid %s expression"
 msgstr ""
 
-#: config/tc-i386.c:15245
+#: config/tc-i386.c:15246
 #, c-format
 msgid "invalid `%s' prefix"
 msgstr ""
 
-#: config/tc-i386.c:15275
+#: config/tc-i386.c:15276
 #, c-format
 msgid "`%s' cannot be used here"
 msgstr ""
 
-#: config/tc-i386.c:15282
+#: config/tc-i386.c:15283
 msgid "register scaling is being ignored here"
 msgstr ""
 
-#: config/tc-i386.c:15330
+#: config/tc-i386.c:15331
 #, c-format
 msgid "Missing '}': '%s'"
 msgstr ""
 
-#: config/tc-i386.c:15336
+#: config/tc-i386.c:15337
 #, c-format
 msgid "Junk after '}': '%s'"
 msgstr ""
 
-#: config/tc-i386.c:15411
+#: config/tc-i386.c:15412
 #, c-format
 msgid "bad memory operand `%s'"
 msgstr ""
 
-#: config/tc-i386.c:15427
+#: config/tc-i386.c:15428
 #, c-format
 msgid "junk `%s' after register"
 msgstr ""
 
-#: config/tc-i386.c:15434
+#: config/tc-i386.c:15435
 #, c-format
 msgid "`%s%s' cannot be used here"
 msgstr ""
 
-#: config/tc-i386.c:15457
+#: config/tc-i386.c:15458
 #, c-format
 msgid "`%s': misplaced `{%s}'"
 msgstr ""
 
-#: config/tc-i386.c:15464 config/tc-i386.c:15638 config/tc-i386.c:15682
+#: config/tc-i386.c:15465 config/tc-i386.c:15639 config/tc-i386.c:15683
 #, c-format
 msgid "bad register name `%s'"
 msgstr ""
 
-#: config/tc-i386.c:15472
+#: config/tc-i386.c:15473
 msgid "immediate operand illegal with absolute jump"
 msgstr ""
 
-#: config/tc-i386.c:15479
+#: config/tc-i386.c:15480
 #, c-format
 msgid "`%s': RC/SAE operand must follow immediate operands"
 msgstr ""
 
-#: config/tc-i386.c:15492
+#: config/tc-i386.c:15493
 #, c-format
 msgid "`%s': misplaced `%s'"
 msgstr ""
 
-#: config/tc-i386.c:15543
+#: config/tc-i386.c:15544
 msgid "unbalanced figure braces"
 msgstr ""
 
-#: config/tc-i386.c:15627
+#: config/tc-i386.c:15628
 #, c-format
 msgid "expecting `,' or `)' after index register in `%s'"
 msgstr ""
 
-#: config/tc-i386.c:15655
+#: config/tc-i386.c:15656
 #, c-format
 msgid "expecting `)' after scale factor in `%s'"
 msgstr ""
 
-#: config/tc-i386.c:15663
+#: config/tc-i386.c:15664
 #, c-format
 msgid "expecting index register or scale factor after `,'; got '%c'"
 msgstr ""
 
-#: config/tc-i386.c:15671
+#: config/tc-i386.c:15672
 #, c-format
 msgid "expecting `,' or `)' after base register in `%s'"
 msgstr ""
 
 #. It's not a memory operand; argh!
-#: config/tc-i386.c:15721
+#: config/tc-i386.c:15722
 #, c-format
 msgid "invalid char %s beginning operand %d `%s'"
 msgstr ""
 
-#: config/tc-i386.c:16382
+#: config/tc-i386.c:16383
 #, c-format
 msgid "%s:%u: add %d%s at 0x%llx to align %s within %d-byte boundary\n"
 msgstr ""
 
-#: config/tc-i386.c:16385
+#: config/tc-i386.c:16386
 #, c-format
 msgid ""
 "%s:%u: add additional %d%s at 0x%llx to align %s within %d-byte boundary\n"
 msgstr ""
 
-#: config/tc-i386.c:16391
+#: config/tc-i386.c:16392
 #, c-format
 msgid ""
 "%s:%u: add %d%s-byte nop at 0x%llx to align %s within %d-byte boundary\n"
 msgstr ""
 
-#: config/tc-i386.c:16458
+#: config/tc-i386.c:16459
 msgid "long jump required"
 msgstr ""
 
-#: config/tc-i386.c:16513
+#: config/tc-i386.c:16514
 msgid "jump target out of range"
 msgstr ""
 
-#: config/tc-i386.c:16999
+#: config/tc-i386.c:17000
 #, c-format
 msgid "register '%s%s' cannot be used here"
 msgstr ""
 
-#: config/tc-i386.c:17253
+#: config/tc-i386.c:17254
 #, c-format
 msgid "invalid -mx86-used-note= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17276
+#: config/tc-i386.c:17277
 msgid "no compiled in support for x86_64"
 msgstr ""
 
-#: config/tc-i386.c:17296
+#: config/tc-i386.c:17297
 msgid "no compiled in support for 32bit x86_64"
 msgstr ""
 
-#: config/tc-i386.c:17300
+#: config/tc-i386.c:17301
 msgid "32bit x86_64 is only supported for ELF"
 msgstr ""
 
-#: config/tc-i386.c:17317
+#: config/tc-i386.c:17318
 msgid "no compiled in support for ix86"
 msgstr ""
 
-#: config/tc-i386.c:17350 config/tc-i386.c:17436
+#: config/tc-i386.c:17351 config/tc-i386.c:17437
 #, c-format
 msgid "invalid -march= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17406
+#: config/tc-i386.c:17407
 msgid "Unrecognized vector size specifier ignored"
 msgstr ""
 
-#: config/tc-i386.c:17446 config/tc-i386.c:17458
+#: config/tc-i386.c:17447 config/tc-i386.c:17459
 #, c-format
 msgid "invalid -mtune= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17467
+#: config/tc-i386.c:17468
 #, c-format
 msgid "invalid -mmnemonic= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17476
+#: config/tc-i386.c:17477
 #, c-format
 msgid "invalid -msyntax= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17504
+#: config/tc-i386.c:17505
 #, c-format
 msgid "invalid -msse-check= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17515
+#: config/tc-i386.c:17516
 #, c-format
 msgid "invalid -moperand-check= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17524
+#: config/tc-i386.c:17525
 #, c-format
 msgid "invalid -mavxscalar= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17533
+#: config/tc-i386.c:17534
 #, c-format
 msgid "invalid -mvexwig= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17548
+#: config/tc-i386.c:17549
 #, c-format
 msgid "invalid -mevexlig= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17561
+#: config/tc-i386.c:17562
 #, c-format
 msgid "invalid -mevexrcig= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17570
+#: config/tc-i386.c:17571
 #, c-format
 msgid "invalid -mevexwig= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17585
+#: config/tc-i386.c:17586
 #, c-format
 msgid "invalid -momit-lock-prefix= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17594
+#: config/tc-i386.c:17595
 #, c-format
 msgid "invalid -mfence-as-lock-add= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17603
+#: config/tc-i386.c:17604
 #, c-format
 msgid "invalid -mlfence-after-load= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17620
+#: config/tc-i386.c:17621
 #, c-format
 msgid "invalid -mlfence-before-indirect-branch= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17634
+#: config/tc-i386.c:17635
 #, c-format
 msgid "invalid -mlfence-before-ret= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17644
+#: config/tc-i386.c:17645
 #, c-format
 msgid "invalid -mrelax-relocations= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17673
+#: config/tc-i386.c:17674
 #, c-format
 msgid "invalid -malign-branch-boundary= value: %s"
 msgstr ""
 
-#: config/tc-i386.c:17687
+#: config/tc-i386.c:17688
 #, c-format
 msgid "invalid -malign-branch-prefix-size= value: %s"
 msgstr ""
 
-#: config/tc-i386.c:17714
+#: config/tc-i386.c:17715
 #, c-format
 msgid "invalid -malign-branch= option: `%s'"
 msgstr ""
 
-#: config/tc-i386.c:17881
+#: config/tc-i386.c:17882
 #, c-format
 msgid ""
 "  -Qy, -Qn                ignored\n"
@@ -9423,7 +9423,7 @@ msgid ""
 "  -k                      ignored\n"
 msgstr ""
 
-#: config/tc-i386.c:17886
+#: config/tc-i386.c:17887
 #, c-format
 msgid ""
 "  -n                      do not optimize code alignment\n"
@@ -9431,32 +9431,32 @@ msgid ""
 "  -q                      quieten some warnings\n"
 msgstr ""
 
-#: config/tc-i386.c:17891
+#: config/tc-i386.c:17892
 #, c-format
 msgid "  -s                      ignored\n"
 msgstr ""
 
-#: config/tc-i386.c:17896
+#: config/tc-i386.c:17897
 #, c-format
 msgid "  --32/--64/--x32         generate 32bit/64bit/x32 object\n"
 msgstr ""
 
-#: config/tc-i386.c:17899
+#: config/tc-i386.c:17900
 #, c-format
 msgid "  --32/--64               generate 32bit/64bit object\n"
 msgstr ""
 
-#: config/tc-i386.c:17904
+#: config/tc-i386.c:17905
 #, c-format
 msgid "  --divide                do not treat `/' as a comment character\n"
 msgstr ""
 
-#: config/tc-i386.c:17907
+#: config/tc-i386.c:17908
 #, c-format
 msgid "  --divide                ignored\n"
 msgstr ""
 
-#: config/tc-i386.c:17910
+#: config/tc-i386.c:17911
 #, c-format
 msgid ""
 "  -march=CPU[,+EXTENSION...]\n"
@@ -9464,24 +9464,24 @@ msgid ""
 "of:\n"
 msgstr ""
 
-#: config/tc-i386.c:17914
+#: config/tc-i386.c:17915
 #, c-format
 msgid ""
 "                          EXTENSION is combination of (possibly \"no\"-"
 "prefixed):\n"
 msgstr ""
 
-#: config/tc-i386.c:17917
+#: config/tc-i386.c:17918
 #, c-format
 msgid "  -mtune=CPU              optimize for CPU, CPU is one of:\n"
 msgstr ""
 
-#: config/tc-i386.c:17920
+#: config/tc-i386.c:17921
 #, c-format
 msgid "  -msse2avx               encode SSE instructions with VEX prefix\n"
 msgstr ""
 
-#: config/tc-i386.c:17922
+#: config/tc-i386.c:17923
 #, c-format
 msgid ""
 "  -muse-unaligned-vector-move\n"
@@ -9489,21 +9489,21 @@ msgid ""
 "move\n"
 msgstr ""
 
-#: config/tc-i386.c:17925
+#: config/tc-i386.c:17926
 #, c-format
 msgid ""
 "  -msse-check=[none|error|warning] (default: none)\n"
 "                          check SSE instructions\n"
 msgstr ""
 
-#: config/tc-i386.c:17928
+#: config/tc-i386.c:17929
 #, c-format
 msgid ""
 "  -moperand-check=[none|error|warning] (default: warning)\n"
 "                          check operand combinations for validity\n"
 msgstr ""
 
-#: config/tc-i386.c:17931
+#: config/tc-i386.c:17932
 #, c-format
 msgid ""
 "  -mavxscalar=[128|256] (default: 128)\n"
@@ -9512,7 +9512,7 @@ msgid ""
 "                           length\n"
 msgstr ""
 
-#: config/tc-i386.c:17935
+#: config/tc-i386.c:17936
 #, c-format
 msgid ""
 "  -mvexwig=[0|1] (default: 0)\n"
@@ -9520,7 +9520,7 @@ msgid ""
 "                           for VEX.W bit ignored instructions\n"
 msgstr ""
 
-#: config/tc-i386.c:17939
+#: config/tc-i386.c:17940
 #, c-format
 msgid ""
 "  -mevexlig=[128|256|512] (default: 128)\n"
@@ -9529,7 +9529,7 @@ msgid ""
 "                           length\n"
 msgstr ""
 
-#: config/tc-i386.c:17943
+#: config/tc-i386.c:17944
 #, c-format
 msgid ""
 "  -mevexwig=[0|1] (default: 0)\n"
@@ -9538,7 +9538,7 @@ msgid ""
 "                           for EVEX.W bit ignored instructions\n"
 msgstr ""
 
-#: config/tc-i386.c:17947
+#: config/tc-i386.c:17948
 #, c-format
 msgid ""
 "  -mevexrcig=[rne|rd|ru|rz] (default: rne)\n"
@@ -9547,77 +9547,77 @@ msgid ""
 "                           for SAE-only ignored instructions\n"
 msgstr ""
 
-#: config/tc-i386.c:17951
+#: config/tc-i386.c:17952
 #, c-format
 msgid "  -mmnemonic=[att|intel] "
 msgstr ""
 
-#: config/tc-i386.c:17954
+#: config/tc-i386.c:17955
 #, c-format
 msgid "(default: att)\n"
 msgstr ""
 
-#: config/tc-i386.c:17956
-#, c-format
-msgid "(default: intel)\n"
-msgstr ""
-
 #: config/tc-i386.c:17957
 #, c-format
+msgid "(default: intel)\n"
+msgstr ""
+
+#: config/tc-i386.c:17958
+#, c-format
 msgid "                          use AT&T/Intel mnemonic (AT&T syntax only)\n"
 msgstr ""
 
-#: config/tc-i386.c:17959
+#: config/tc-i386.c:17960
 #, c-format
 msgid ""
 "  -msyntax=[att|intel] (default: att)\n"
 "                          use AT&T/Intel syntax\n"
 msgstr ""
 
-#: config/tc-i386.c:17962
+#: config/tc-i386.c:17963
 #, c-format
 msgid "  -mindex-reg             support pseudo index registers\n"
 msgstr ""
 
-#: config/tc-i386.c:17964
+#: config/tc-i386.c:17965
 #, c-format
 msgid "  -mnaked-reg             don't require `%%' prefix for registers\n"
 msgstr ""
 
-#: config/tc-i386.c:17966
+#: config/tc-i386.c:17967
 #, c-format
 msgid "  -madd-bnd-prefix        add BND prefix for all valid branches\n"
 msgstr ""
 
-#: config/tc-i386.c:17969
+#: config/tc-i386.c:17970
 #, c-format
 msgid "  -mshared                disable branch optimization for shared code\n"
 msgstr ""
 
-#: config/tc-i386.c:17971
+#: config/tc-i386.c:17972
 #, c-format
 msgid "  -mx86-used-note=[no|yes] "
 msgstr ""
 
-#: config/tc-i386.c:17977
+#: config/tc-i386.c:17978
 #, c-format
 msgid ""
 "                          generate x86 used ISA and feature properties\n"
 msgstr ""
 
-#: config/tc-i386.c:17981
+#: config/tc-i386.c:17982
 #, c-format
 msgid "  -mbig-obj               generate big object files\n"
 msgstr ""
 
-#: config/tc-i386.c:17984
+#: config/tc-i386.c:17985
 #, c-format
 msgid ""
 "  -momit-lock-prefix=[no|yes] (default: no)\n"
 "                          strip all lock prefixes\n"
 msgstr ""
 
-#: config/tc-i386.c:17987
+#: config/tc-i386.c:17988
 #, c-format
 msgid ""
 "  -mfence-as-lock-add=[no|yes] (default: no)\n"
@@ -9625,24 +9625,24 @@ msgid ""
 "                           lock addl $0x0, (%%{re}sp)\n"
 msgstr ""
 
-#: config/tc-i386.c:17991
+#: config/tc-i386.c:17992
 #, c-format
 msgid "  -mrelax-relocations=[no|yes] "
 msgstr ""
 
-#: config/tc-i386.c:17997
+#: config/tc-i386.c:17998
 #, c-format
 msgid "                          generate relax relocations\n"
 msgstr ""
 
-#: config/tc-i386.c:17999
+#: config/tc-i386.c:18000
 #, c-format
 msgid ""
 "  -malign-branch-boundary=NUM (default: 0)\n"
 "                          align branches within NUM byte boundary\n"
 msgstr ""
 
-#: config/tc-i386.c:18002
+#: config/tc-i386.c:18003
 #, c-format
 msgid ""
 "  -malign-branch=TYPE[+TYPE...] (default: jcc+fused+jmp)\n"
@@ -9652,28 +9652,28 @@ msgid ""
 "                          specify types of branches to align\n"
 msgstr ""
 
-#: config/tc-i386.c:18007
+#: config/tc-i386.c:18008
 #, c-format
 msgid ""
 "  -malign-branch-prefix-size=NUM (default: 5)\n"
 "                          align branches with NUM prefixes per instruction\n"
 msgstr ""
 
-#: config/tc-i386.c:18010
+#: config/tc-i386.c:18011
 #, c-format
 msgid ""
 "  -mbranches-within-32B-boundaries\n"
 "                          align branches within 32 byte boundary\n"
 msgstr ""
 
-#: config/tc-i386.c:18013
+#: config/tc-i386.c:18014
 #, c-format
 msgid ""
 "  -mlfence-after-load=[no|yes] (default: no)\n"
 "                          generate lfence after load\n"
 msgstr ""
 
-#: config/tc-i386.c:18016
+#: config/tc-i386.c:18017
 #, c-format
 msgid ""
 "  -mlfence-before-indirect-branch=[none|all|register|memory] (default: "
@@ -9681,74 +9681,74 @@ msgid ""
 "                          generate lfence before indirect near branch\n"
 msgstr ""
 
-#: config/tc-i386.c:18019
+#: config/tc-i386.c:18020
 #, c-format
 msgid ""
 "  -mlfence-before-ret=[none|or|not|shl|yes] (default: none)\n"
 "                          generate lfence before ret\n"
 msgstr ""
 
-#: config/tc-i386.c:18022
+#: config/tc-i386.c:18023
 #, c-format
 msgid "  -mamd64                 accept only AMD64 ISA [default]\n"
 msgstr ""
 
-#: config/tc-i386.c:18024
+#: config/tc-i386.c:18025
 #, c-format
 msgid "  -mintel64               accept only Intel64 ISA\n"
 msgstr ""
 
-#: config/tc-i386.c:18065
+#: config/tc-i386.c:18066
 #, c-format
 msgid "Intel MCU doesn't support `%s' architecture"
 msgstr ""
 
-#: config/tc-i386.c:18073
+#: config/tc-i386.c:18074
 msgid "SCFI is not supported for this ABI"
 msgstr ""
 
-#: config/tc-i386.c:18136
+#: config/tc-i386.c:18137
 msgid "Intel MCU is 32bit only"
 msgstr ""
 
-#: config/tc-i386.c:18254
+#: config/tc-i386.c:18255
 #, c-format
 msgid "invalid %s relocation against register"
 msgstr ""
 
-#: config/tc-i386.c:18387
+#: config/tc-i386.c:18388
 msgid "symbol size computation overflow"
 msgstr ""
 
-#: config/tc-i386.c:18466 config/tc-sparc.c:3855
+#: config/tc-i386.c:18467 config/tc-sparc.c:3856
 #, c-format
 msgid "can not do %d byte pc-relative relocation"
 msgstr ""
 
-#: config/tc-i386.c:18484
+#: config/tc-i386.c:18485
 #, c-format
 msgid "can not do %d byte relocation"
 msgstr ""
 
-#: config/tc-i386.c:18552
+#: config/tc-i386.c:18553
 #, c-format
 msgid "cannot represent relocation type %s in x32 mode"
 msgstr ""
 
-#: config/tc-i386.c:18593 config/tc-s390.c:2828
+#: config/tc-i386.c:18594 config/tc-s390.c:2828
 #, c-format
 msgid "cannot represent relocation type %s"
 msgstr ""
 
-#: config/tc-i386.c:18728
+#: config/tc-i386.c:18729
 msgid "bad .section directive: want a,l,w,x,M,S,G,T in string"
 msgstr ""
 
-#: config/tc-i386.c:18731
+#: config/tc-i386.c:18732
 msgid "bad .section directive: want a,w,x,M,S,G,T in string"
 msgstr ""
 
-#: config/tc-i386.c:18741
+#: config/tc-i386.c:18742
 msgid ".largecomm supported only in 64bit mode, producing .comm"
 msgstr ""
 
@@ -11608,7 +11608,7 @@ msgstr ""
 msgid "wrong register in floating-point reglist"
 msgstr ""
 
-#: config/tc-m68k.c:3820 config/tc-m68k.c:3852 config/tc-sparc.c:3139
+#: config/tc-m68k.c:3820 config/tc-m68k.c:3852 config/tc-sparc.c:3140
 msgid "failed sanity check."
 msgstr ""
 
@@ -17492,7 +17492,7 @@ msgstr ""
 msgid "error setting flags for \".sbss\": %s"
 msgstr ""
 
-#: config/tc-score.c:6124 config/tc-sparc.c:4164
+#: config/tc-score.c:6124 config/tc-sparc.c:4165
 msgid "missing alignment"
 msgstr ""
 
@@ -17860,8 +17860,8 @@ msgstr ""
 msgid "overflow in branch to %s; converted into longer instruction sequence"
 msgstr ""
 
-#: config/tc-sh.c:3204 config/tc-sh.c:3251 config/tc-sparc.c:4628
-#: config/tc-sparc.c:4652
+#: config/tc-sh.c:3204 config/tc-sh.c:3251 config/tc-sparc.c:4629
+#: config/tc-sparc.c:4653
 msgid "misaligned data"
 msgstr ""
 
@@ -18068,8 +18068,8 @@ msgstr ""
 msgid ": expecting crypto immediate"
 msgstr ""
 
-#: config/tc-sparc.c:2239 config/tc-sparc.c:2278 config/tc-sparc.c:2705
-#: config/tc-sparc.c:2741
+#: config/tc-sparc.c:2239 config/tc-sparc.c:2278 config/tc-sparc.c:2706
+#: config/tc-sparc.c:2742
 #, c-format
 msgid "Illegal operands: %%%s requires arguments in ()"
 msgstr ""
@@ -18102,193 +18102,193 @@ msgstr ""
 msgid ": There are only 32 single precision f registers; [0-31]"
 msgstr ""
 
-#: config/tc-sparc.c:2599
+#: config/tc-sparc.c:2631
 msgid ": Instruction requires frs2 and frsd must be the same register"
 msgstr ""
 
-#: config/tc-sparc.c:2750
+#: config/tc-sparc.c:2751
 #, c-format
 msgid "Expression inside %%%s could not be parsed"
 msgstr ""
 
-#: config/tc-sparc.c:2758
+#: config/tc-sparc.c:2759
 #, c-format
 msgid ""
 "Illegal operands: Can't do arithmetics other than + and - involving %%%s()"
 msgstr ""
 
-#: config/tc-sparc.c:2875
+#: config/tc-sparc.c:2876
 #, c-format
 msgid "Illegal operands: Can't add non-constant expression to %%%s()"
 msgstr ""
 
-#: config/tc-sparc.c:2885
+#: config/tc-sparc.c:2886
 #, c-format
 msgid ""
 "Illegal operands: Can't do arithmetics involving %%%s() of a relocatable "
 "symbol"
 msgstr ""
 
-#: config/tc-sparc.c:2903
+#: config/tc-sparc.c:2904
 msgid ": PC-relative operand can't be a constant"
 msgstr ""
 
-#: config/tc-sparc.c:2910
+#: config/tc-sparc.c:2911
 msgid ": TLS operand can't be a constant"
 msgstr ""
 
-#: config/tc-sparc.c:2938
+#: config/tc-sparc.c:2939
 msgid ": Immediate value in cbcond is out of range."
 msgstr ""
 
-#: config/tc-sparc.c:2964
+#: config/tc-sparc.c:2965
 msgid ": invalid ASI name"
 msgstr ""
 
-#: config/tc-sparc.c:2973
+#: config/tc-sparc.c:2974
 msgid ": invalid ASI expression"
 msgstr ""
 
-#: config/tc-sparc.c:2978
+#: config/tc-sparc.c:2979
 msgid ": invalid ASI number"
 msgstr ""
 
-#: config/tc-sparc.c:3083
+#: config/tc-sparc.c:3084
 msgid ": non-immdiate imm2 operand"
 msgstr ""
 
-#: config/tc-sparc.c:3088
+#: config/tc-sparc.c:3089
 msgid ": imm2 immediate operand out of range (0-3)"
 msgstr ""
 
-#: config/tc-sparc.c:3107
+#: config/tc-sparc.c:3108
 msgid "OPF immediate operand out of range (0-0x1ff)"
 msgstr ""
 
-#: config/tc-sparc.c:3112
+#: config/tc-sparc.c:3113
 msgid "non-immediate OPF operand, ignored"
 msgstr ""
 
-#: config/tc-sparc.c:3131
+#: config/tc-sparc.c:3132
 msgid ": invalid cpreg name"
 msgstr ""
 
-#: config/tc-sparc.c:3160
+#: config/tc-sparc.c:3161
 #, c-format
 msgid "Illegal operands%s"
 msgstr ""
 
-#: config/tc-sparc.c:3209
+#: config/tc-sparc.c:3210
 #, c-format
 msgid "architecture bumped from \"%s\" to \"%s\" on \"%s\""
 msgstr ""
 
-#: config/tc-sparc.c:3250
-#, c-format
-msgid "Architecture mismatch on \"%s %s\"."
-msgstr ""
-
 #: config/tc-sparc.c:3251
 #, c-format
+msgid "Architecture mismatch on \"%s %s\"."
+msgstr ""
+
+#: config/tc-sparc.c:3252
+#, c-format
 msgid "(Requires %s; requested architecture is %s.)"
 msgstr ""
 
-#: config/tc-sparc.c:3263
+#: config/tc-sparc.c:3264
 #, c-format
 msgid "Hardware capability \"%s\" not enabled for \"%s\"."
 msgstr ""
 
-#: config/tc-sparc.c:3649 config/tc-sparc.c:3656 config/tc-sparc.c:3663
-#: config/tc-sparc.c:3670 config/tc-sparc.c:3677 config/tc-sparc.c:3686
-#: config/tc-sparc.c:3698 config/tc-sparc.c:3709 config/tc-sparc.c:3731
-#: config/tc-sparc.c:3755 write.c:1202
+#: config/tc-sparc.c:3650 config/tc-sparc.c:3657 config/tc-sparc.c:3664
+#: config/tc-sparc.c:3671 config/tc-sparc.c:3678 config/tc-sparc.c:3687
+#: config/tc-sparc.c:3699 config/tc-sparc.c:3710 config/tc-sparc.c:3732
+#: config/tc-sparc.c:3756 write.c:1202
 msgid "relocation overflow"
 msgstr ""
 
-#: config/tc-sparc.c:3810
+#: config/tc-sparc.c:3811
 #, c-format
 msgid "bad or unhandled relocation type: 0x%02x"
 msgstr ""
 
-#: config/tc-sparc.c:4126
+#: config/tc-sparc.c:4127
 msgid "Expected comma after name"
 msgstr ""
 
-#: config/tc-sparc.c:4135
+#: config/tc-sparc.c:4136
 #, c-format
 msgid "BSS length (%d.) <0! Ignored."
 msgstr ""
 
-#: config/tc-sparc.c:4147
+#: config/tc-sparc.c:4148
 msgid "bad .reserve segment -- expected BSS segment"
 msgstr ""
 
-#: config/tc-sparc.c:4173 config/tc-sparc.c:4300
+#: config/tc-sparc.c:4174 config/tc-sparc.c:4301
 msgid "negative alignment"
 msgstr ""
 
-#: config/tc-sparc.c:4183 config/tc-sparc.c:4321 read.c:1536 read.c:2579
+#: config/tc-sparc.c:4184 config/tc-sparc.c:4322 read.c:1536 read.c:2579
 msgid "alignment not a power of 2"
 msgstr ""
 
-#: config/tc-sparc.c:4229
+#: config/tc-sparc.c:4230
 #, c-format
 msgid "Ignoring attempt to re-define symbol %s"
 msgstr ""
 
-#: config/tc-sparc.c:4252 config/tc-v850.c:280
+#: config/tc-sparc.c:4253 config/tc-v850.c:280
 msgid "Expected comma after symbol-name"
 msgstr ""
 
-#: config/tc-sparc.c:4262
+#: config/tc-sparc.c:4263
 #, c-format
 msgid ".COMMon length (%lu) out of range ignored"
 msgstr ""
 
-#: config/tc-sparc.c:4288
+#: config/tc-sparc.c:4289
 msgid "Expected comma after common length"
 msgstr ""
 
-#: config/tc-sparc.c:4433
+#: config/tc-sparc.c:4434
 msgid "Unknown segment type"
 msgstr ""
 
-#: config/tc-sparc.c:4502 config/tc-sparc.c:4511
+#: config/tc-sparc.c:4503 config/tc-sparc.c:4512
 #, c-format
 msgid "register syntax is .register %%g[2367],{#scratch|symbolname|#ignore}"
 msgstr ""
 
-#: config/tc-sparc.c:4529
+#: config/tc-sparc.c:4530
 msgid "redefinition of global register"
 msgstr ""
 
-#: config/tc-sparc.c:4540
+#: config/tc-sparc.c:4541
 #, c-format
 msgid "Register symbol %s already defined."
 msgstr ""
 
-#: config/tc-sparc.c:4742
+#: config/tc-sparc.c:4743
 #, c-format
 msgid "Illegal operands: %%r_plt in %d-byte data field"
 msgstr ""
 
-#: config/tc-sparc.c:4752
+#: config/tc-sparc.c:4753
 #, c-format
 msgid "Illegal operands: %%r_tls_dtpoff in %d-byte data field"
 msgstr ""
 
-#: config/tc-sparc.c:4789 config/tc-vax.c:3315
+#: config/tc-sparc.c:4790 config/tc-vax.c:3315
 #, c-format
 msgid "Illegal operands: Only %%r_%s%d allowed in %d-byte data fields"
 msgstr ""
 
-#: config/tc-sparc.c:4797 config/tc-sparc.c:4828 config/tc-sparc.c:4837
+#: config/tc-sparc.c:4798 config/tc-sparc.c:4829 config/tc-sparc.c:4838
 #: config/tc-vax.c:3323 config/tc-vax.c:3354 config/tc-vax.c:3363
 #, c-format
 msgid "Illegal operands: %%r_%s%d requires arguments in ()"
 msgstr ""
 
-#: config/tc-sparc.c:4846 config/tc-vax.c:3372
+#: config/tc-sparc.c:4847 config/tc-vax.c:3372
 #, c-format
 msgid "Illegal operands: garbage after %%r_%s%d()"
 msgstr ""
diff --git a/gas/testsuite/gas/i386/reloc32.d b/gas/testsuite/gas/i386/reloc32.d
index 263a742022e..96c5224393f 100644
--- a/gas/testsuite/gas/i386/reloc32.d
+++ b/gas/testsuite/gas/i386/reloc32.d
@@ -43,6 +43,7 @@ Disassembly of section \.text:
 .*[ 	]+R_386_TLS_LE[ 	]+xtrn
 .*[ 	]+R_386_TLS_LE_32[ 	]+xtrn
 .*[ 	]+R_386_TLS_LE_32[ 	]+xtrn
+.*[ 	]+R_386_PLT32[ 	]+ptr
 Disassembly of section \.data:
 #...
 .*[ 	]+R_386_32[ 	]+xtrn
diff --git a/gas/testsuite/gas/i386/reloc32.s b/gas/testsuite/gas/i386/reloc32.s
index e766a3dcc25..5616cd57e3f 100644
--- a/gas/testsuite/gas/i386/reloc32.s
+++ b/gas/testsuite/gas/i386/reloc32.s
@@ -162,3 +162,10 @@ bad	.byte	xtrn@tpoff
 	.long	xtrn@got + 4
 	.long	xtrn@got - 4
 bad	.long	xtrn@plt - .
+
+	.text
+	movl	$ptr@PLT, %eax
+
+	.data
+ptr:
+	.dc.a 0
diff --git a/gas/testsuite/gas/i386/reloc64.d b/gas/testsuite/gas/i386/reloc64.d
index 540a9b77d35..3a38a26556d 100644
--- a/gas/testsuite/gas/i386/reloc64.d
+++ b/gas/testsuite/gas/i386/reloc64.d
@@ -57,6 +57,9 @@ Disassembly of section \.text:
 .*[ 	]+R_X86_64_32[ 	]+xtrn
 .*[ 	]+R_X86_64_32S[ 	]+xtrn
 .*[ 	]+R_X86_64_32[ 	]+xtrn
+.*[ 	]+R_X86_64_GOT64[ 	]+ptr
+.*[ 	]+R_X86_64_GOTOFF64[ 	]+Ldst
+.*[ 	]+R_X86_64_PLT32[ 	]+ptr
 Disassembly of section \.data:
 #...
 .*[ 	]+R_X86_64_64[ 	]+xtrn
@@ -97,3 +100,8 @@ Disassembly of section \.data:
 .*[ 	]+R_X86_64_GOT32[ 	]+xtrn-0x4
 .*[ 	]+R_X86_64_GOT32[ 	]+xtrn\+0x4
 .*[ 	]+R_X86_64_GOTPLT64[ 	]+xtrn
+
+.* <ptr>:
+	...
+.* <Ldst>:
+	...
diff --git a/gas/testsuite/gas/i386/reloc64.s b/gas/testsuite/gas/i386/reloc64.s
index bc6f0fa6cc3..5c0f4136a09 100644
--- a/gas/testsuite/gas/i386/reloc64.s
+++ b/gas/testsuite/gas/i386/reloc64.s
@@ -225,3 +225,14 @@ bad	.byte	xtrn@gotplt
 	vgatherdps %xmm2, xtrn(,%xmm1), %xmm0
 	addr32 vgatherdps %xmm2, xtrn(,%xmm1), %xmm0
 bad	.long	xtrn@plt - .
+
+	.text
+	movabs	$ptr@GOT, %rax
+	movabs	$Ldst@GOTOFF, %rdx
+	movq	$ptr@PLT, %rax
+
+	.data
+ptr:
+	.quad 0
+Ldst:
+	.quad 0
diff --git a/gas/testsuite/gas/i386/x86-64-apx-egpr-inval.l b/gas/testsuite/gas/i386/x86-64-apx-egpr-inval.l
index b018b3f7795..2525565284e 100644
--- a/gas/testsuite/gas/i386/x86-64-apx-egpr-inval.l
+++ b/gas/testsuite/gas/i386/x86-64-apx-egpr-inval.l
@@ -187,10 +187,10 @@
 .*:195: Error: no EVEX encoding for `vrcpps'
 .*:196: Error: no EVEX encoding for `vrcpps'
 .*:197: Error: no EVEX encoding for `vrcpss'
-.*:198: Error: .* 4 bits for `vroundpd'
-.*:199: Error: .* 4 bits for `vroundps'
-.*:200: Error: .* 4 bits for `vroundsd'
-.*:201: Error: .* 4 bits for `vroundss'
+.*:198: Error: no EVEX encoding for `vroundpd'
+.*:199: Error: no EVEX encoding for `vroundps'
+.*:200: Error: no EVEX encoding for `vroundsd'
+.*:201: Error: no EVEX encoding for `vroundss'
 .*:202: Error: no EVEX encoding for `vrsqrtps'
 .*:203: Error: no EVEX encoding for `vrsqrtps'
 .*:204: Error: no EVEX encoding for `vrsqrtss'
diff --git a/gas/testsuite/gas/i386/x86-64-apx-egpr-promote-inval.l b/gas/testsuite/gas/i386/x86-64-apx-egpr-promote-inval.l
index 6f06df91905..9c0b81860e9 100644
--- a/gas/testsuite/gas/i386/x86-64-apx-egpr-promote-inval.l
+++ b/gas/testsuite/gas/i386/x86-64-apx-egpr-promote-inval.l
@@ -20,6 +20,12 @@
 .*:37: Error: .*`kmovb'.*
 .*:38: Error: .*`ldtilecfg'.*
 .*:39: Error: .*`cmpexadd'.*
+.*:42: Error: no EVEX encoding for `vbroadcastf128'
+.*:43: Error: no EVEX encoding for `vbroadcasti128'
+.*:44: Error: no EVEX encoding for `vextractf128'
+.*:45: Error: no EVEX encoding for `vextracti128'
+.*:46: Error: no EVEX encoding for `vinsertf128'
+.*:47: Error: no EVEX encoding for `vinserti128'
 GAS LISTING .*
 #...
 [ 	]*1[ 	]+\# Check illegal 64bit APX EVEX promoted instructions
diff --git a/gas/testsuite/gas/i386/x86-64-apx-egpr-promote-inval.s b/gas/testsuite/gas/i386/x86-64-apx-egpr-promote-inval.s
index 5e4e08fa2fd..d23dbd3f2ca 100644
--- a/gas/testsuite/gas/i386/x86-64-apx-egpr-promote-inval.s
+++ b/gas/testsuite/gas/i386/x86-64-apx-egpr-promote-inval.s
@@ -37,3 +37,11 @@
 	{evex} kmovb %k1, %r8d
 	{evex} ldtilecfg (%r8)
 	{evex} cmpexadd %rax, %rcx, (%r8)
+
+	.arch default
+	vbroadcastf128	(%r16),%ymm3
+	vbroadcasti128	(%r16),%ymm3
+	vextractf128	$1,%ymm3,(%r16)
+	vextracti128	$1,%ymm3,(%r16)
+	vinsertf128	$1,(%r16),%ymm3,%ymm8
+	vinserti128	$1,(%r16),%ymm3,%ymm8
diff --git a/gas/testsuite/gas/i386/x86-64-apx-evex-promoted-bad.d b/gas/testsuite/gas/i386/x86-64-apx-evex-promoted-bad.d
index 7c2efb08d71..667e6f27130 100644
--- a/gas/testsuite/gas/i386/x86-64-apx-evex-promoted-bad.d
+++ b/gas/testsuite/gas/i386/x86-64-apx-evex-promoted-bad.d
@@ -34,9 +34,12 @@ Disassembly of section .text:
 [ 	]*[a-f0-9]+:[ 	]+04 08[ 	]+.*
 [ 	]*[a-f0-9]+:[ 	]+62 f4 3c 08 8f[ 	]+\(bad\)
 [ 	]*[a-f0-9]+:[ 	]+c7[ 	]+.*
-[ 	]*[a-f0-9]+:[ 	]+62 74 7c 18 8f c0[ 	]+pop2   %rax,\(bad\)
+[ 	]*[a-f0-9]+:[ 	]+62 f4 7c 18 8f c0[ 	]+pop2   %rax,\(bad\)
 [ 	]*[a-f0-9]+:[ 	]+62 d4 24 18 8f[ 	]+\(bad\)
 [ 	]*[a-f0-9]+:[ 	]+c3[ 	]+.*
+[ 	]*[a-f0-9]+:[ 	]+62 f4 5c 18 8f[ 	]+\(bad\)
+[ 	]*[a-f0-9]+:[ 	]+c3[ 	]+.*
+[ 	]*[a-f0-9]+:[ 	]+62 f4 7c 18 8f c4[ 	]+pop2   %rsp,\(bad\)
 [ 	]*[a-f0-9]+:[ 	]+62 fc 7d 0c 60 c7[ 	]+movbe  \{bad-nf\},%r23w,%ax
 [ 	]*[a-f0-9]+:[ 	]+62 fc 79 08 60[ 	]+\(bad\)
 [ 	]*[a-f0-9]+:[ 	]+c7[ 	 ]+.*
diff --git a/gas/testsuite/gas/i386/x86-64-apx-evex-promoted-bad.s b/gas/testsuite/gas/i386/x86-64-apx-evex-promoted-bad.s
index 959e4e1fb43..7b2df4b36ea 100644
--- a/gas/testsuite/gas/i386/x86-64-apx-evex-promoted-bad.s
+++ b/gas/testsuite/gas/i386/x86-64-apx-evex-promoted-bad.s
@@ -44,11 +44,17 @@ _start:
 	# pop2 %rdi, %r8 set EVEX.ND=0.
 	.byte 0x62, 0xf4, 0x3c, 0x08, 0x8f, 0xc7
 
-	# pop2 %rax, %r8 set EVEX.vvvv = 1111.
-	.insn EVEX.L0.M4.W0 0x8f,  %rax, {rn-sae},%r8
+	# pop2 %rax, %rax
+	.insn EVEX.L0.NP.M4.W0 0x8f/0, %rax, {sae}, %rax
 
 	# pop2 %r11, %r11
-	.insn EVEX.L0.NP.M4.W0 0x8f/0, {sae}, %xmm11, %xmm11
+	.insn EVEX.L0.NP.M4.W0 0x8f/0, %r11, {sae}, %r11
+
+	# pop2 %rbx, %rsp
+	.insn EVEX.L0.NP.M4.W0 0x8f/0, %rbx, {sae}, %rsp
+
+	# pop2 %rsp, %rax
+	.insn EVEX.L0.NP.M4.W0 0x8f/0, %rsp, {sae}, %rax
 
 	#EVEX_MAP4 movbe %r18w,%ax set EVEX.nf = 1.
 	.insn EVEX.L0.66.M12.W0 0x60, %di, %ax {%k4}
diff --git a/gas/testsuite/gas/i386/x86-64-apx-evex-promoted-intel.d b/gas/testsuite/gas/i386/x86-64-apx-evex-promoted-intel.d
index 76664548d80..54195179172 100644
--- a/gas/testsuite/gas/i386/x86-64-apx-evex-promoted-intel.d
+++ b/gas/testsuite/gas/i386/x86-64-apx-evex-promoted-intel.d
@@ -138,16 +138,6 @@ Disassembly of section \.text:
 [	 ]*[a-f0-9]+:[	 ]*62 da 7f 08 4b b4 87 23 01 00 00[	 ]+tileloadd tmm6,\[r31\+rax\*4\+0x123\]
 [	 ]*[a-f0-9]+:[	 ]*62 da 7d 08 4b b4 87 23 01 00 00[	 ]+tileloaddt1 tmm6,\[r31\+rax\*4\+0x123\]
 [	 ]*[a-f0-9]+:[	 ]*62 da 7e 08 4b b4 87 23 01 00 00[	 ]+tilestored[	 ]+\[r31\+rax\*4\+0x123\],tmm6
-[	 ]*[a-f0-9]+:[	 ]*62 fa 7d 28 1a 18[	 ]+vbroadcastf32x4 ymm3,XMMWORD PTR \[r16\]
-[	 ]*[a-f0-9]+:[	 ]*62 fa 7d 28 5a 18[	 ]+vbroadcasti32x4 ymm3,XMMWORD PTR \[r16\]
-[	 ]*[a-f0-9]+:[	 ]*62 fb 7d 28 19 18 01[	 ]+vextractf32x4 XMMWORD PTR \[r16\],ymm3,(0x)?1
-[	 ]*[a-f0-9]+:[	 ]*62 fb 7d 28 39 18 01[	 ]+vextracti32x4 XMMWORD PTR \[r16\],ymm3,(0x)?1
-[	 ]*[a-f0-9]+:[	 ]*62 7b 65 28 18 00 01[	 ]+vinsertf32x4 ymm8,ymm3,XMMWORD PTR \[r16\],(0x)?1
-[	 ]*[a-f0-9]+:[	 ]*62 7b 65 28 38 00 01[	 ]+vinserti32x4 ymm8,ymm3,XMMWORD PTR \[r16\],(0x)?1
-[	 ]*[a-f0-9]+:[	 ]*62 db fd 08 09 30 01[	 ]+vrndscalepd xmm6,XMMWORD PTR \[r24\],(0x)?1
-[	 ]*[a-f0-9]+:[	 ]*62 db 7d 08 08 30 02[	 ]+vrndscaleps xmm6,XMMWORD PTR \[r24\],(0x)?2
-[	 ]*[a-f0-9]+:[	 ]*62 db cd 08 0b 18 03[	 ]+vrndscalesd xmm3,xmm6,QWORD PTR \[r24\],(0x)?3
-[	 ]*[a-f0-9]+:[	 ]*62 db 4d 08 0a 18 04[	 ]+vrndscaless xmm3,xmm6,DWORD PTR \[r24\],(0x)?4
 [	 ]*[a-f0-9]+:[	 ]*62 4c 7c 08 66 8c 87 23 01 00 00[	 ]+wrssd[	 ]+\[r31\+rax\*4\+0x123\],r25d
 [	 ]*[a-f0-9]+:[	 ]*62 4c fc 08 66 bc 87 23 01 00 00[	 ]+wrssq[	 ]+\[r31\+rax\*4\+0x123\],r31
 [	 ]*[a-f0-9]+:[	 ]*62 4c 7d 08 65 8c 87 23 01 00 00[	 ]+wrussd[	 ]+\[r31\+rax\*4\+0x123\],r25d
diff --git a/gas/testsuite/gas/i386/x86-64-apx-evex-promoted-wig.d b/gas/testsuite/gas/i386/x86-64-apx-evex-promoted-wig.d
index e800205c0e3..bcdc43ec2a8 100644
--- a/gas/testsuite/gas/i386/x86-64-apx-evex-promoted-wig.d
+++ b/gas/testsuite/gas/i386/x86-64-apx-evex-promoted-wig.d
@@ -138,16 +138,6 @@ Disassembly of section \.text:
 [	 ]*[a-f0-9]+:[	 ]*62 da 7f 08 4b b4 87 23 01 00 00[	 ]+tileloadd[	 ]+0x123\(%r31,%rax,4\),%tmm6
 [	 ]*[a-f0-9]+:[	 ]*62 da 7d 08 4b b4 87 23 01 00 00[	 ]+tileloaddt1[	 ]+0x123\(%r31,%rax,4\),%tmm6
 [	 ]*[a-f0-9]+:[	 ]*62 da 7e 08 4b b4 87 23 01 00 00[	 ]+tilestored[	 ]+%tmm6,0x123\(%r31,%rax,4\)
-[	 ]*[a-f0-9]+:[	 ]*62 fa 7d 28 1a 18[	 ]+vbroadcastf32x4 \(%r16\),%ymm3
-[	 ]*[a-f0-9]+:[	 ]*62 fa 7d 28 5a 18[	 ]+vbroadcasti32x4 \(%r16\),%ymm3
-[	 ]*[a-f0-9]+:[	 ]*62 fb 7d 28 19 18 01[	 ]+vextractf32x4 \$(0x)?1,%ymm3,\(%r16\)
-[	 ]*[a-f0-9]+:[	 ]*62 fb 7d 28 39 18 01[	 ]+vextracti32x4 \$(0x)?1,%ymm3,\(%r16\)
-[	 ]*[a-f0-9]+:[	 ]*62 7b 65 28 18 00 01[	 ]+vinsertf32x4 \$(0x)?1,\(%r16\),%ymm3,%ymm8
-[	 ]*[a-f0-9]+:[	 ]*62 7b 65 28 38 00 01[	 ]+vinserti32x4 \$(0x)?1,\(%r16\),%ymm3,%ymm8
-[	 ]*[a-f0-9]+:[	 ]*62 db fd 08 09 30 01[	 ]+vrndscalepd \$0x1,\(%r24\),%xmm6
-[	 ]*[a-f0-9]+:[	 ]*62 db 7d 08 08 30 02[	 ]+vrndscaleps \$0x2,\(%r24\),%xmm6
-[	 ]*[a-f0-9]+:[	 ]*62 db cd 08 0b 18 03[	 ]+vrndscalesd \$0x3,\(%r24\),%xmm6,%xmm3
-[	 ]*[a-f0-9]+:[	 ]*62 db 4d 08 0a 18 04[	 ]+vrndscaless \$0x4,\(%r24\),%xmm6,%xmm3
 [	 ]*[a-f0-9]+:[	 ]*62 4c 7c 08 66 8c 87 23 01 00 00[	 ]+wrssd[	 ]+%r25d,0x123\(%r31,%rax,4\)
 [	 ]*[a-f0-9]+:[	 ]*62 4c fc 08 66 bc 87 23 01 00 00[	 ]+wrssq[	 ]+%r31,0x123\(%r31,%rax,4\)
 [	 ]*[a-f0-9]+:[	 ]*62 4c 7d 08 65 8c 87 23 01 00 00[	 ]+wrussd[	 ]+%r25d,0x123\(%r31,%rax,4\)
diff --git a/gas/testsuite/gas/i386/x86-64-apx-evex-promoted.d b/gas/testsuite/gas/i386/x86-64-apx-evex-promoted.d
index a8f9231b5b0..c72f7012c0e 100644
--- a/gas/testsuite/gas/i386/x86-64-apx-evex-promoted.d
+++ b/gas/testsuite/gas/i386/x86-64-apx-evex-promoted.d
@@ -138,16 +138,6 @@ Disassembly of section \.text:
 [	 ]*[a-f0-9]+:[	 ]*62 da 7f 08 4b b4 87 23 01 00 00[	 ]+tileloadd[	 ]+0x123\(%r31,%rax,4\),%tmm6
 [	 ]*[a-f0-9]+:[	 ]*62 da 7d 08 4b b4 87 23 01 00 00[	 ]+tileloaddt1[	 ]+0x123\(%r31,%rax,4\),%tmm6
 [	 ]*[a-f0-9]+:[	 ]*62 da 7e 08 4b b4 87 23 01 00 00[	 ]+tilestored[	 ]+%tmm6,0x123\(%r31,%rax,4\)
-[	 ]*[a-f0-9]+:[	 ]*62 fa 7d 28 1a 18[	 ]+vbroadcastf32x4 \(%r16\),%ymm3
-[	 ]*[a-f0-9]+:[	 ]*62 fa 7d 28 5a 18[	 ]+vbroadcasti32x4 \(%r16\),%ymm3
-[	 ]*[a-f0-9]+:[	 ]*62 fb 7d 28 19 18 01[	 ]+vextractf32x4 \$(0x)?1,%ymm3,\(%r16\)
-[	 ]*[a-f0-9]+:[	 ]*62 fb 7d 28 39 18 01[	 ]+vextracti32x4 \$(0x)?1,%ymm3,\(%r16\)
-[	 ]*[a-f0-9]+:[	 ]*62 7b 65 28 18 00 01[	 ]+vinsertf32x4 \$(0x)?1,\(%r16\),%ymm3,%ymm8
-[	 ]*[a-f0-9]+:[	 ]*62 7b 65 28 38 00 01[	 ]+vinserti32x4 \$(0x)?1,\(%r16\),%ymm3,%ymm8
-[	 ]*[a-f0-9]+:[	 ]*62 db fd 08 09 30 01[	 ]+vrndscalepd \$0x1,\(%r24\),%xmm6
-[	 ]*[a-f0-9]+:[	 ]*62 db 7d 08 08 30 02[	 ]+vrndscaleps \$0x2,\(%r24\),%xmm6
-[	 ]*[a-f0-9]+:[	 ]*62 db cd 08 0b 18 03[	 ]+vrndscalesd \$0x3,\(%r24\),%xmm6,%xmm3
-[	 ]*[a-f0-9]+:[	 ]*62 db 4d 08 0a 18 04[	 ]+vrndscaless \$0x4,\(%r24\),%xmm6,%xmm3
 [	 ]*[a-f0-9]+:[	 ]*62 4c 7c 08 66 8c 87 23 01 00 00[	 ]+wrssd[	 ]+%r25d,0x123\(%r31,%rax,4\)
 [	 ]*[a-f0-9]+:[	 ]*62 4c fc 08 66 bc 87 23 01 00 00[	 ]+wrssq[	 ]+%r31,0x123\(%r31,%rax,4\)
 [	 ]*[a-f0-9]+:[	 ]*62 4c 7d 08 65 8c 87 23 01 00 00[	 ]+wrussd[	 ]+%r25d,0x123\(%r31,%rax,4\)
diff --git a/gas/testsuite/gas/i386/x86-64-apx-evex-promoted.s b/gas/testsuite/gas/i386/x86-64-apx-evex-promoted.s
index 1ba7d72cf9e..b66ee19df69 100644
--- a/gas/testsuite/gas/i386/x86-64-apx-evex-promoted.s
+++ b/gas/testsuite/gas/i386/x86-64-apx-evex-promoted.s
@@ -132,16 +132,6 @@ _start:
 	tileloadd	0x123(%r31,%rax,4),%tmm6
 	tileloaddt1	0x123(%r31,%rax,4),%tmm6
 	tilestored	%tmm6,0x123(%r31,%rax,4)
-	vbroadcastf128	(%r16),%ymm3
-	vbroadcasti128	(%r16),%ymm3
-	vextractf128	$1,%ymm3,(%r16)
-	vextracti128	$1,%ymm3,(%r16)
-	vinsertf128	$1,(%r16),%ymm3,%ymm8
-	vinserti128	$1,(%r16),%ymm3,%ymm8
-	vroundpd $1,(%r24),%xmm6
-	vroundps $2,(%r24),%xmm6
-	vroundsd $3,(%r24),%xmm6,%xmm3
-	vroundss $4,(%r24),%xmm6,%xmm3
 	wrssd	%r25d,0x123(%r31,%rax,4)
 	wrssq	%r31,0x123(%r31,%rax,4)
 	wrussd	%r25d,0x123(%r31,%rax,4)
diff --git a/gas/testsuite/gas/macros/irpc-quote.s b/gas/testsuite/gas/macros/irpc-quote.s
index 0499f6957b4..032619665b9 100644
--- a/gas/testsuite/gas/macros/irpc-quote.s
+++ b/gas/testsuite/gas/macros/irpc-quote.s
@@ -1,6 +1,6 @@
-	.irpc c, " ab" cd " ef"
+	.irpc c, " ab" cd " ef" ""
 	.print ">\c<"
 	.endr
-	.irpc c, "12 " 34 "56 "
+	.irpc c, "" "12 " 34 "56 "
 	.print ">\c<"
 	.endr
diff --git a/gas/testsuite/gas/riscv/imply.d b/gas/testsuite/gas/riscv/imply.d
index 0c726d3ab79..88b8c46bb89 100644
--- a/gas/testsuite/gas/riscv/imply.d
+++ b/gas/testsuite/gas/riscv/imply.d
@@ -44,6 +44,7 @@ SYMBOL TABLE:
 [0-9a-f]+ l       .text	0+000 \$xrv32i2p1_f2p2_d2p2_zicsr2p0_zca1p0_zcd1p0
 [0-9a-f]+ l       .text	0+000 \$xrv32i2p1_f2p2_zicsr2p0_zca1p0_zcf1p0
 [0-9a-f]+ l       .text	0+000 \$xrv32i2p1_zca1p0_zcmp1p0
+[0-9a-f]+ l       .text	0+000 \$xrv32i2p1_zca1p0_zcmop1p0
 [0-9a-f]+ l       .text	0+000 \$xrv32i2p1_h1p0_zicsr2p0_shcounterenw1p0
 [0-9a-f]+ l       .text	0+000 \$xrv32i2p1_h1p0_zicsr2p0_shgatpa1p0
 [0-9a-f]+ l       .text	0+000 \$xrv32i2p1_h1p0_zicsr2p0_shtvala1p0
diff --git a/gas/testsuite/gas/riscv/imply.s b/gas/testsuite/gas/riscv/imply.s
index 8eca66f7a89..dabb08d8c8b 100644
--- a/gas/testsuite/gas/riscv/imply.s
+++ b/gas/testsuite/gas/riscv/imply.s
@@ -47,6 +47,7 @@ imply zcb
 imply zcd
 imply zcf
 imply zcmp
+imply zcmop
 
 imply shcounterenw
 imply shgatpa
diff --git a/gas/testsuite/gas/riscv/march-help.l b/gas/testsuite/gas/riscv/march-help.l
index 97521c7c02b..054c2e9667d 100644
--- a/gas/testsuite/gas/riscv/march-help.l
+++ b/gas/testsuite/gas/riscv/march-help.l
@@ -25,6 +25,7 @@ All available -march extensions for RISC-V:
 	zihintntl                               1.0
 	zihintpause                             2.0
 	zihpm                                   2.0
+	zimop                                   1.0
 	zmmul                                   1.0
 	za64rs                                  1.0
 	za128rs                                 1.0
@@ -101,6 +102,7 @@ All available -march extensions for RISC-V:
 	zcb                                     1.0
 	zcf                                     1.0
 	zcd                                     1.0
+	zcmop                                   1.0
 	zcmp                                    1.0
 	shcounterenw                            1.0
 	shgatpa                                 1.0
diff --git a/gas/testsuite/gas/riscv/zcmop.d b/gas/testsuite/gas/riscv/zcmop.d
new file mode 100644
index 00000000000..5f608c676c3
--- /dev/null
+++ b/gas/testsuite/gas/riscv/zcmop.d
@@ -0,0 +1,16 @@
+#as: -march=rv64i_zcmop
+#objdump: -d
+
+.*:[ 	]+file format .*
+
+Disassembly of section .text:
+
+0+000 <target>:
+[ 	]+[0-9a-f]+:[ 	]+6081[ 	]+c.mop.1
+[ 	]+[0-9a-f]+:[ 	]+6181[ 	]+c.mop.3
+[ 	]+[0-9a-f]+:[ 	]+6281[ 	]+c.mop.5
+[ 	]+[0-9a-f]+:[ 	]+6381[ 	]+c.mop.7
+[ 	]+[0-9a-f]+:[ 	]+6481[ 	]+c.mop.9
+[ 	]+[0-9a-f]+:[ 	]+6581[ 	]+c.mop.11
+[ 	]+[0-9a-f]+:[ 	]+6681[ 	]+c.mop.13
+[ 	]+[0-9a-f]+:[ 	]+6781[ 	]+c.mop.15
diff --git a/gas/testsuite/gas/riscv/zcmop.s b/gas/testsuite/gas/riscv/zcmop.s
new file mode 100644
index 00000000000..4b02e694f46
--- /dev/null
+++ b/gas/testsuite/gas/riscv/zcmop.s
@@ -0,0 +1,10 @@
+target:
+	# c.mop.n
+	c.mop.1
+	c.mop.3
+	c.mop.5
+	c.mop.7
+	c.mop.9
+	c.mop.11
+	c.mop.13
+	c.mop.15
diff --git a/gas/testsuite/gas/riscv/zimop.d b/gas/testsuite/gas/riscv/zimop.d
new file mode 100644
index 00000000000..becb72ca650
--- /dev/null
+++ b/gas/testsuite/gas/riscv/zimop.d
@@ -0,0 +1,48 @@
+#as: -march=rv64i_zimop
+#objdump: -d
+
+.*:[ 	]+file format .*
+
+Disassembly of section .text:
+
+0+000 <target>:
+[ 	]+[0-9a-f]+:[ 	]+81c5c573[ 	]+mop.r.0[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+81d5c573[ 	]+mop.r.1[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+81e5c573[ 	]+mop.r.2[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+81f5c573[ 	]+mop.r.3[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+85c5c573[ 	]+mop.r.4[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+85d5c573[ 	]+mop.r.5[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+85e5c573[ 	]+mop.r.6[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+85f5c573[ 	]+mop.r.7[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+89c5c573[ 	]+mop.r.8[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+89d5c573[ 	]+mop.r.9[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+89e5c573[ 	]+mop.r.10[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+89f5c573[ 	]+mop.r.11[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+8dc5c573[ 	]+mop.r.12[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+8dd5c573[ 	]+mop.r.13[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+8de5c573[ 	]+mop.r.14[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+8df5c573[ 	]+mop.r.15[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+c1c5c573[ 	]+mop.r.16[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+c1d5c573[ 	]+mop.r.17[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+c1e5c573[ 	]+mop.r.18[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+c1f5c573[ 	]+mop.r.19[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+c5c5c573[ 	]+mop.r.20[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+c5d5c573[ 	]+mop.r.21[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+c5e5c573[ 	]+mop.r.22[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+c5f5c573[ 	]+mop.r.23[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+c9c5c573[ 	]+mop.r.24[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+c9d5c573[ 	]+mop.r.25[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+c9e5c573[ 	]+mop.r.26[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+c9f5c573[ 	]+mop.r.27[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+cdc5c573[ 	]+mop.r.28[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+cdd5c573[ 	]+mop.r.29[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+cde5c573[ 	]+mop.r.30[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+cdf5c573[ 	]+mop.r.31[ 	]+a0,a1
+[ 	]+[0-9a-f]+:[ 	]+82c5c573[ 	]+mop.rr.0[ 	]+a0,a1,a2
+[ 	]+[0-9a-f]+:[ 	]+86c5c573[ 	]+mop.rr.1[ 	]+a0,a1,a2
+[ 	]+[0-9a-f]+:[ 	]+8ac5c573[ 	]+mop.rr.2[ 	]+a0,a1,a2
+[ 	]+[0-9a-f]+:[ 	]+8ec5c573[ 	]+mop.rr.3[ 	]+a0,a1,a2
+[ 	]+[0-9a-f]+:[ 	]+c2c5c573[ 	]+mop.rr.4[ 	]+a0,a1,a2
+[ 	]+[0-9a-f]+:[ 	]+c6c5c573[ 	]+mop.rr.5[ 	]+a0,a1,a2
+[ 	]+[0-9a-f]+:[ 	]+cac5c573[ 	]+mop.rr.6[ 	]+a0,a1,a2
+[ 	]+[0-9a-f]+:[ 	]+cec5c573[ 	]+mop.rr.7[ 	]+a0,a1,a2
diff --git a/gas/testsuite/gas/riscv/zimop.s b/gas/testsuite/gas/riscv/zimop.s
new file mode 100644
index 00000000000..d244c1fb0fb
--- /dev/null
+++ b/gas/testsuite/gas/riscv/zimop.s
@@ -0,0 +1,43 @@
+target:
+	# mop.r.n
+	mop.r.0 a0, a1
+	mop.r.1 a0, a1
+	mop.r.2 a0, a1
+	mop.r.3 a0, a1
+	mop.r.4 a0, a1
+	mop.r.5 a0, a1
+	mop.r.6 a0, a1
+	mop.r.7 a0, a1
+	mop.r.8 a0, a1
+	mop.r.9 a0, a1
+	mop.r.10 a0, a1
+	mop.r.11 a0, a1
+	mop.r.12 a0, a1
+	mop.r.13 a0, a1
+	mop.r.14 a0, a1
+	mop.r.15 a0, a1
+	mop.r.16 a0, a1
+	mop.r.17 a0, a1
+	mop.r.18 a0, a1
+	mop.r.19 a0, a1
+	mop.r.20 a0, a1
+	mop.r.21 a0, a1
+	mop.r.22 a0, a1
+	mop.r.23 a0, a1
+	mop.r.24 a0, a1
+	mop.r.25 a0, a1
+	mop.r.26 a0, a1
+	mop.r.27 a0, a1
+	mop.r.28 a0, a1
+	mop.r.29 a0, a1
+	mop.r.30 a0, a1
+	mop.r.31 a0, a1
+	# mop.rr.n
+	mop.rr.0 a0, a1, a2
+	mop.rr.1 a0, a1, a2
+	mop.rr.2 a0, a1, a2
+	mop.rr.3 a0, a1, a2
+	mop.rr.4 a0, a1, a2
+	mop.rr.5 a0, a1, a2
+	mop.rr.6 a0, a1, a2
+	mop.rr.7 a0, a1, a2
diff --git a/gas/testsuite/gas/s390/s390.exp b/gas/testsuite/gas/s390/s390.exp
index a4e8dbc44a5..1d5d97f4863 100644
--- a/gas/testsuite/gas/s390/s390.exp
+++ b/gas/testsuite/gas/s390/s390.exp
@@ -43,6 +43,7 @@ if [expr [istarget "s390-*-*"] ||  [istarget "s390x-*-*"]]  then {
     run_dump_test "zarch-arch12" "{as -m64} {as -march=arch12}"
     run_dump_test "zarch-arch13" "{as -m64} {as -march=arch13}"
     run_dump_test "zarch-arch14" "{as -m64} {as -march=arch14}"
+    run_dump_test "zarch-arch15" "{as -m64} {as -march=arch15}"
     run_dump_test "zarch-reloc" "{as -m64}"
     run_dump_test "zarch-operands" "{as -m64} {as -march=z9-109}"
     run_dump_test "zarch-machine" "{as -m64} {as -march=z900}"
diff --git a/gas/testsuite/gas/s390/zarch-arch15.d b/gas/testsuite/gas/s390/zarch-arch15.d
new file mode 100644
index 00000000000..9cd99b7a698
--- /dev/null
+++ b/gas/testsuite/gas/s390/zarch-arch15.d
@@ -0,0 +1,106 @@
+#name: s390x opcode
+#objdump: -dr
+
+.*: +file format .*
+
+Disassembly of section .text:
+
+.* <foo>:
+.*:	e7 f1 4d 00 87 89 [	 ]*vblend	%v15,%v17,%v20,%v24,13
+.*:	e7 f1 40 00 87 89 [	 ]*vblendb	%v15,%v17,%v20,%v24
+.*:	e7 f1 41 00 87 89 [	 ]*vblendh	%v15,%v17,%v20,%v24
+.*:	e7 f1 42 00 87 89 [	 ]*vblendf	%v15,%v17,%v20,%v24
+.*:	e7 f1 43 00 87 89 [	 ]*vblendg	%v15,%v17,%v20,%v24
+.*:	e7 f1 44 00 87 89 [	 ]*vblendq	%v15,%v17,%v20,%v24
+.*:	e7 f1 40 fd 87 88 [	 ]*veval	%v15,%v17,%v20,%v24,253
+.*:	e7 f1 00 00 d4 54 [	 ]*vgem	%v15,%v17,13
+.*:	e7 f1 00 00 04 54 [	 ]*vgemb	%v15,%v17
+.*:	e7 f1 00 00 14 54 [	 ]*vgemh	%v15,%v17
+.*:	e7 f1 00 00 24 54 [	 ]*vgemf	%v15,%v17
+.*:	e7 f1 00 00 34 54 [	 ]*vgemg	%v15,%v17
+.*:	e7 f1 00 00 44 54 [	 ]*vgemq	%v15,%v17
+.*:	e7 f1 00 00 34 d7 [	 ]*vuphg	%v15,%v17
+.*:	e7 f1 00 00 34 d5 [	 ]*vuplhg	%v15,%v17
+.*:	e7 f1 00 00 34 d6 [	 ]*vuplg	%v15,%v17
+.*:	e7 f1 00 00 34 d4 [	 ]*vupllg	%v15,%v17
+.*:	e7 f1 40 00 46 f2 [	 ]*vavgq	%v15,%v17,%v20
+.*:	e7 f1 40 00 46 f0 [	 ]*vavglq	%v15,%v17,%v20
+.*:	e7 f1 00 00 44 db [	 ]*vecq	%v15,%v17
+.*:	e7 f1 00 00 44 d9 [	 ]*veclq	%v15,%v17
+.*:	e7 f1 40 00 46 f8 [	 ]*vceqq	%v15,%v17,%v20
+.*:	e7 f1 40 10 46 f8 [	 ]*vceqqs	%v15,%v17,%v20
+.*:	e7 f1 40 00 46 fb [	 ]*vchq	%v15,%v17,%v20
+.*:	e7 f1 40 10 46 fb [	 ]*vchqs	%v15,%v17,%v20
+.*:	e7 f1 40 00 46 f9 [	 ]*vchlq	%v15,%v17,%v20
+.*:	e7 f1 40 10 46 f9 [	 ]*vchlqs	%v15,%v17,%v20
+.*:	e7 f1 00 00 44 53 [	 ]*vclzq	%v15,%v17
+.*:	e7 f1 00 00 44 52 [	 ]*vctzq	%v15,%v17
+.*:	e7 f1 00 00 44 de [	 ]*vlcq	%v15,%v17
+.*:	e7 f1 00 00 44 df [	 ]*vlpq	%v15,%v17
+.*:	e7 f1 40 00 46 ff [	 ]*vmxq	%v15,%v17,%v20
+.*:	e7 f1 40 00 46 fd [	 ]*vmxlq	%v15,%v17,%v20
+.*:	e7 f1 40 00 46 fe [	 ]*vmnq	%v15,%v17,%v20
+.*:	e7 f1 40 00 46 fc [	 ]*vmnlq	%v15,%v17,%v20
+.*:	e7 f1 43 00 87 aa [	 ]*vmalg	%v15,%v17,%v20,%v24
+.*:	e7 f1 44 00 87 aa [	 ]*vmalq	%v15,%v17,%v20,%v24
+.*:	e7 f1 43 00 87 ab [	 ]*vmahg	%v15,%v17,%v20,%v24
+.*:	e7 f1 44 00 87 ab [	 ]*vmahq	%v15,%v17,%v20,%v24
+.*:	e7 f1 43 00 87 a9 [	 ]*vmalhg	%v15,%v17,%v20,%v24
+.*:	e7 f1 44 00 87 a9 [	 ]*vmalhq	%v15,%v17,%v20,%v24
+.*:	e7 f1 43 00 87 ae [	 ]*vmaeg	%v15,%v17,%v20,%v24
+.*:	e7 f1 43 00 87 ac [	 ]*vmaleg	%v15,%v17,%v20,%v24
+.*:	e7 f1 43 00 87 af [	 ]*vmaog	%v15,%v17,%v20,%v24
+.*:	e7 f1 43 00 87 ad [	 ]*vmalog	%v15,%v17,%v20,%v24
+.*:	e7 f1 40 00 36 a3 [	 ]*vmhg	%v15,%v17,%v20
+.*:	e7 f1 40 00 46 a3 [	 ]*vmhq	%v15,%v17,%v20
+.*:	e7 f1 40 00 36 a1 [	 ]*vmlhg	%v15,%v17,%v20
+.*:	e7 f1 40 00 46 a1 [	 ]*vmlhq	%v15,%v17,%v20
+.*:	e7 f1 40 00 36 a2 [	 ]*vmlg	%v15,%v17,%v20
+.*:	e7 f1 40 00 46 a2 [	 ]*vmlq	%v15,%v17,%v20
+.*:	e7 f1 40 00 36 a6 [	 ]*vmeg	%v15,%v17,%v20
+.*:	e7 f1 40 00 36 a4 [	 ]*vmleg	%v15,%v17,%v20
+.*:	e7 f1 40 00 36 a7 [	 ]*vmog	%v15,%v17,%v20
+.*:	e7 f1 40 00 36 a5 [	 ]*vmlog	%v15,%v17,%v20
+.*:	e7 f1 40 0c d6 b2 [	 ]*vd	%v15,%v17,%v20,13,12
+.*:	e7 f1 40 0d 26 b2 [	 ]*vdf	%v15,%v17,%v20,13
+.*:	e7 f1 40 0d 36 b2 [	 ]*vdg	%v15,%v17,%v20,13
+.*:	e7 f1 40 0d 46 b2 [	 ]*vdq	%v15,%v17,%v20,13
+.*:	e7 f1 40 0c d6 b0 [	 ]*vdl	%v15,%v17,%v20,13,12
+.*:	e7 f1 40 0d 26 b0 [	 ]*vdlf	%v15,%v17,%v20,13
+.*:	e7 f1 40 0d 36 b0 [	 ]*vdlg	%v15,%v17,%v20,13
+.*:	e7 f1 40 0d 46 b0 [	 ]*vdlq	%v15,%v17,%v20,13
+.*:	e7 f1 40 0c d6 b3 [	 ]*vr	%v15,%v17,%v20,13,12
+.*:	e7 f1 40 0d 26 b3 [	 ]*vrf	%v15,%v17,%v20,13
+.*:	e7 f1 40 0d 36 b3 [	 ]*vrg	%v15,%v17,%v20,13
+.*:	e7 f1 40 0d 46 b3 [	 ]*vrq	%v15,%v17,%v20,13
+.*:	e7 f1 40 0c d6 b1 [	 ]*vrl	%v15,%v17,%v20,13,12
+.*:	e7 f1 40 0d 26 b1 [	 ]*vrlf	%v15,%v17,%v20,13
+.*:	e7 f1 40 0d 36 b1 [	 ]*vrlg	%v15,%v17,%v20,13
+.*:	e7 f1 40 0d 46 b1 [	 ]*vrlq	%v15,%v17,%v20,13
+.*:	b9 68 00 69 [	 ]*clzg	%r6,%r9
+.*:	b9 69 00 69 [	 ]*ctzg	%r6,%r9
+.*:	e3 69 b8 f0 fd 60 [	 ]*lxab	%r6,-10000\(%r9,%r11\)
+.*:	e3 69 b8 f0 fd 62 [	 ]*lxah	%r6,-10000\(%r9,%r11\)
+.*:	e3 69 b8 f0 fd 64 [	 ]*lxaf	%r6,-10000\(%r9,%r11\)
+.*:	e3 69 b8 f0 fd 66 [	 ]*lxag	%r6,-10000\(%r9,%r11\)
+.*:	e3 69 b8 f0 fd 68 [	 ]*lxaq	%r6,-10000\(%r9,%r11\)
+.*:	e3 69 b8 f0 fd 61 [	 ]*llxab	%r6,-10000\(%r9,%r11\)
+.*:	e3 69 b8 f0 fd 63 [	 ]*llxah	%r6,-10000\(%r9,%r11\)
+.*:	e3 69 b8 f0 fd 65 [	 ]*llxaf	%r6,-10000\(%r9,%r11\)
+.*:	e3 69 b8 f0 fd 67 [	 ]*llxag	%r6,-10000\(%r9,%r11\)
+.*:	e3 69 b8 f0 fd 69 [	 ]*llxaq	%r6,-10000\(%r9,%r11\)
+.*:	b9 6c b0 69 [	 ]*bextg	%r6,%r9,%r11
+.*:	b9 6d b0 69 [	 ]*bdepg	%r6,%r9,%r11
+.*:	b9 3e 00 69 [	 ]*kimd	%r6,%r9
+.*:	b9 3e d0 69 [	 ]*kimd	%r6,%r9,13
+.*:	b9 3f 00 69 [	 ]*klmd	%r6,%r9
+.*:	b9 3f d0 69 [	 ]*klmd	%r6,%r9,13
+.*:	e6 f1 00 d0 04 4e [	 ]*vcvbq	%v15,%v17,13
+.*:	e6 f1 00 cf d4 4a [	 ]*vcvdq	%v15,%v17,253,12
+.*:	e6 0f 00 00 00 5f [	 ]*vtp	%v15
+.*:	e6 0f 0f ff d0 5f [	 ]*vtp	%v15,65533
+.*:	e6 0f 1f ff d2 7f [	 ]*vtz	%v15,%v17,65533
+.*:	c8 36 10 0a 20 14 [	 ]*cal	%r3,10\(%r1\),20\(%r2\)
+.*:	c8 37 10 0a 20 14 [	 ]*calg	%r3,10\(%r1\),20\(%r2\)
+.*:	c8 3f 10 0a 20 14 [	 ]*calgf	%r3,10\(%r1\),20\(%r2\)
+.*:	eb 13 28 f0 fd 16 [	 ]*pfcr	%r1,%r3,-10000\(%r2\)
diff --git a/gas/testsuite/gas/s390/zarch-arch15.s b/gas/testsuite/gas/s390/zarch-arch15.s
new file mode 100644
index 00000000000..d9b89652fcb
--- /dev/null
+++ b/gas/testsuite/gas/s390/zarch-arch15.s
@@ -0,0 +1,100 @@
+.text
+foo:
+	vblend	%v15,%v17,%v20,%v24,13
+	vblendb	%v15,%v17,%v20,%v24
+	vblendh	%v15,%v17,%v20,%v24
+	vblendf	%v15,%v17,%v20,%v24
+	vblendg	%v15,%v17,%v20,%v24
+	vblendq	%v15,%v17,%v20,%v24
+	veval	%v15,%v17,%v20,%v24,253
+	vgem	%v15,%v17,13
+	vgemb	%v15,%v17
+	vgemh	%v15,%v17
+	vgemf	%v15,%v17
+	vgemg	%v15,%v17
+	vgemq	%v15,%v17
+	vuphg	%v15,%v17
+	vuplhg	%v15,%v17
+	vuplg	%v15,%v17
+	vupllg	%v15,%v17
+	vavgq	%v15,%v17,%v20
+	vavglq	%v15,%v17,%v20
+	vecq	%v15,%v17
+	veclq	%v15,%v17
+	vceqq	%v15,%v17,%v20
+	vceqqs	%v15,%v17,%v20
+	vchq	%v15,%v17,%v20
+	vchqs	%v15,%v17,%v20
+	vchlq	%v15,%v17,%v20
+	vchlqs	%v15,%v17,%v20
+	vclzq	%v15,%v17
+	vctzq	%v15,%v17
+	vlcq	%v15,%v17
+	vlpq	%v15,%v17
+	vmxq	%v15,%v17,%v20
+	vmxlq	%v15,%v17,%v20
+	vmnq	%v15,%v17,%v20
+	vmnlq	%v15,%v17,%v20
+	vmalg	%v15,%v17,%v20,%v24
+	vmalq	%v15,%v17,%v20,%v24
+	vmahg	%v15,%v17,%v20,%v24
+	vmahq	%v15,%v17,%v20,%v24
+	vmalhg	%v15,%v17,%v20,%v24
+	vmalhq	%v15,%v17,%v20,%v24
+	vmaeg	%v15,%v17,%v20,%v24
+	vmaleg	%v15,%v17,%v20,%v24
+	vmaog	%v15,%v17,%v20,%v24
+	vmalog	%v15,%v17,%v20,%v24
+	vmhg	%v15,%v17,%v20
+	vmhq	%v15,%v17,%v20
+	vmlhg	%v15,%v17,%v20
+	vmlhq	%v15,%v17,%v20
+	vmlg	%v15,%v17,%v20
+	vmlq	%v15,%v17,%v20
+	vmeg	%v15,%v17,%v20
+	vmleg	%v15,%v17,%v20
+	vmog	%v15,%v17,%v20
+	vmlog	%v15,%v17,%v20
+	vd	%v15,%v17,%v20,13,12
+	vdf	%v15,%v17,%v20,13
+	vdg	%v15,%v17,%v20,13
+	vdq	%v15,%v17,%v20,13
+	vdl	%v15,%v17,%v20,13,12
+	vdlf	%v15,%v17,%v20,13
+	vdlg	%v15,%v17,%v20,13
+	vdlq	%v15,%v17,%v20,13
+	vr	%v15,%v17,%v20,13,12
+	vrf	%v15,%v17,%v20,13
+	vrg	%v15,%v17,%v20,13
+	vrq	%v15,%v17,%v20,13
+	vrl	%v15,%v17,%v20,13,12
+	vrlf	%v15,%v17,%v20,13
+	vrlg	%v15,%v17,%v20,13
+	vrlq	%v15,%v17,%v20,13
+	clzg	%r6,%r9
+	ctzg	%r6,%r9
+	lxab	%r6,-10000(%r9,%r11)
+	lxah	%r6,-10000(%r9,%r11)
+	lxaf	%r6,-10000(%r9,%r11)
+	lxag	%r6,-10000(%r9,%r11)
+	lxaq	%r6,-10000(%r9,%r11)
+	llxab	%r6,-10000(%r9,%r11)
+	llxah	%r6,-10000(%r9,%r11)
+	llxaf	%r6,-10000(%r9,%r11)
+	llxag	%r6,-10000(%r9,%r11)
+	llxaq	%r6,-10000(%r9,%r11)
+	bextg	%r6,%r9,%r11
+	bdepg	%r6,%r9,%r11
+	kimd	%r6,%r9
+	kimd	%r6,%r9,13
+	klmd	%r6,%r9
+	klmd	%r6,%r9,13
+	vcvbq	%v15,%v17,13
+	vcvdq	%v15,%v17,253,12
+	vtp	%v15
+	vtp	%v15,65533
+	vtz	%v15,%v17,65533
+	cal	%r3,10(%r1),20(%r2)
+	calg	%r3,10(%r1),20(%r2)
+	calgf	%r3,10(%r1),20(%r2)
+	pfcr	%r1,%r3,-10000(%r2)
diff --git a/gas/testsuite/gas/s390/zarch-z10.d b/gas/testsuite/gas/s390/zarch-z10.d
index 4a051533f93..beb057878d6 100644
--- a/gas/testsuite/gas/s390/zarch-z10.d
+++ b/gas/testsuite/gas/s390/zarch-z10.d
@@ -359,20 +359,20 @@ Disassembly of section .text:
 .*:	c2 60 ff fe 79 60 [	 ]*msgfi	%r6,-100000
 .*:	e3 a6 75 b3 01 36 [	 ]*pfd	10,5555\(%r6,%r7\)
  *([\da-f]+):	c6 a2 00 00 00 00 [	 ]*pfdrl	10,\1 <foo\+0x\1>
-.*:	ec 67 d2 dc e6 54 [	 ]*rnsbg	%r6,%r7,210,220,230
-.*:	ec 67 d2 dc 00 54 [	 ]*rnsbg	%r6,%r7,210,220
+.*:	ec 67 6e dc e6 54 [	 ]*rnsbg	%r6,%r7,110,220,230
+.*:	ec 67 6e dc 00 54 [	 ]*rnsbg	%r6,%r7,110,220
 .*:	ec 67 92 dc e6 54 [	 ]*rnsbgt	%r6,%r7,18,220,230
 .*:	ec 67 92 dc 00 54 [	 ]*rnsbgt	%r6,%r7,18,220
 .*:	ec 67 92 1c 26 54 [	 ]*rnsbgt	%r6,%r7,18,28,38
 .*:	ec 67 92 1c 00 54 [	 ]*rnsbgt	%r6,%r7,18,28
-.*:	ec 67 d2 dc e6 57 [	 ]*rxsbg	%r6,%r7,210,220,230
-.*:	ec 67 d2 dc 00 57 [	 ]*rxsbg	%r6,%r7,210,220
+.*:	ec 67 6e dc e6 57 [	 ]*rxsbg	%r6,%r7,110,220,230
+.*:	ec 67 6e dc 00 57 [	 ]*rxsbg	%r6,%r7,110,220
 .*:	ec 67 92 dc e6 57 [	 ]*rxsbgt	%r6,%r7,18,220,230
 .*:	ec 67 92 dc 00 57 [	 ]*rxsbgt	%r6,%r7,18,220
 .*:	ec 67 92 1c 26 57 [	 ]*rxsbgt	%r6,%r7,18,28,38
 .*:	ec 67 92 1c 00 57 [	 ]*rxsbgt	%r6,%r7,18,28
-.*:	ec 67 d2 dc e6 56 [	 ]*rosbg	%r6,%r7,210,220,230
-.*:	ec 67 d2 dc 00 56 [	 ]*rosbg	%r6,%r7,210,220
+.*:	ec 67 6e dc e6 56 [	 ]*rosbg	%r6,%r7,110,220,230
+.*:	ec 67 6e dc 00 56 [	 ]*rosbg	%r6,%r7,110,220
 .*:	ec 67 92 dc e6 56 [	 ]*rosbgt	%r6,%r7,18,220,230
 .*:	ec 67 92 dc 00 56 [	 ]*rosbgt	%r6,%r7,18,220
 .*:	ec 67 92 1c 26 56 [	 ]*rosbgt	%r6,%r7,18,28,38
diff --git a/gas/testsuite/gas/s390/zarch-z10.s b/gas/testsuite/gas/s390/zarch-z10.s
index 45bb8944793..a6245888c4c 100644
--- a/gas/testsuite/gas/s390/zarch-z10.s
+++ b/gas/testsuite/gas/s390/zarch-z10.s
@@ -353,20 +353,20 @@ foo:
 	msgfi	%r6,-100000
 	pfd	10,5555(%r6,%r7)
 	pfdrl	10,.
-	rnsbg	%r6,%r7,210,220,230
-	rnsbg	%r6,%r7,210,220
+	rnsbg	%r6,%r7,110,220,230
+	rnsbg	%r6,%r7,110,220
 	rnsbg	%r6,%r7,146,220,230
 	rnsbg	%r6,%r7,146,220
 	rnsbgt	%r6,%r7,18,28,38
 	rnsbgt	%r6,%r7,18,28
-	rxsbg	%r6,%r7,210,220,230
-	rxsbg	%r6,%r7,210,220
+	rxsbg	%r6,%r7,110,220,230
+	rxsbg	%r6,%r7,110,220
 	rxsbg	%r6,%r7,146,220,230
 	rxsbg	%r6,%r7,146,220
 	rxsbgt	%r6,%r7,18,28,38
 	rxsbgt	%r6,%r7,18,28
-	rosbg	%r6,%r7,210,220,230
-	rosbg	%r6,%r7,210,220
+	rosbg	%r6,%r7,110,220,230
+	rosbg	%r6,%r7,110,220
 	rosbg	%r6,%r7,146,220,230
 	rosbg	%r6,%r7,146,220
 	rosbgt	%r6,%r7,18,28,38
diff --git a/gas/testsuite/gas/sparc/sparc5vis4.d b/gas/testsuite/gas/sparc/sparc5vis4.d
index bf5c90bbcf3..7820c2a5672 100644
--- a/gas/testsuite/gas/sparc/sparc5vis4.d
+++ b/gas/testsuite/gas/sparc/sparc5vis4.d
@@ -35,4 +35,4 @@ Disassembly of section .text:
   64:	95 b1 aa c8 	fpsubs8  %f6, %f8, %f10
   68:	9d b2 aa ec 	fpsubus8  %f10, %f12, %f14
   6c:	a5 b3 aa 70 	fpsubus16  %f14, %f16, %f18
-  70:	bf b0 09 3f 	faligndata  %f0, %f62, %f4, %f62
+  70:	bf b0 09 24 	faligndata  %g0, %f62, %f4, %f62
diff --git a/gas/testsuite/gas/sparc/sparc5vis4.s b/gas/testsuite/gas/sparc/sparc5vis4.s
index 0a0155f3376..58ca2b5f368 100644
--- a/gas/testsuite/gas/sparc/sparc5vis4.s
+++ b/gas/testsuite/gas/sparc/sparc5vis4.s
@@ -28,4 +28,4 @@
 	fpsubs8	%f6, %f8, %f10
 	fpsubus8 %f10, %f12, %f14
 	fpsubus16 %f14, %f16, %f18
-	faligndata %f0, %f62, %f4, %f62
+	faligndata %g0, %f62, %f4, %f62
diff --git a/gprof/configure b/gprof/configure
index 6c0bf5ef050..2b82abb191d 100755
--- a/gprof/configure
+++ b/gprof/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for gprof 2.43.
+# Generated by GNU Autoconf 2.69 for gprof 2.43.1.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
@@ -587,8 +587,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='gprof'
 PACKAGE_TARNAME='gprof'
-PACKAGE_VERSION='2.43'
-PACKAGE_STRING='gprof 2.43'
+PACKAGE_VERSION='2.43.1'
+PACKAGE_STRING='gprof 2.43.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1349,7 +1349,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures gprof 2.43 to adapt to many kinds of systems.
+\`configure' configures gprof 2.43.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1420,7 +1420,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of gprof 2.43:";;
+     short | recursive ) echo "Configuration of gprof 2.43.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1539,7 +1539,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-gprof configure 2.43
+gprof configure 2.43.1
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -1904,7 +1904,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by gprof $as_me 2.43, which was
+It was created by gprof $as_me 2.43.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -2884,7 +2884,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='gprof'
- VERSION='2.43'
+ VERSION='2.43.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -14503,7 +14503,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by gprof $as_me 2.43, which was
+This file was extended by gprof $as_me 2.43.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -14569,7 +14569,7 @@ _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-gprof config.status 2.43
+gprof config.status 2.43.1
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
diff --git a/gprofng/configure b/gprofng/configure
index dd83bdc3922..cf3e9c3d0db 100755
--- a/gprofng/configure
+++ b/gprofng/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for gprofng 2.43.
+# Generated by GNU Autoconf 2.69 for gprofng 2.43.0.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
@@ -587,8 +587,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='gprofng'
 PACKAGE_TARNAME='gprofng'
-PACKAGE_VERSION='2.43'
-PACKAGE_STRING='gprofng 2.43'
+PACKAGE_VERSION='2.43.0'
+PACKAGE_STRING='gprofng 2.43.0'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1362,7 +1362,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures gprofng 2.43 to adapt to many kinds of systems.
+\`configure' configures gprofng 2.43.0 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1433,7 +1433,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of gprofng 2.43:";;
+     short | recursive ) echo "Configuration of gprofng 2.43.0:";;
    esac
   cat <<\_ACEOF
 
@@ -1547,7 +1547,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-gprofng configure 2.43
+gprofng configure 2.43.0
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -2079,7 +2079,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by gprofng $as_me 2.43, which was
+It was created by gprofng $as_me 2.43.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -3052,7 +3052,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='gprofng'
- VERSION='2.43'
+ VERSION='2.43.0'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -17562,7 +17562,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by gprofng $as_me 2.43, which was
+This file was extended by gprofng $as_me 2.43.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -17628,7 +17628,7 @@ _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-gprofng config.status 2.43
+gprofng config.status 2.43.0
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
diff --git a/gprofng/doc/version.texi b/gprofng/doc/version.texi
index 4647fbdfd0f..93c96540618 100644
--- a/gprofng/doc/version.texi
+++ b/gprofng/doc/version.texi
@@ -1,4 +1,4 @@
 @set UPDATED 20 July 2024
 @set UPDATED-MONTH July 2024
-@set EDITION 2.43
-@set VERSION 2.43
+@set EDITION 2.43.0
+@set VERSION 2.43.0
diff --git a/gprofng/libcollector/configure b/gprofng/libcollector/configure
index e12f9c850b6..4c55f672332 100755
--- a/gprofng/libcollector/configure
+++ b/gprofng/libcollector/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for gprofng 2.43.
+# Generated by GNU Autoconf 2.69 for gprofng 2.43.0.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
@@ -587,8 +587,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='gprofng'
 PACKAGE_TARNAME='gprofng'
-PACKAGE_VERSION='2.43'
-PACKAGE_STRING='gprofng 2.43'
+PACKAGE_VERSION='2.43.0'
+PACKAGE_STRING='gprofng 2.43.0'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1324,7 +1324,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures gprofng 2.43 to adapt to many kinds of systems.
+\`configure' configures gprofng 2.43.0 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1395,7 +1395,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of gprofng 2.43:";;
+     short | recursive ) echo "Configuration of gprofng 2.43.0:";;
    esac
   cat <<\_ACEOF
 
@@ -1504,7 +1504,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-gprofng configure 2.43
+gprofng configure 2.43.0
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -1990,7 +1990,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by gprofng $as_me 2.43, which was
+It was created by gprofng $as_me 2.43.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -2967,7 +2967,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='gprofng'
- VERSION='2.43'
+ VERSION='2.43.0'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -16136,7 +16136,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by gprofng $as_me 2.43, which was
+This file was extended by gprofng $as_me 2.43.0, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -16202,7 +16202,7 @@ _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-gprofng config.status 2.43
+gprofng config.status 2.43.0
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
diff --git a/gprofng/src/collctrl.cc b/gprofng/src/collctrl.cc
index ece01d17f32..029c0387f19 100644
--- a/gprofng/src/collctrl.cc
+++ b/gprofng/src/collctrl.cc
@@ -109,7 +109,8 @@ read_cpuinfo ()
 	    cpu_info.cpu_clk_freq = read_int (temp + 9);
 	  else if (strncmp (temp, "cpu family", 10) == 0)
 	    cpu_info.cpu_family = read_int (temp + 10);
-	  else if ((strncmp (temp, "vendor_id", 9) || strncmp (temp, "mvendorid", 9)) == 0)
+	  else if (strncmp (temp, "vendor_id", 9) == 0
+		   || strncmp (temp, "mvendorid", 9) == 0)
 	    {
 	      if (cpu_info.cpu_vendorstr == NULL)
 		read_str (temp + 9, &cpu_info.cpu_vendorstr);
diff --git a/include/elf/x86-64.h b/include/elf/x86-64.h
index 6b5ada8e579..4ced40c96ec 100644
--- a/include/elf/x86-64.h
+++ b/include/elf/x86-64.h
@@ -96,18 +96,18 @@ START_RELOC_NUMBERS (elf_x86_64_reloc_type)
 	instruction starts at 5 bytes before the relocation offset,
 	relaxable.  */
      RELOC_NUMBER (R_X86_64_CODE_5_GOTPCRELX, 46)
+     /* PC relative offset to IE GOT entry if the instruction starts at
+        5 bytes before the relocation offset.  */
+     RELOC_NUMBER (R_X86_64_CODE_5_GOTTPOFF, 47)
      /* 32 bit signed pc relative offset to TLS descriptor in the GOT if
 	instruction starts at 5 bytes before the relocation offset.  */
-     RELOC_NUMBER (R_X86_64_CODE_5_GOTPC32_TLSDESC, 47)
-    /* PC relative offset to IE GOT entry if the instruction starts at
-       5 bytes before the relocation offset.  */
-     RELOC_NUMBER (R_X86_64_CODE_5_GOTTPOFF, 48)
+     RELOC_NUMBER (R_X86_64_CODE_5_GOTPC32_TLSDESC, 48)
      /* Load from 32 bit signed pc relative offset to GOT entry if the
 	instruction starts at 6 bytes before the relocation offset,
 	relaxable.  */
      RELOC_NUMBER (R_X86_64_CODE_6_GOTPCRELX, 49)
-    /* PC relative offset to IE GOT entry if the instruction starts at
-       6 bytes before the relocation offset.  */
+     /* PC relative offset to IE GOT entry if the instruction starts at
+        6 bytes before the relocation offset.  */
      RELOC_NUMBER (R_X86_64_CODE_6_GOTTPOFF, 50)
      /* 32 bit signed pc relative offset to TLS descriptor in the GOT if
 	instruction starts at 6 bytes before the relocation offset.  */
diff --git a/include/opcode/riscv-opc.h b/include/opcode/riscv-opc.h
index f0e1d99a5a9..22e63baf2e3 100644
--- a/include/opcode/riscv-opc.h
+++ b/include/opcode/riscv-opc.h
@@ -2275,6 +2275,23 @@
 #define MASK_C_NOT 0xfc7f
 #define MATCH_C_MUL 0x9c41
 #define MASK_C_MUL 0xfc63
+/* Zcmop instructions.  */
+#define MATCH_C_MOP_1 0x6081
+#define MASK_C_MOP_1 0xffff
+#define MATCH_C_MOP_3 0x6181
+#define MASK_C_MOP_3 0xffff
+#define MATCH_C_MOP_5 0x6281
+#define MASK_C_MOP_5 0xffff
+#define MATCH_C_MOP_7 0x6381
+#define MASK_C_MOP_7 0xffff
+#define MATCH_C_MOP_9 0x6481
+#define MASK_C_MOP_9 0xffff
+#define MATCH_C_MOP_11 0x6581
+#define MASK_C_MOP_11 0xffff
+#define MATCH_C_MOP_13 0x6681
+#define MASK_C_MOP_13 0xffff
+#define MATCH_C_MOP_15 0x6781
+#define MASK_C_MOP_15 0xffff
 /* Zcmp instructions.  */
 #define MATCH_CM_PUSH 0xb802
 #define MASK_CM_PUSH 0xff03
@@ -2364,6 +2381,87 @@
 #define MASK_C_NTL_S1 0xffff
 #define MATCH_C_NTL_ALL 0x9016
 #define MASK_C_NTL_ALL 0xffff
+/* Zimop instructions.  */
+#define MATCH_MOP_R_0 0x81c04073
+#define MASK_MOP_R_0 0xfff0707f
+#define MATCH_MOP_R_1 0x81d04073
+#define MASK_MOP_R_1 0xfff0707f
+#define MATCH_MOP_R_2 0x81e04073
+#define MASK_MOP_R_2 0xfff0707f
+#define MATCH_MOP_R_3 0x81f04073
+#define MASK_MOP_R_3 0xfff0707f
+#define MATCH_MOP_R_4 0x85c04073
+#define MASK_MOP_R_4 0xfff0707f
+#define MATCH_MOP_R_5 0x85d04073
+#define MASK_MOP_R_5 0xfff0707f
+#define MATCH_MOP_R_6 0x85e04073
+#define MASK_MOP_R_6 0xfff0707f
+#define MATCH_MOP_R_7 0x85f04073
+#define MASK_MOP_R_7 0xfff0707f
+#define MATCH_MOP_R_8 0x89c04073
+#define MASK_MOP_R_8 0xfff0707f
+#define MATCH_MOP_R_9 0x89d04073
+#define MASK_MOP_R_9 0xfff0707f
+#define MATCH_MOP_R_10 0x89e04073
+#define MASK_MOP_R_10 0xfff0707f
+#define MATCH_MOP_R_11 0x89f04073
+#define MASK_MOP_R_11 0xfff0707f
+#define MATCH_MOP_R_12 0x8dc04073
+#define MASK_MOP_R_12 0xfff0707f
+#define MATCH_MOP_R_13 0x8dd04073
+#define MASK_MOP_R_13 0xfff0707f
+#define MATCH_MOP_R_14 0x8de04073
+#define MASK_MOP_R_14 0xfff0707f
+#define MATCH_MOP_R_15 0x8df04073
+#define MASK_MOP_R_15 0xfff0707f
+#define MATCH_MOP_R_16 0xc1c04073
+#define MASK_MOP_R_16 0xfff0707f
+#define MATCH_MOP_R_17 0xc1d04073
+#define MASK_MOP_R_17 0xfff0707f
+#define MATCH_MOP_R_18 0xc1e04073
+#define MASK_MOP_R_18 0xfff0707f
+#define MATCH_MOP_R_19 0xc1f04073
+#define MASK_MOP_R_19 0xfff0707f
+#define MATCH_MOP_R_20 0xc5c04073
+#define MASK_MOP_R_20 0xfff0707f
+#define MATCH_MOP_R_21 0xc5d04073
+#define MASK_MOP_R_21 0xfff0707f
+#define MATCH_MOP_R_22 0xc5e04073
+#define MASK_MOP_R_22 0xfff0707f
+#define MATCH_MOP_R_23 0xc5f04073
+#define MASK_MOP_R_23 0xfff0707f
+#define MATCH_MOP_R_24 0xc9c04073
+#define MASK_MOP_R_24 0xfff0707f
+#define MATCH_MOP_R_25 0xc9d04073
+#define MASK_MOP_R_25 0xfff0707f
+#define MATCH_MOP_R_26 0xc9e04073
+#define MASK_MOP_R_26 0xfff0707f
+#define MATCH_MOP_R_27 0xc9f04073
+#define MASK_MOP_R_27 0xfff0707f
+#define MATCH_MOP_R_28 0xcdc04073
+#define MASK_MOP_R_28 0xfff0707f
+#define MATCH_MOP_R_29 0xcdd04073
+#define MASK_MOP_R_29 0xfff0707f
+#define MATCH_MOP_R_30 0xcde04073
+#define MASK_MOP_R_30 0xfff0707f
+#define MATCH_MOP_R_31 0xcdf04073
+#define MASK_MOP_R_31 0xfff0707f
+#define MATCH_MOP_RR_0 0x82004073
+#define MASK_MOP_RR_0 0xfe00707f
+#define MATCH_MOP_RR_1 0x86004073
+#define MASK_MOP_RR_1 0xfe00707f
+#define MATCH_MOP_RR_2 0x8a004073
+#define MASK_MOP_RR_2 0xfe00707f
+#define MATCH_MOP_RR_3 0x8e004073
+#define MASK_MOP_RR_3 0xfe00707f
+#define MATCH_MOP_RR_4 0xc2004073
+#define MASK_MOP_RR_4 0xfe00707f
+#define MATCH_MOP_RR_5 0xc6004073
+#define MASK_MOP_RR_5 0xfe00707f
+#define MATCH_MOP_RR_6 0xca004073
+#define MASK_MOP_RR_6 0xfe00707f
+#define MATCH_MOP_RR_7 0xce004073
+#define MASK_MOP_RR_7 0xfe00707f
 /* Zacas instructions.  */
 #define MATCH_AMOCAS_W 0x2800202f
 #define MASK_AMOCAS_W 0xf800707f
@@ -4014,6 +4112,47 @@ DECLARE_INSN(c_ntl_p1, MATCH_C_NTL_P1, MASK_C_NTL_P1)
 DECLARE_INSN(c_ntl_pall, MATCH_C_NTL_PALL, MASK_C_NTL_PALL)
 DECLARE_INSN(c_ntl_s1, MATCH_C_NTL_S1, MASK_C_NTL_S1)
 DECLARE_INSN(c_ntl_all, MATCH_C_NTL_ALL, MASK_C_NTL_ALL)
+/* Zimop instructions.  */
+DECLARE_INSN(MOP_R_0, MATCH_MOP_R_0, MASK_MOP_R_0)
+DECLARE_INSN(MOP_R_1, MATCH_MOP_R_1, MASK_MOP_R_1)
+DECLARE_INSN(MOP_R_2, MATCH_MOP_R_2, MASK_MOP_R_2)
+DECLARE_INSN(MOP_R_3, MATCH_MOP_R_3, MASK_MOP_R_3)
+DECLARE_INSN(MOP_R_4, MATCH_MOP_R_4, MASK_MOP_R_4)
+DECLARE_INSN(MOP_R_5, MATCH_MOP_R_5, MASK_MOP_R_5)
+DECLARE_INSN(MOP_R_6, MATCH_MOP_R_6, MASK_MOP_R_6)
+DECLARE_INSN(MOP_R_7, MATCH_MOP_R_7, MASK_MOP_R_7)
+DECLARE_INSN(MOP_R_8, MATCH_MOP_R_8, MASK_MOP_R_8)
+DECLARE_INSN(MOP_R_9, MATCH_MOP_R_9, MASK_MOP_R_9)
+DECLARE_INSN(MOP_R_10, MATCH_MOP_R_10, MASK_MOP_R_10)
+DECLARE_INSN(MOP_R_11, MATCH_MOP_R_11, MASK_MOP_R_11)
+DECLARE_INSN(MOP_R_12, MATCH_MOP_R_12, MASK_MOP_R_12)
+DECLARE_INSN(MOP_R_13, MATCH_MOP_R_13, MASK_MOP_R_13)
+DECLARE_INSN(MOP_R_14, MATCH_MOP_R_14, MASK_MOP_R_14)
+DECLARE_INSN(MOP_R_15, MATCH_MOP_R_15, MASK_MOP_R_15)
+DECLARE_INSN(MOP_R_16, MATCH_MOP_R_16, MASK_MOP_R_16)
+DECLARE_INSN(MOP_R_17, MATCH_MOP_R_17, MASK_MOP_R_17)
+DECLARE_INSN(MOP_R_18, MATCH_MOP_R_18, MASK_MOP_R_18)
+DECLARE_INSN(MOP_R_19, MATCH_MOP_R_19, MASK_MOP_R_19)
+DECLARE_INSN(MOP_R_20, MATCH_MOP_R_20, MASK_MOP_R_20)
+DECLARE_INSN(MOP_R_21, MATCH_MOP_R_21, MASK_MOP_R_21)
+DECLARE_INSN(MOP_R_22, MATCH_MOP_R_22, MASK_MOP_R_22)
+DECLARE_INSN(MOP_R_23, MATCH_MOP_R_23, MASK_MOP_R_23)
+DECLARE_INSN(MOP_R_24, MATCH_MOP_R_24, MASK_MOP_R_24)
+DECLARE_INSN(MOP_R_25, MATCH_MOP_R_25, MASK_MOP_R_25)
+DECLARE_INSN(MOP_R_26, MATCH_MOP_R_26, MASK_MOP_R_26)
+DECLARE_INSN(MOP_R_27, MATCH_MOP_R_27, MASK_MOP_R_27)
+DECLARE_INSN(MOP_R_28, MATCH_MOP_R_28, MASK_MOP_R_28)
+DECLARE_INSN(MOP_R_29, MATCH_MOP_R_29, MASK_MOP_R_29)
+DECLARE_INSN(MOP_R_30, MATCH_MOP_R_30, MASK_MOP_R_30)
+DECLARE_INSN(MOP_R_31, MATCH_MOP_R_31, MASK_MOP_R_31)
+DECLARE_INSN(MOP_RR_0, MATCH_MOP_RR_0, MASK_MOP_RR_0)
+DECLARE_INSN(MOP_RR_1, MATCH_MOP_RR_1, MASK_MOP_RR_1)
+DECLARE_INSN(MOP_RR_2, MATCH_MOP_RR_2, MASK_MOP_RR_2)
+DECLARE_INSN(MOP_RR_3, MATCH_MOP_RR_3, MASK_MOP_RR_3)
+DECLARE_INSN(MOP_RR_4, MATCH_MOP_RR_4, MASK_MOP_RR_4)
+DECLARE_INSN(MOP_RR_5, MATCH_MOP_RR_5, MASK_MOP_RR_5)
+DECLARE_INSN(MOP_RR_6, MATCH_MOP_RR_6, MASK_MOP_RR_6)
+DECLARE_INSN(MOP_RR_7, MATCH_MOP_RR_7, MASK_MOP_RR_7)
 /* Zacas instructions.  */
 DECLARE_INSN(amocas_w, MATCH_AMOCAS_W, MASK_AMOCAS_W)
 DECLARE_INSN(amocas_d, MATCH_AMOCAS_D, MASK_AMOCAS_D)
@@ -4091,6 +4230,15 @@ DECLARE_INSN(c_lhu, MATCH_C_LHU, MASK_C_LHU)
 DECLARE_INSN(c_lh, MATCH_C_LH, MASK_C_LH)
 DECLARE_INSN(c_sb, MATCH_C_SB, MASK_C_SB)
 DECLARE_INSN(c_sh, MATCH_C_SH, MASK_C_SH)
+/* Zcmop instructions.  */
+DECLARE_INSN(c_mop_1, MATCH_C_MOP_1, MASK_C_MOP_1)
+DECLARE_INSN(c_mop_3, MATCH_C_MOP_3, MASK_C_MOP_3)
+DECLARE_INSN(c_mop_5, MATCH_C_MOP_5, MASK_C_MOP_5)
+DECLARE_INSN(c_mop_7, MATCH_C_MOP_7, MASK_C_MOP_7)
+DECLARE_INSN(c_mop_9, MATCH_C_MOP_9, MASK_C_MOP_9)
+DECLARE_INSN(c_mop_11, MATCH_C_MOP_11, MASK_C_MOP_11)
+DECLARE_INSN(c_mop_13, MATCH_C_MOP_13, MASK_C_MOP_13)
+DECLARE_INSN(c_mop_15, MATCH_C_MOP_15, MASK_C_MOP_15)
 /* Zcmp instructions.  */
 DECLARE_INSN(cm_push, MATCH_CM_PUSH, MASK_CM_PUSH)
 DECLARE_INSN(cm_pop, MATCH_CM_POP, MASK_CM_POP)
diff --git a/include/opcode/riscv.h b/include/opcode/riscv.h
index fedd47837e4..9ccf0ec2454 100644
--- a/include/opcode/riscv.h
+++ b/include/opcode/riscv.h
@@ -437,6 +437,7 @@ enum riscv_insn_class
   INSN_CLASS_ZIHINTNTL,
   INSN_CLASS_ZIHINTNTL_AND_C,
   INSN_CLASS_ZIHINTPAUSE,
+  INSN_CLASS_ZIMOP,
   INSN_CLASS_ZMMUL,
   INSN_CLASS_ZAAMO,
   INSN_CLASS_ZALRSC,
@@ -486,6 +487,7 @@ enum riscv_insn_class
   INSN_CLASS_ZCB_AND_ZBA,
   INSN_CLASS_ZCB_AND_ZBB,
   INSN_CLASS_ZCB_AND_ZMMUL,
+  INSN_CLASS_ZCMOP,
   INSN_CLASS_ZCMP,
   INSN_CLASS_SVINVAL,
   INSN_CLASS_ZICBOM,
diff --git a/include/opcode/s390.h b/include/opcode/s390.h
index e5dfcb27570..8322882410e 100644
--- a/include/opcode/s390.h
+++ b/include/opcode/s390.h
@@ -45,6 +45,7 @@ enum s390_opcode_cpu_val
     S390_OPCODE_ARCH12,
     S390_OPCODE_ARCH13,
     S390_OPCODE_ARCH14,
+    S390_OPCODE_ARCH15,
     S390_OPCODE_MAXCPU
   };
 
@@ -193,8 +194,4 @@ extern const struct s390_operand s390_operands[];
 
 #define S390_OPERAND_CP16 0x1000
 
-#define S390_OPERAND_OR1 0x2000
-#define S390_OPERAND_OR2 0x4000
-#define S390_OPERAND_OR8 0x8000
-
 #endif /* S390_H */
diff --git a/ld/configure b/ld/configure
index 44d79c2445d..cb3bcae4d3a 100755
--- a/ld/configure
+++ b/ld/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for ld 2.43.
+# Generated by GNU Autoconf 2.69 for ld 2.43.1.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
@@ -587,8 +587,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='ld'
 PACKAGE_TARNAME='ld'
-PACKAGE_VERSION='2.43'
-PACKAGE_STRING='ld 2.43'
+PACKAGE_VERSION='2.43.1'
+PACKAGE_STRING='ld 2.43.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1437,7 +1437,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures ld 2.43 to adapt to many kinds of systems.
+\`configure' configures ld 2.43.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1508,7 +1508,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of ld 2.43:";;
+     short | recursive ) echo "Configuration of ld 2.43.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1689,7 +1689,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-ld configure 2.43
+ld configure 2.43.1
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -2404,7 +2404,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by ld $as_me 2.43, which was
+It was created by ld $as_me 2.43.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -3388,7 +3388,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='ld'
- VERSION='2.43'
+ VERSION='2.43.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -20096,7 +20096,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by ld $as_me 2.43, which was
+This file was extended by ld $as_me 2.43.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -20162,7 +20162,7 @@ _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-ld config.status 2.43
+ld config.status 2.43.1
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
diff --git a/ld/ld.texi b/ld/ld.texi
index 89e3913317a..2eafeb7dd39 100644
--- a/ld/ld.texi
+++ b/ld/ld.texi
@@ -7614,7 +7614,6 @@ command line option. @xref{Options}.
 
 @menu
 * libdep Plugin::	Static Library Dependencies Plugin
-* lto Plugin::          LTO Plugin
 @end menu
 
 @node libdep Plugin
@@ -7653,24 +7652,6 @@ the @samp{__.LIBDEP} member of @file{libssl.a} would contain
 -L/usr/local/lib -lcrypto
 @end smallexample
 
-Note any library search directories added in this way are only used to
-search for libraries which are also added the same plugin.  They are
-not used for searching for libraries specified on the linker command
-line, linker scripts or other plugins.  This does however present a
-problem if multiple archives with @samp{__.LIBDEP} entries are present
-as they will all be handled by the libdep plugin and thus they will
-share library search paths.  This could result in a library being
-loaded from an unexpected location.
-
-@node lto Plugin
-@section LTO Plugin
-Although not shipped with the binutils the LTO Plugin from the GCC
-project is nevertheless a plugin that is designed to work with the
-linker.  The plugin intercepts object files as they are loaded by the
-linker and instead sends them to the LTO compiler.  When that compiler
-finishes the resulting object file(s) are passed back to the linker
-for normal processing.
-
 @node Special Sections
 @chapter Special Sections
 When linking ELF format object files @command{ld} treats some sections
diff --git a/ld/ldelf.c b/ld/ldelf.c
index 09691609fc0..04045acbf3d 100644
--- a/ld/ldelf.c
+++ b/ld/ldelf.c
@@ -1170,7 +1170,7 @@ ldelf_handle_dt_needed (struct elf_link_hash_table *htab,
 	    {
 	      char *filename;
 
-	      if (search->source != search_dir_linker_script)
+	      if (search->cmdline)
 		continue;
 	      filename = (char *) xmalloc (strlen (search->name) + len + 2);
 	      sprintf (filename, "%s/%s", search->name, l->name);
diff --git a/ld/ldfile.c b/ld/ldfile.c
index 87be885d31a..f1107a1b7d7 100644
--- a/ld/ldfile.c
+++ b/ld/ldfile.c
@@ -40,6 +40,12 @@
 #include "plugin.h"
 #endif /* BFD_SUPPORTS_PLUGINS */
 
+bool ldfile_assumed_script = false;
+const char *ldfile_output_machine_name = "";
+unsigned long ldfile_output_machine;
+enum bfd_architecture ldfile_output_architecture;
+search_dirs_type *search_head;
+
 #ifdef VMS
 static char *slash = "";
 #else
@@ -56,12 +62,6 @@ typedef struct search_arch
   struct search_arch *next;
 } search_arch_type;
 
-bool                   ldfile_assumed_script = false;
-const char *           ldfile_output_machine_name = "";
-unsigned long          ldfile_output_machine;
-enum bfd_architecture  ldfile_output_architecture;
-search_dirs_type *     search_head;
-
 static search_dirs_type **search_tail_ptr = &search_head;
 static search_arch_type *search_arch_head;
 static search_arch_type **search_arch_tail_ptr = &search_arch_head;
@@ -303,20 +303,21 @@ is_sysrooted_pathname (const char *name)
 }
 
 /* Adds NAME to the library search path.
-   Makes a copy of NAME using xmalloc().
-   Returns a pointer to the newly created search_dirs_type structure
-   or NULL if there was a problem.  */
+   Makes a copy of NAME using xmalloc().  */
 
-search_dirs_type *
-ldfile_add_library_path (const char *name, enum search_dir_source source)
+void
+ldfile_add_library_path (const char *name, bool cmdline)
 {
   search_dirs_type *new_dirs;
 
-  if (source != search_dir_cmd_line && config.only_cmd_line_lib_dirs)
-    return NULL;
+  if (!cmdline && config.only_cmd_line_lib_dirs)
+    return;
 
   new_dirs = (search_dirs_type *) xmalloc (sizeof (search_dirs_type));
-  new_dirs->source = source;
+  new_dirs->next = NULL;
+  new_dirs->cmdline = cmdline;
+  *search_tail_ptr = new_dirs;
+  search_tail_ptr = &new_dirs->next;
 
   /* If a directory is marked as honoring sysroot, prepend the sysroot path
      now.  */
@@ -326,25 +327,6 @@ ldfile_add_library_path (const char *name, enum search_dir_source source)
     new_dirs->name = concat (ld_sysroot, name + strlen ("$SYSROOT"), (const char *) NULL);
   else
     new_dirs->name = xstrdup (name);
-
-  /* Accumulate script and command line sourced
-     search paths at the end of the current list.  */
-#if BFD_SUPPORTS_PLUGINS
-  /* PR 31904: But put plugin sourced paths at the start of the list.  */
-  if (source == search_dir_plugin)
-    {
-      new_dirs->next = search_head;
-      search_head = new_dirs;
-    }
-  else
-#endif
-    {
-      new_dirs->next = NULL;
-      *search_tail_ptr = new_dirs;
-      search_tail_ptr = &new_dirs->next;
-    }
-
-  return new_dirs;
 }
 
 /* Try to open a BFD for a lang_input_statement.  */
@@ -370,9 +352,9 @@ ldfile_try_open_bfd (const char *attempt,
       return false;
     }
 
-  /* PR 30568: Do not track plugin generated object files.  */
+  /* PR 30568: Do not track lto generated temporary object files.  */
 #if BFD_SUPPORTS_PLUGINS
-  if (entry->plugin != NULL)
+  if (!entry->flags.lto_output)
 #endif
     track_dependency_files (attempt);
 
@@ -383,7 +365,7 @@ ldfile_try_open_bfd (const char *attempt,
   entry->the_bfd->is_linker_input = 1;
 
 #if BFD_SUPPORTS_PLUGINS
-  if (entry->plugin != NULL)
+  if (entry->flags.lto_output)
     entry->the_bfd->lto_output = 1;
 #endif
 
@@ -594,14 +576,6 @@ ldfile_open_file_search (const char *arch,
     {
       char *string;
 
-#if BFD_SUPPORTS_PLUGINS
-      /* PR 31904: Only check a plugin sourced search
-	 directory if the file is from the same plugin.  */
-      if (search->source == search_dir_plugin
-	  && entry->plugin != search->plugin)
-	continue;
-#endif
-
       if (entry->flags.dynamic && !bfd_link_relocatable (&link_info))
 	{
 	  if (ldemul_open_dynamic_archive (arch, search, entry))
@@ -870,7 +844,7 @@ ldfile_find_command_file (const char *name,
 	{
 	  search_dirs_type **save_tail_ptr = search_tail_ptr;
 	  search_tail_ptr = &script_search;
-	  (void) ldfile_add_library_path (script_dir, search_dir_cmd_line);
+	  ldfile_add_library_path (script_dir, true);
 	  search_tail_ptr = save_tail_ptr;
 	}
     }
@@ -884,11 +858,6 @@ ldfile_find_command_file (const char *name,
        search != NULL;
        search = search->next)
     {
-#if BFD_SUPPORTS_PLUGINS
-      /* Do not search for linker commands in plugin sourced search directories.  */
-      if (search->source == search_dir_plugin)
-	continue;
-#endif
       path = concat (search->name, slash, name, (const char *) NULL);
       result = try_open (path, sysrooted);
       free (path);
diff --git a/ld/ldfile.h b/ld/ldfile.h
index 08826f65f04..f79abf2310d 100644
--- a/ld/ldfile.h
+++ b/ld/ldfile.h
@@ -26,15 +26,6 @@ extern unsigned long ldfile_output_machine;
 extern enum bfd_architecture ldfile_output_architecture;
 extern const char *ldfile_output_machine_name;
 
-enum search_dir_source
-{
-  search_dir_cmd_line,
-#if BFD_SUPPORTS_PLUGINS
-  search_dir_plugin,
-#endif
-  search_dir_linker_script
-};
-
 /* Structure used to hold the list of directories to search for
    libraries.  */
 
@@ -44,12 +35,8 @@ typedef struct search_dirs
   struct search_dirs *next;
   /* Name of directory.  */
   const char *name;
-  /* Where the search path came from.  */
-  enum search_dir_source source;
-#if BFD_SUPPORTS_PLUGINS
-  /* For search dirs added by plugins, the plugin that added them.  */
-  void * plugin;
-#endif
+  /* TRUE if this is from the command line.  */
+  bool cmdline;
 } search_dirs_type;
 
 enum script_open_style
@@ -72,8 +59,8 @@ extern search_dirs_type *search_head;
 
 extern void ldfile_add_arch
   (const char *);
-extern search_dirs_type * ldfile_add_library_path
-  (const char *, enum search_dir_source);
+extern void ldfile_add_library_path
+  (const char *, bool cmdline);
 extern void ldfile_open_command_file
   (const char *name);
 extern void ldfile_open_script_file
diff --git a/ld/ldgram.y b/ld/ldgram.y
index 7c04025f526..07c19ba8692 100644
--- a/ld/ldgram.y
+++ b/ld/ldgram.y
@@ -321,7 +321,7 @@ ifile_p1:
 	|	TARGET_K '(' NAME ')'
 		{ lang_add_target($3); }
 	|	SEARCH_DIR '(' filename ')'
-		{ ldfile_add_library_path ($3, search_dir_linker_script); }
+		{ ldfile_add_library_path ($3, false); }
 	|	OUTPUT '(' filename ')'
 		{ lang_add_output($3, 1); }
 	|	OUTPUT_FORMAT '(' NAME ')'
diff --git a/ld/ldlang.h b/ld/ldlang.h
index f36e04c586a..4c1bb002f8e 100644
--- a/ld/ldlang.h
+++ b/ld/ldlang.h
@@ -293,6 +293,9 @@ struct lang_input_statement_flags
 
   /* Set if the file was claimed from an archive.  */
   unsigned int claim_archive : 1;
+
+  /* Set if added by the lto plugin add_input_file callback.  */
+  unsigned int lto_output : 1;
 #endif /* BFD_SUPPORTS_PLUGINS */
 
   /* Head of list of pushed flags.  */
@@ -329,11 +332,6 @@ typedef struct lang_input_statement_struct
   const char *target;
 
   struct lang_input_statement_flags flags;
-
-#if BFD_SUPPORTS_PLUGINS
-  /* If non-NULL the plugin that added this file.  */
-  void * plugin;
-#endif  
 } lang_input_statement_type;
 
 typedef struct
diff --git a/ld/lexsup.c b/ld/lexsup.c
index 4aa0124ce2f..96fb73159bf 100644
--- a/ld/lexsup.c
+++ b/ld/lexsup.c
@@ -1052,8 +1052,7 @@ parse_args (unsigned argc, char **argv)
 	  xexit (0);
 	  break;
 	case 'L':
-	  /* FIXME: Check the return value ?  */
-	  (void) ldfile_add_library_path (optarg, search_dir_cmd_line);
+	  ldfile_add_library_path (optarg, true);
 	  break;
 	case 'l':
 	  lang_add_input_file (optarg, lang_input_file_is_l_enum, NULL);
@@ -2087,8 +2086,7 @@ set_default_dirlist (char *dirlist_ptr)
       if (p != NULL)
 	*p = '\0';
       if (*dirlist_ptr != '\0')
-	/* FIXME: Check the return value ?  */
-	(void) ldfile_add_library_path (dirlist_ptr, search_dir_cmd_line);
+	ldfile_add_library_path (dirlist_ptr, true);
       if (p == NULL)
 	break;
       dirlist_ptr = p + 1;
diff --git a/ld/pdb.c b/ld/pdb.c
index 88639d539b7..ae4c614cef8 100644
--- a/ld/pdb.c
+++ b/ld/pdb.c
@@ -175,7 +175,7 @@ add_stream (bfd *pdb, const char *name, uint16_t *stream_num)
   if (!bfd_make_writable (stream))
     {
       bfd_close (stream);
-      return false;
+      return NULL;
     }
 
   if (!pdb->archive_head)
diff --git a/ld/plugin.c b/ld/plugin.c
index 03ee9880d10..2cd0279c93a 100644
--- a/ld/plugin.c
+++ b/ld/plugin.c
@@ -778,8 +778,18 @@ get_symbols (const void *handle, int nsyms, struct ld_plugin_symbol *syms,
 	{
 	  blhe = h;
 	  /* Check if a symbol is a wrapper symbol.  */
-	  if (blhe && blhe->wrapper_symbol)
-	    wrap_status = wrapper;
+	  if (blhe)
+	    {
+	      if (blhe->wrapper_symbol)
+		wrap_status = wrapper;
+	      else if (link_info.wrap_hash != NULL)
+		{
+		  struct bfd_link_hash_entry *unwrap
+		    = unwrap_hash_lookup (&link_info, (bfd *) abfd, blhe);
+		  if (unwrap != NULL && unwrap != h)
+		    wrap_status = wrapper;
+		}
+	    }
 	}
       else
 	{
@@ -923,7 +933,7 @@ add_input_file (const char *pathname)
 			    NULL);
   if (!is)
     return LDPS_ERR;
-  is->plugin = called_plugin;
+  is->flags.lto_output = 1;
   return LDPS_OK;
 }
 
@@ -938,23 +948,17 @@ add_input_library (const char *pathname)
 			    NULL);
   if (!is)
     return LDPS_ERR;
-  is->plugin = called_plugin;
+  is->flags.lto_output = 1;
   return LDPS_OK;
 }
 
 /* Set the extra library path to be used by libraries added via
    add_input_library.  */
-
 static enum ld_plugin_status
 set_extra_library_path (const char *path)
 {
-  search_dirs_type * sdt;
-
   ASSERT (called_plugin);
-  sdt = ldfile_add_library_path (xstrdup (path), search_dir_plugin);
-  if (sdt == NULL)
-    return LDPS_ERR;
-  sdt->plugin = called_plugin;
+  ldfile_add_library_path (xstrdup (path), false);
   return LDPS_OK;
 }
 
@@ -1164,10 +1168,11 @@ plugin_load_plugins (void)
 /* Call 'claim file' hook for all plugins.  */
 static int
 plugin_call_claim_file (const struct ld_plugin_input_file *file, int *claimed,
-			bool known_used)
+			int *claim_file_handler_v2, bool known_used)
 {
   plugin_t *curplug = plugins_list;
   *claimed = false;
+  *claim_file_handler_v2 = false;
   while (curplug && !*claimed)
     {
       if (curplug->claim_file_handler)
@@ -1176,7 +1181,11 @@ plugin_call_claim_file (const struct ld_plugin_input_file *file, int *claimed,
 
 	  called_plugin = curplug;
 	  if (curplug->claim_file_handler_v2)
-	    rv = (*curplug->claim_file_handler_v2) (file, claimed, known_used);
+	    {
+	      rv = (*curplug->claim_file_handler_v2) (file, claimed,
+						      known_used);
+	      *claim_file_handler_v2 = true;
+	    }
 	  else
 	    rv = (*curplug->claim_file_handler) (file, claimed);
 	  called_plugin = NULL;
@@ -1212,7 +1221,7 @@ plugin_cleanup (bfd *abfd ATTRIBUTE_UNUSED)
 static bfd_cleanup
 plugin_object_p (bfd *ibfd, bool known_used)
 {
-  int claimed;
+  int claimed, claim_file_handler_v2;
   plugin_input_file_t *input;
   struct ld_plugin_input_file file;
   bfd *abfd;
@@ -1221,12 +1230,17 @@ plugin_object_p (bfd *ibfd, bool known_used)
   if ((ibfd->flags & BFD_PLUGIN) != 0)
     return NULL;
 
-  if (ibfd->plugin_format != bfd_plugin_unknown)
+  /* When KNOWN_USED is false, we call plugin claim_file if plugin_format
+     is bfd_plugin_unknown and set plugin_format to bfd_plugin_yes_unused
+     on LTO object.  When KNOWN_USED is true, we call plugin claim_file
+     if plugin_format is bfd_plugin_unknown or bfd_plugin_yes_unused.  */
+  if (ibfd->plugin_format != bfd_plugin_unknown
+      && (!known_used || ibfd->plugin_format != bfd_plugin_yes_unused))
     {
-      if (ibfd->plugin_format == bfd_plugin_yes)
-	return plugin_cleanup;
-      else
+      if (ibfd->plugin_format == bfd_plugin_no)
 	return NULL;
+      else
+	return plugin_cleanup;
     }
 
   /* We create a dummy BFD, initially empty, to house whatever symbols
@@ -1262,7 +1276,8 @@ plugin_object_p (bfd *ibfd, bool known_used)
 
   claimed = 0;
 
-  if (plugin_call_claim_file (&file, &claimed, known_used))
+  if (plugin_call_claim_file (&file, &claimed, &claim_file_handler_v2,
+			      known_used))
     einfo (_("%F%P: %s: plugin reported error claiming file\n"),
 	   plugin_error_plugin ());
 
@@ -1282,7 +1297,13 @@ plugin_object_p (bfd *ibfd, bool known_used)
 
   if (claimed)
     {
-      ibfd->plugin_format = bfd_plugin_yes;
+      /* Set plugin_format to bfd_plugin_yes_unused if KNOWN_USED is
+	 false for plugin claim_file_v2 to avoid including the unused
+	 LTO archive members in linker output.  */
+      if (known_used || !claim_file_handler_v2)
+	ibfd->plugin_format = bfd_plugin_yes;
+      else
+	ibfd->plugin_format = bfd_plugin_yes_unused;
       ibfd->plugin_dummy_bfd = abfd;
       bfd_make_readable (abfd);
       abfd->no_export = ibfd->no_export;
diff --git a/ld/po/ld.pot b/ld/po/ld.pot
index a2598d9f0da..c0668603ced 100644
--- a/ld/po/ld.pot
+++ b/ld/po/ld.pot
@@ -8,7 +8,7 @@ msgid ""
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: https://sourceware.org/bugzilla/\n"
-"POT-Creation-Date: 2024-08-04 14:11+0100\n"
+"POT-Creation-Date: 2024-08-17 17:49+0100\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
@@ -3440,7 +3440,7 @@ msgstr ""
 msgid "<no plugin>"
 msgstr ""
 
-#: plugin.c:255 plugin.c:1135
+#: plugin.c:255 plugin.c:1145
 msgid "%F%P: %s: error loading plugin: %s\n"
 msgstr ""
 
@@ -3480,39 +3480,39 @@ msgid "unknown LTO visibility value %x"
 msgstr ""
 
 #. We should not have a new, indirect or warning symbol here.
-#: plugin.c:828
+#: plugin.c:838
 msgid "%F%P: %s: plugin symbol table corrupt (sym type %d)\n"
 msgstr ""
 
-#: plugin.c:893
+#: plugin.c:903
 msgid "%P: %pB: symbol `%s' definition: %s, visibility: %s, resolution: %s\n"
 msgstr ""
 
-#: plugin.c:976
+#: plugin.c:986
 msgid "%P: warning: "
 msgstr ""
 
-#: plugin.c:987
+#: plugin.c:997
 msgid "%P: error: "
 msgstr ""
 
-#: plugin.c:1142
+#: plugin.c:1152
 msgid "%F%P: %s: plugin error: %d\n"
 msgstr ""
 
-#: plugin.c:1201
+#: plugin.c:1216
 msgid "%F%P: plugin_strdup failed to allocate memory: %s\n"
 msgstr ""
 
-#: plugin.c:1238
+#: plugin.c:1258
 msgid "%F%P: plugin failed to allocate memory for input: %s\n"
 msgstr ""
 
-#: plugin.c:1266
+#: plugin.c:1287
 msgid "%F%P: %s: plugin reported error claiming file\n"
 msgstr ""
 
-#: plugin.c:1379
+#: plugin.c:1406
 msgid "%P: %s: error in plugin cleanup: %d (ignored)\n"
 msgstr ""
 
diff --git a/ld/scripttempl/elf.sc b/ld/scripttempl/elf.sc
index 54716110b61..3fdbff52094 100644
--- a/ld/scripttempl/elf.sc
+++ b/ld/scripttempl/elf.sc
@@ -425,7 +425,6 @@ emit_early_ro()
 {
   cat <<EOF
   ${INITIAL_READONLY_SECTIONS}
-  .note.gnu.build-id ${RELOCATING-0}: { *(.note.gnu.build-id) }
 EOF
 }
 
diff --git a/ld/testsuite/ld-i386/i386.exp b/ld/testsuite/ld-i386/i386.exp
index ad6ad2e725e..7a8a7e438a1 100644
--- a/ld/testsuite/ld-i386/i386.exp
+++ b/ld/testsuite/ld-i386/i386.exp
@@ -513,6 +513,7 @@ run_dump_test "pr28870"
 run_dump_test "pr28894"
 run_dump_test "pr30787"
 run_dump_test "pr31047"
+run_dump_test "pr32191"
 
 if { !([istarget "i?86-*-linux*"]
        || [istarget "i?86-*-gnu*"]
@@ -1323,6 +1324,14 @@ if { [isnative]
 	    {{error_output "pr21997-1.err"}} \
 	    "pr21997-1" \
 	] \
+	[list \
+	    "Build pr32067" \
+	    "-Wl,--oformat,binary -nostdlib -nostartfiles" \
+	    "" \
+	    { start.s ../ld-x86-64/pr32067.s } \
+	    {} \
+	    "pr32067" \
+	] \
     ]
 
     # The musl C library does not support TEXTRELs.
diff --git a/ld/testsuite/ld-i386/pr32191.d b/ld/testsuite/ld-i386/pr32191.d
new file mode 100644
index 00000000000..d4a00bb92f4
--- /dev/null
+++ b/ld/testsuite/ld-i386/pr32191.d
@@ -0,0 +1,9 @@
+#source: ../ld-x86-64/pr32191.s
+#as: --32 -mx86-used-note=yes
+#ld: -shared -m elf_i386 -z separate-code --build-id --rosegment
+#readelf: -lW
+
+#...
+ +[0-9]+ +\.text 
+ +[0-9]+ +\..* \.note\.gnu\.property \.note\.gnu\.build-id .*
+#pass
diff --git a/ld/testsuite/ld-i386/start.s b/ld/testsuite/ld-i386/start.s
index 80301c6a7e4..4262a3380fa 100644
--- a/ld/testsuite/ld-i386/start.s
+++ b/ld/testsuite/ld-i386/start.s
@@ -1,3 +1,4 @@
 	.globl _start
 _start:
 	jmp foo
+	.section	.note.GNU-stack
diff --git a/ld/testsuite/ld-loongarch-elf/ld-loongarch-elf.exp b/ld/testsuite/ld-loongarch-elf/ld-loongarch-elf.exp
index fb34eeb80cb..09c4c9fd5b2 100644
--- a/ld/testsuite/ld-loongarch-elf/ld-loongarch-elf.exp
+++ b/ld/testsuite/ld-loongarch-elf/ld-loongarch-elf.exp
@@ -149,6 +149,7 @@ if [istarget "loongarch64-*-*"] {
     run_dump_test "relr-data-pie"
     run_dump_test "relr-discard-pie"
     run_dump_test "relr-got-pie"
+    run_dump_test "relr-got-start"
     run_dump_test "relr-text-pie"
     run_dump_test "abssym_pie"
   }
diff --git a/ld/testsuite/ld-loongarch-elf/relr-got-start.d b/ld/testsuite/ld-loongarch-elf/relr-got-start.d
new file mode 100644
index 00000000000..0b1a5b9810d
--- /dev/null
+++ b/ld/testsuite/ld-loongarch-elf/relr-got-start.d
@@ -0,0 +1,7 @@
+#source: relr-got-start.s
+#ld: -pie -z pack-relative-relocs -T relr-relocs.ld
+#readelf: -rW
+
+Relocation section '\.relr\.dyn' at offset 0x[a-z0-f]+ contains 1 entry which relocates 1 location:
+Index: Entry            Address           Symbolic Address
+0000:  0000000000020008 0000000000020008  _GLOBAL_OFFSET_TABLE_ \+ 0x8
diff --git a/ld/testsuite/ld-loongarch-elf/relr-got-start.s b/ld/testsuite/ld-loongarch-elf/relr-got-start.s
new file mode 100644
index 00000000000..c89fb42527f
--- /dev/null
+++ b/ld/testsuite/ld-loongarch-elf/relr-got-start.s
@@ -0,0 +1,5 @@
+.globl _start
+_start:
+        pcalau12i       $r5,%got_pc_hi20(_start)
+        ld.d    $r5,$r5,%got_pc_lo12(_start)
+        ret
diff --git a/ld/testsuite/ld-plugin/common-1.c b/ld/testsuite/ld-plugin/common-1.c
new file mode 100644
index 00000000000..b4f616aeea2
--- /dev/null
+++ b/ld/testsuite/ld-plugin/common-1.c
@@ -0,0 +1,11 @@
+#include <stdio.h>
+
+int foo;
+
+int main()
+{
+  if (foo == 1)
+    printf ("PASS\n");
+
+  return 0;
+}
diff --git a/ld/testsuite/ld-plugin/common-2a.c b/ld/testsuite/ld-plugin/common-2a.c
new file mode 100644
index 00000000000..fccfca72868
--- /dev/null
+++ b/ld/testsuite/ld-plugin/common-2a.c
@@ -0,0 +1,11 @@
+#include <stdio.h>
+
+int foo;
+
+int main()
+{
+  if (foo == 0)
+    printf ("PASS\n");
+
+  return 0;
+}
diff --git a/ld/testsuite/ld-plugin/common-2b.c b/ld/testsuite/ld-plugin/common-2b.c
new file mode 100644
index 00000000000..c014c673f74
--- /dev/null
+++ b/ld/testsuite/ld-plugin/common-2b.c
@@ -0,0 +1,6 @@
+int foo;
+
+void
+func (void)
+{
+}
diff --git a/ld/testsuite/ld-plugin/definition-1.c b/ld/testsuite/ld-plugin/definition-1.c
new file mode 100644
index 00000000000..a244740a3a5
--- /dev/null
+++ b/ld/testsuite/ld-plugin/definition-1.c
@@ -0,0 +1 @@
+int foo = 1;
diff --git a/ld/testsuite/ld-plugin/libdep-a.c b/ld/testsuite/ld-plugin/libdep-a.c
deleted file mode 100644
index 5a01ce8c88a..00000000000
--- a/ld/testsuite/ld-plugin/libdep-a.c
+++ /dev/null
@@ -1,7 +0,0 @@
-extern int g (void);
-
-int
-f (void)
-{
-  return g();
-}
diff --git a/ld/testsuite/ld-plugin/libdep-b.c b/ld/testsuite/ld-plugin/libdep-b.c
deleted file mode 100644
index d2ca7e08694..00000000000
--- a/ld/testsuite/ld-plugin/libdep-b.c
+++ /dev/null
@@ -1,5 +0,0 @@
-int
-g (void)
-{
-  return 4;
-}
diff --git a/ld/testsuite/ld-plugin/libdep-main.c b/ld/testsuite/ld-plugin/libdep-main.c
deleted file mode 100644
index 7563a7d5f88..00000000000
--- a/ld/testsuite/ld-plugin/libdep-main.c
+++ /dev/null
@@ -1,7 +0,0 @@
-extern int f (void);
-
-int
-main (void)
-{
-  return f();
-}
diff --git a/ld/testsuite/ld-plugin/libdep.exp b/ld/testsuite/ld-plugin/libdep.exp
deleted file mode 100644
index 6e56b6bab18..00000000000
--- a/ld/testsuite/ld-plugin/libdep.exp
+++ /dev/null
@@ -1,124 +0,0 @@
-# Expect script for ld-plugin LIBDEP tests
-#   Copyright (C) 2024 Free Software Foundation, Inc.
-#
-# This file is part of the GNU Binutils.
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 3 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston,
-# MA 02110-1301, USA.
-
-# These tests require the plugin API.
-if { ![check_plugin_api_available] } {
-    return
-}
-
-# Check to see if the C compiler works
-# FIXME: This is being lazy, we could create assembler equivalents instead.
-if { ![check_compiler_available] } {
-    return
-}
-
-proc run_test { } {
-    global CC_FOR_TARGET
-    global srcdir
-    global subdir
-    global ar
-    global ld
-    global libdep
-    global base_dir
-    
-    set testname "libdep test"
-    
-    # Create temporary directories if they do not already exist.
-    file mkdir -p libdep-a libdep-b
-
-    # Delete old versions of the files we are about to build, just in case.
-    file delete libdep-a/a.o libdep-a/liba.a libdep-b/b.o libdep-b/libc.a libdep-main.o
-
-    # Build object files.
-    if {![ld_compile $CC_FOR_TARGET $srcdir/$subdir/libdep-a.c libdep-a/a.o]} {
-	fail "$testname: could not compile source file 1"
-	return
-    }
-    if {![ld_compile $CC_FOR_TARGET $srcdir/$subdir/libdep-b.c libdep-b/b.o]} {
-	fail "$testname: could not compile source file 2"
-	return
-    }
-    if {![ld_compile $CC_FOR_TARGET $srcdir/$subdir/libdep-main.c libdep-main.o]} {
-	fail "$testname: could not compile source file 3"
-	return
-    }
-
-    # Create static archives from the objects.
-
-    # For the first archive we add a libdep element that loads the second library.
-    if {![ar_simple_create $ar {--record-libdeps "-Llibdep-b -lc"} libdep-a/liba.a libdep-a/a.o]} {
-	fail "$testname: could not create archive 1"
-	return
-    }
-
-    # For the second archive we choose a name - libc.a - that is likely to clash
-    # with a system library.  This will help to check that the library loaded by
-    # following the libdep element in the first library is the one that we expect.
-    if {![ar_simple_create $ar {} libdep-b/libc.a libdep-b/b.o]} {
-	fail "$testname: could not create archive 2"
-	return
-    }
-
-    # Find the libdep plugin.
-    # Use libtool to find the path to the plugin rather
-    # than worrying about run paths or anything like that.
-    catch "exec $base_dir/libtool --config" lt_config
-    verbose "Full lt config: $lt_config" 2
-    # Look for "objdir=.libs"
-    regexp -line "^objdir=.*$" "$lt_config" lt_objdir
-    verbose "lt_objdir line is '$lt_objdir'" 2
-    set lt_objdir [regsub "objdir=" "$lt_objdir" ""]
-
-    if { [ file exists "$base_dir/$lt_objdir/libdep.so" ] } {
-	set libdep_plugin "$base_dir/$lt_objdir/libdep.so"
-    } else {
-	# FIXME: Check in the system bfd-plugin directory ?
-	fail "$testname - could not locate libdep plugin"
-	return
-    }
-
-    verbose "Full plugin path: $libdep_plugin" 1
-    
-    # Link the main object file with the liba.a library.
-    # Use the libdep plugin to read the __.LIBDEP element in the liba.a library
-    # and so bring in the libdep-b.o object file from the libc.a library.
-    # Failure to locate the libc.a library, or loading the wrong libc.a library
-    # will result in an unresolved reference error.
-    set exec_output [run_host_cmd "$ld" "-plugin $libdep_plugin -o libdep.exe libdep-main.o -L libdep-a -la -e 0"]
-    set exec_output [prune_warnings $exec_output]
-
-    set expected_output "got deps for library libdep-a/liba.a: -Llibdep-b -lc"
-    
-    if ![string match $expected_output $exec_output] then {
-	fail "$testname: did not get expected output from the linker"
-	return
-    }
-
-    regsub -all "$expected_output" $exec_output "\\1" exec_output
-
-    if {![string match "" $exec_output]} {
-	fail "$testname: unexpected output from linker: $exec_output"
-	return
-    }
-
-    pass "$testname"
-}
-
-run_test
diff --git a/ld/testsuite/ld-plugin/lto.exp b/ld/testsuite/ld-plugin/lto.exp
index 9476caf7ab4..602d94ed7b3 100644
--- a/ld/testsuite/ld-plugin/lto.exp
+++ b/ld/testsuite/ld-plugin/lto.exp
@@ -231,6 +231,30 @@ set lto_link_tests [list \
    "$plug_opt" "-flto $lto_no_fat -fcommon" \
    {pr26389.c} \
    [list [list "nm" "$plug_opt" "pr26389.d"]]] \
+  [list "Build libdefinition-1.a" \
+   "$plug_opt" \
+   "-O2 -fcommon -flto $lto_no_fat" \
+   {definition-1.c} \
+   {} \
+   "libdefinition-1.a" \
+  ] \
+  [list \
+   "Build common-2a.o" \
+   "" \
+   "-O2 -fcommon -flto $lto_no_fat" \
+   {common-2a.c} \
+   {} \
+   "" \
+   "c" \
+  ] \
+  [list \
+   "Build libcommon-2.a" \
+   "$plug_opt" \
+   "-O2 -fcommon -flto $lto_no_fat" \
+   {common-2b.c} \
+   {} \
+   "libcommon-2.a" \
+  ] \
 ]
 
 if { [at_least_gcc_version 10 0] && [check_lto_shared_available] } {
@@ -546,6 +570,22 @@ set lto_link_elf_tests [list \
    {} \
    "pr31956b" \
   ] \
+  [list \
+   "PR ld/31956 (malloc)" \
+   "-Wl,--wrap=malloc" \
+   "-O2 -flto" \
+   {pr31956c.c} \
+   {} \
+   "pr31956c" \
+  ] \
+  [list \
+   "PR ld/31956 (unused)" \
+   "-Wl,--wrap=parse_line" \
+   "-O2 -flto" \
+   {pr31956d.c} \
+   {{"nm" {} "pr31956d.d"}} \
+   "pr31956d" \
+  ] \
   [list \
    "Build pr30281.so" \
    "-shared -Wl,--version-script,pr30281.t \
@@ -747,6 +787,17 @@ set lto_run_tests [list \
    {pr26262a.c} "pr26262b" "pass.out" \
    "-flto -O2" "c" "" \
    ""] \
+  [list "Run common-1" \
+   "-O2 -flto" \
+   "" \
+   {common-1.c} \
+   "common-1" \
+   "pass.out" \
+   "-O2 -fcommon -flto $lto_no_fat" \
+   "c" \
+   "" \
+   "tmpdir/libdefinition-1.a" \
+  ] \
 ]
 
 if { [at_least_gcc_version 4 7] } {
@@ -846,6 +897,26 @@ run_cc_link_tests $lto_link_tests
 # by some elf tests besides shared libs tests.  So, always compile them.
 run_cc_link_tests $lto_compile_elf_tests
 
+# Xfail PR ld/32083 test for GCC without the fix:
+#
+# commit a98dd536b1017c2b814a3465206c6c01b2890998
+# Author: H.J. Lu <hjl.tools@gmail.com>
+# Date:   Wed Aug 21 07:25:25 2024 -0700
+#
+#    Update LDPT_REGISTER_CLAIM_FILE_HOOK_V2 linker plugin hook
+#
+set exec_output [run_host_cmd "$CC_FOR_TARGET" \
+			      "-O2 -fcommon -flto -o tmpdir/common-2 \
+			       tmpdir/common-2a.o tmpdir/libcommon-2.a \
+			       tmpdir/libcommon-2.a"]
+if [string match "" $exec_output] then {
+    pass "PR ld/32083"
+} elseif { [ regexp "lto1: fatal error: multiple prevailing defs for 'func'" $exec_output ] } {
+    xfail "PR ld/32083"
+} else {
+    fail "PR ld/32083"
+}
+
 # Restrict these to ELF targets that support shared libs and PIC.
 if { [is_elf_format] && [check_lto_shared_available] } {
     run_cc_link_tests $lto_link_elf_tests
diff --git a/ld/testsuite/ld-plugin/pr31956c.c b/ld/testsuite/ld-plugin/pr31956c.c
new file mode 100644
index 00000000000..4a46b2b49a8
--- /dev/null
+++ b/ld/testsuite/ld-plugin/pr31956c.c
@@ -0,0 +1,19 @@
+#include <stdlib.h>
+
+extern void *__real_malloc (size_t);
+
+void *
+__wrap_malloc (size_t n)
+{
+  if (n == 0)
+    return NULL;
+  else
+    return __real_malloc (n);
+};
+
+int
+main (void)
+{
+  void *ptr = malloc (30);
+  return ptr == NULL ? 1 : 0;
+}
diff --git a/ld/testsuite/ld-plugin/pr31956d.c b/ld/testsuite/ld-plugin/pr31956d.c
new file mode 100644
index 00000000000..cb7f2d50643
--- /dev/null
+++ b/ld/testsuite/ld-plugin/pr31956d.c
@@ -0,0 +1,7 @@
+void __wrap_parse_line(void) {};
+
+int
+main (void)
+{
+  return 0;
+}
diff --git a/ld/testsuite/ld-plugin/pr31956d.d b/ld/testsuite/ld-plugin/pr31956d.d
new file mode 100644
index 00000000000..b579cdc7353
--- /dev/null
+++ b/ld/testsuite/ld-plugin/pr31956d.d
@@ -0,0 +1,4 @@
+#failif
+#...
+[0-9a-f]+ T .*parse_line
+#...
diff --git a/ld/testsuite/ld-x86-64/plt3.s b/ld/testsuite/ld-x86-64/plt3.s
new file mode 100644
index 00000000000..c3a29b5ca95
--- /dev/null
+++ b/ld/testsuite/ld-x86-64/plt3.s
@@ -0,0 +1,27 @@
+	.text
+	.global _start
+_start:
+	movq $foo@PLT, %rax
+	leaq -11(%rip), %rbx
+	leaq (%rbx, %rax), %rax
+	call *%rax
+
+	# Write out "PASS\n".
+	movl	$5, %edx
+	movl	$.LC0, %esi
+	movl	$1, %edi
+	movl	$1, %eax
+	syscall
+
+	# exit
+	movq $60, %rax
+	movq $0, %rdi
+	syscall
+
+foo:
+	ret
+
+	.section	.rodata.str1.1,"aMS",@progbits,1
+.LC0:
+	.string	"PASS\n"
+	.section	.note.GNU-stack,"",@progbits
diff --git a/ld/testsuite/ld-x86-64/pr32067.s b/ld/testsuite/ld-x86-64/pr32067.s
new file mode 100644
index 00000000000..40878a9f92a
--- /dev/null
+++ b/ld/testsuite/ld-x86-64/pr32067.s
@@ -0,0 +1,5 @@
+	.text
+	.globl foo
+foo:
+	ret
+	.section	.note.GNU-stack
diff --git a/ld/testsuite/ld-x86-64/pr32189.s b/ld/testsuite/ld-x86-64/pr32189.s
new file mode 100644
index 00000000000..3d0f682d663
--- /dev/null
+++ b/ld/testsuite/ld-x86-64/pr32189.s
@@ -0,0 +1,35 @@
+	.text
+	.global _start
+_start:
+	leaq 1f(%rip), %r11
+1:
+	movabs $_GLOBAL_OFFSET_TABLE_, %r15
+	leaq (%r11,%r15), %r15
+
+	movabs $ptr@GOT, %rax
+	movabs $Ldst@GOTOFF, %rdx
+	movq (%rax,%r15), %rax
+	leaq (%rdx,%r15), %rcx
+	movq %rcx, (%rax)
+
+	# Write out "PASS\n".
+	movl	$5, %edx
+	movl	$.LC0, %esi
+	movl	$1, %edi
+	movl	$1, %eax
+	syscall
+
+	# exit
+	movq $60, %rax
+	movq $0, %rdi
+	syscall
+
+	.data
+Ldst:
+	.quad 0
+ptr:
+	.quad 0
+	.section	.rodata.str1.1,"aMS",@progbits,1
+.LC0:
+	.string	"PASS\n"
+	.section	.note.GNU-stack,"",@progbits
diff --git a/ld/testsuite/ld-x86-64/pr32191-x32.d b/ld/testsuite/ld-x86-64/pr32191-x32.d
new file mode 100644
index 00000000000..13f38a21fa3
--- /dev/null
+++ b/ld/testsuite/ld-x86-64/pr32191-x32.d
@@ -0,0 +1,9 @@
+#source: pr32191.s
+#as: --x32 -mx86-used-note=yes
+#ld: -shared -m elf32_x86_64 -z separate-code --build-id --rosegment
+#readelf: -lW
+
+#...
+ +[0-9]+ +\.text 
+ +[0-9]+ +\..* \.note\.gnu\.property \.note\.gnu\.build-id .*
+#pass
diff --git a/ld/testsuite/ld-x86-64/pr32191.d b/ld/testsuite/ld-x86-64/pr32191.d
new file mode 100644
index 00000000000..7f37f752541
--- /dev/null
+++ b/ld/testsuite/ld-x86-64/pr32191.d
@@ -0,0 +1,9 @@
+#source: pr32191.s
+#as: --64 -mx86-used-note=yes
+#ld: -shared -m elf_x86_64 -z separate-code --build-id --rosegment
+#readelf: -lW
+
+#...
+ +[0-9]+ +\.text 
+ +[0-9]+ +\..* \.note\.gnu\.property \.note\.gnu\.build-id .*
+#pass
diff --git a/ld/testsuite/ld-x86-64/pr32191.s b/ld/testsuite/ld-x86-64/pr32191.s
new file mode 100644
index 00000000000..953f0de670f
--- /dev/null
+++ b/ld/testsuite/ld-x86-64/pr32191.s
@@ -0,0 +1,5 @@
+	.text
+	.global foo
+foo:
+	.nops 4
+	.section	.note.GNU-stack,"",@progbits
diff --git a/ld/testsuite/ld-x86-64/x86-64.exp b/ld/testsuite/ld-x86-64/x86-64.exp
index 742823e6458..89ce531a5a9 100644
--- a/ld/testsuite/ld-x86-64/x86-64.exp
+++ b/ld/testsuite/ld-x86-64/x86-64.exp
@@ -540,6 +540,8 @@ run_dump_test "pr31868c-x32"
 run_dump_test "tlsie5"
 run_dump_test "tlsdesc3"
 run_dump_test "tlsdesc4"
+run_dump_test "pr32191"
+run_dump_test "pr32191-x32"
 
 if { ![skip_sframe_tests] } {
     run_dump_test "sframe-simple-1"
@@ -1405,6 +1407,14 @@ if { [isnative] && [check_compiler_available] } {
 	    {{readelf -n indirect-extern-access.rd}}  \
 	    "libprotected-data-2b.so" \
 	] \
+	[list \
+	    "Build pr32067" \
+	    "-Wl,--oformat,binary -nostdlib -nostartfiles" \
+	    "" \
+	    { start.s pr32067.s } \
+	    {} \
+	    "pr32067" \
+	] \
     ]
 
     if  {[istarget "x86_64-*-linux*-gnux32"]} {
@@ -1912,6 +1922,22 @@ if { [isnative] && [check_compiler_available] } {
 	    "pass.out" \
 	    "-fPIE" \
 	] \
+	[list \
+	    "Run pr32189" \
+	    "$NOPIE_LDFLAGS -nostdlib -nostartfiles" \
+	    "" \
+	    { pr32189.s } \
+	    "pr32189" \
+	    "pass.out" \
+	] \
+	[list \
+	    "Run plt3" \
+	    "$NOPIE_LDFLAGS -nostdlib -nostartfiles" \
+	    "" \
+	    { plt3.s } \
+	    "plt3" \
+	    "pass.out" \
+	] \
     ]
 
     # Run-time tests which require working ifunc attribute support.
diff --git a/opcodes/configure b/opcodes/configure
index 1a6289af1cd..29e13afe42c 100755
--- a/opcodes/configure
+++ b/opcodes/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for opcodes 2.43.
+# Generated by GNU Autoconf 2.69 for opcodes 2.43.1.
 #
 #
 # Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
@@ -587,8 +587,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='opcodes'
 PACKAGE_TARNAME='opcodes'
-PACKAGE_VERSION='2.43'
-PACKAGE_STRING='opcodes 2.43'
+PACKAGE_VERSION='2.43.1'
+PACKAGE_STRING='opcodes 2.43.1'
 PACKAGE_BUGREPORT=''
 PACKAGE_URL=''
 
@@ -1371,7 +1371,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures opcodes 2.43 to adapt to many kinds of systems.
+\`configure' configures opcodes 2.43.1 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1442,7 +1442,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of opcodes 2.43:";;
+     short | recursive ) echo "Configuration of opcodes 2.43.1:";;
    esac
   cat <<\_ACEOF
 
@@ -1564,7 +1564,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-opcodes configure 2.43
+opcodes configure 2.43.1
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -2158,7 +2158,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by opcodes $as_me 2.43, which was
+It was created by opcodes $as_me 2.43.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -3138,7 +3138,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='opcodes'
- VERSION='2.43'
+ VERSION='2.43.1'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -15126,7 +15126,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by opcodes $as_me 2.43, which was
+This file was extended by opcodes $as_me 2.43.1, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -15192,7 +15192,7 @@ _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-opcodes config.status 2.43
+opcodes config.status 2.43.1
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
diff --git a/opcodes/i386-gen.c b/opcodes/i386-gen.c
index 7b740553c34..89641da862c 100644
--- a/opcodes/i386-gen.c
+++ b/opcodes/i386-gen.c
@@ -30,7 +30,9 @@
 
 /* Build-time checks are preferrable over runtime ones.  Use this construct
    in preference where possible.  */
+#ifndef static_assert
 #define static_assert(e) ((void)sizeof (struct { int _:1 - 2 * !(e); }))
+#endif
 
 static const char *program_name = NULL;
 static int debug = 0;
diff --git a/opcodes/i386-opc.tbl b/opcodes/i386-opc.tbl
index 8c0d93402b5..fdb52ac2f51 100644
--- a/opcodes/i386-opc.tbl
+++ b/opcodes/i386-opc.tbl
@@ -1664,8 +1664,6 @@ vandp<sd>, 0x<sd:ppfx>54, AVX, Modrm|C|Vex|Space0F|Src1VVVV|VexWIG|CheckOperandS
 vblendp<sd>, 0x660c | <sd:opc>, AVX, Modrm|Vex|Space0F3A|Src1VVVV|VexWIG|CheckOperandSize|NoSuf, { Imm8|Imm8S, Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM, RegXMM|RegYMM }
 vblendvp<sd>, 0x664a | <sd:opc>, AVX, Modrm|Vex|Space0F3A|Src1VVVV|VexW0|CheckOperandSize|NoSuf, { RegXMM|RegYMM, Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM, RegXMM|RegYMM }
 vbroadcastf128, 0x661a, AVX, Modrm|Vex256|Space0F38|VexW0|NoSuf, { Xmmword|Unspecified|BaseIndex, RegYMM }
-// vbroadcastf32x4 in disguise (see vround{p,s}{s,d} comment)
-vbroadcastf128, 0x661a, APX_F&AVX512VL, Modrm|EVex256|Space0F38|VexW0|Disp8MemShift=4|NoSuf, { Xmmword|Unspecified|BaseIndex, RegYMM }
 vbroadcastsd, 0x6619, AVX, Modrm|Vex256|Space0F38|VexW0|NoSuf, { Qword|Unspecified|BaseIndex, RegYMM }
 vbroadcastss, 0x6618, AVX, Modrm|Vex128|Space0F38|VexW0|NoSuf, { Dword|Unspecified|BaseIndex, RegXMM|RegYMM }
 vcmp<frel>p<sd>, 0x<sd:ppfx>c2/0x<frel:imm>, AVX, Modrm|<frel:comm>|Vex|Space0F|Src1VVVV|VexWIG|CheckOperandSize|NoSuf|ImmExt, { RegXMM|RegYMM|Unspecified|BaseIndex, RegXMM|RegYMM, RegXMM|RegYMM }
@@ -1694,8 +1692,6 @@ vdivs<sd>, 0x<sd:spfx>5e, AVX, Modrm|VexLIG|Space0F|Src1VVVV|VexWIG|NoSuf, { <sd
 vdppd, 0x6641, AVX, Modrm|Vex|Space0F3A|Src1VVVV|VexWIG|NoSuf, { Imm8|Imm8S, Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }
 vdpps, 0x6640, AVX, Modrm|Vex|Space0F3A|Src1VVVV|VexWIG|CheckOperandSize|NoSuf, { Imm8|Imm8S, Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM, RegXMM|RegYMM }
 vextractf128, 0x6619, AVX, Modrm|Vex256|Space0F3A|VexW0|NoSuf, { Imm8, RegYMM, Unspecified|BaseIndex|RegXMM }
-// vextractf32x4 in disguise (see vround{p,s}{s,d} comment)
-vextractf128, 0x6619, APX_F&AVX512VL, Modrm|EVex256|Space0F3A|VexW0|Disp8MemShift=4|NoSuf, { Imm8, RegYMM, Xmmword|Unspecified|BaseIndex }
 vextractps, 0x6617, AVX|AVX512F, Modrm|Vex128|EVex128|Space0F3A|VexWIG|Disp8MemShift=2|NoSuf, { Imm8, RegXMM, Reg32|Unspecified|BaseIndex }
 vextractps, 0x6617, x64&(AVX|AVX512F), RegMem|Vex128|EVex128|Space0F3A|VexWIG|NoSuf, { Imm8, RegXMM, Reg64 }
 vhaddpd, 0x667c, AVX, Modrm|Vex|Space0F|Src1VVVV|VexWIG|CheckOperandSize|NoSuf, { Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM, RegXMM|RegYMM }
@@ -1703,8 +1699,6 @@ vhaddps, 0xf27c, AVX, Modrm|Vex|Space0F|Src1VVVV|VexWIG|CheckOperandSize|NoSuf,
 vhsubpd, 0x667d, AVX, Modrm|Vex|Space0F|Src1VVVV|VexWIG|CheckOperandSize|NoSuf, { Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM, RegXMM|RegYMM }
 vhsubps, 0xf27d, AVX, Modrm|Vex|Space0F|Src1VVVV|VexWIG|CheckOperandSize|NoSuf, { Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM, RegXMM|RegYMM }
 vinsertf128, 0x6618, AVX, Modrm|Vex256|Space0F3A|Src1VVVV|VexW0|NoSuf, { Imm8, Unspecified|BaseIndex|RegXMM, RegYMM, RegYMM }
-// vinsertf32x4 in disguise (see vround{p,s}{s,d} comment)
-vinsertf128, 0x6618, APX_F&AVX512VL, Modrm|EVex256|Space0F3A|Src1VVVV|VexW0|Disp8MemShift=4|NoSuf, { Imm8, Xmmword|Unspecified|BaseIndex, RegYMM, RegYMM }
 vinsertps, 0x6621, AVX, Modrm|Vex|Space0F3A|Src1VVVV|VexWIG|NoSuf, { Imm8, Dword|Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }
 vlddqu, 0xf2f0, AVX, Modrm|Vex|Space0F|VexWIG|CheckOperandSize|NoSuf, { Xmmword|Ymmword|Unspecified|BaseIndex, RegXMM|RegYMM }
 vldmxcsr, 0xae/2, AVX, Modrm|Vex128|Space0F|VexWIG|NoSuf, { Dword|Unspecified|BaseIndex }
@@ -1873,10 +1867,6 @@ vrcpps, 0x53, AVX, Modrm|Vex|Space0F|VexWIG|CheckOperandSize|NoSuf, { Unspecifie
 vrcpss, 0xf353, AVX, Modrm|Vex=3|Space0F|Src1VVVV|VexWIG|NoSuf, { Dword|Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }
 vroundp<sd>, 0x6608 | <sd:opc>, AVX, Modrm|Vex|Space0F3A|VexWIG|CheckOperandSize|NoSuf, { Imm8, Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM }
 vrounds<sd>, 0x660a | <sd:opc>, AVX, Modrm|VexLIG|Space0F3A|Src1VVVV|VexWIG|NoSuf, { Imm8, <sd:elem>|Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }
-// These are really clones of VRNDSCALE{P,S}{S,D}, with broadcast, masking, SAE,
-// 512-bit operand size, and register sources dropped.
-vroundp<sd>, 0x6608 | <sd:opc>, APX_F&AVX512VL, Modrm|Space0F3A|<sd:vexw>|Disp8ShiftVL|CheckOperandSize|NoSuf, { Imm8, Xmmword|Ymmword|Unspecified|BaseIndex, RegXMM|RegYMM }
-vrounds<sd>, 0x660a | <sd:opc>, APX_F&AVX512F, Modrm|EVexLIG|Space0F3A|Src1VVVV|<sd:vexw>|Disp8MemShift|NoSuf, { Imm8, <sd:elem>|Unspecified|BaseIndex, RegXMM, RegXMM }
 vrsqrtps, 0x52, AVX, Modrm|Vex|Space0F|VexWIG|CheckOperandSize|NoSuf, { Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM }
 vrsqrtss, 0xf352, AVX, Modrm|Vex=3|Space0F|Src1VVVV|VexWIG|NoSuf, { Dword|Unspecified|BaseIndex|RegXMM, RegXMM, RegXMM }
 vshufp<sd>, 0x<sd:ppfx>c6, AVX, Modrm|Vex|Space0F|Src1VVVV|VexWIG|CheckOperandSize|NoSuf, { Imm8|Imm8S, Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM, RegXMM|RegYMM }
@@ -1912,8 +1902,6 @@ vpmovzxwq, 0x6634, AVX2|AVX512VL, Modrm|Vex256|EVex256|Masking|Space0F38|VexWIG|
 // New AVX2 instructions.
 
 vbroadcasti128, 0x665A, AVX2, Modrm|Vex256|Space0F38|VexW0|NoSuf, { Xmmword|Unspecified|BaseIndex, RegYMM }
-// vbroadcasti32x4 in disguise (see vround{p,s}{s,d} comment)
-vbroadcasti128, 0x665a, APX_F&AVX512VL, Modrm|EVex256|Space0F38|VexW0|Disp8MemShift=4|NoSuf, { Xmmword|Unspecified|BaseIndex, RegYMM }
 vbroadcastsd, 0x6619, AVX2, Modrm|Vex=2|Space0F38|VexW=1|NoSuf, { RegXMM, RegYMM }
 vbroadcastss, 0x6618, AVX2|AVX512F, Modrm|Vex|EVexDYN|Masking|Space0F38|VexW0|Disp8MemShift=2|NoSuf, { RegXMM|Dword|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM }
 vpblendd, 0x6602, AVX2, Modrm|Vex|Space0F3A|Src1VVVV|VexW0|CheckOperandSize|NoSuf, { Imm8|Imm8S, Unspecified|BaseIndex|RegXMM|RegYMM, RegXMM|RegYMM, RegXMM|RegYMM }
@@ -1926,11 +1914,7 @@ vpermpd, 0x6601, AVX2|AVX512F, Modrm|Vex256|EVexDYN|Masking|Space0F3A|VexW1|Broa
 vpermps, 0x6616, AVX2|AVX512F, Modrm|Vex256|EVexDYN|Masking|Space0F38|Src1VVVV|VexW0|Broadcast|Disp8ShiftVL|CheckOperandSize|NoSuf, { RegYMM|RegZMM|Dword|Unspecified|BaseIndex, RegYMM|RegZMM, RegYMM|RegZMM }
 vpermq, 0x6600, AVX2|AVX512F, Modrm|Vex256|EVexDYN|Masking|Space0F3A|VexW1|Broadcast|Disp8ShiftVL|CheckOperandSize|NoSuf, { Imm8|Imm8S, RegYMM|RegZMM|Qword|Unspecified|BaseIndex, RegYMM|RegZMM }
 vextracti128, 0x6639, AVX2, Modrm|Vex256|Space0F3A|VexW0|NoSuf, { Imm8, RegYMM, Unspecified|BaseIndex|RegXMM }
-// vextracti32x4 in disguise (see vround{p,s}{s,d} comment)
-vextracti128, 0x6639, APX_F&AVX512VL, Modrm|EVex256|Space0F3A|VexW0|Disp8MemShift=4|NoSuf, { Imm8, RegYMM, Xmmword|Unspecified|BaseIndex }
 vinserti128, 0x6638, AVX2, Modrm|Vex256|Space0F3A|Src1VVVV|VexW0|NoSuf, { Imm8, Unspecified|BaseIndex|RegXMM, RegYMM, RegYMM }
-// vinserti32x4 in disguise (see vround{p,s}{s,d} comment)
-vinserti128, 0x6638, APX_F&AVX512VL, Modrm|EVex256|Space0F3A|Src1VVVV|VexW0|Disp8MemShift=4|NoSuf, { Imm8, Xmmword|Unspecified|BaseIndex, RegYMM, RegYMM }
 vpmaskmov<dq>, 0x668e, AVX2, Modrm|Vex|Space0F38|Src1VVVV|<dq:vexw>|CheckOperandSize|NoSuf, { RegXMM|RegYMM, RegXMM|RegYMM, Xmmword|Ymmword|Unspecified|BaseIndex }
 vpmaskmov<dq>, 0x668c, AVX2, Modrm|Vex|Space0F38|Src1VVVV|<dq:vexw>|CheckOperandSize|NoSuf, { Xmmword|Ymmword|Unspecified|BaseIndex, RegXMM|RegYMM, RegXMM|RegYMM }
 vpsllv<dq>, 0x6647, AVX2|AVX512F, Modrm|Vex|EVexDYN|Masking|Space0F38|Src1VVVV|<dq:vexw>|Broadcast|Disp8ShiftVL|CheckOperandSize|NoSuf, { RegXMM|RegYMM|RegZMM|<dq:elem>|Unspecified|BaseIndex, RegXMM|RegYMM|RegZMM, RegXMM|RegYMM|RegZMM }
diff --git a/opcodes/i386-tbl.h b/opcodes/i386-tbl.h
index 0e5e603a153..ba69e39f853 100644
--- a/opcodes/i386-tbl.h
+++ b/opcodes/i386-tbl.h
@@ -20350,16 +20350,6 @@ static const insn_template i386_optab[] =
 	  1, 0, 0, 0, 1, 0 } },
       { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 	  0, 1, 0, 0, 0, 0 } } } },
-  { MN_vbroadcastf128, 0x1a, 2, SPACE_0F38, None,
-    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
-      0, 0, 0, 0, 0, 1, 1, 0, 0, 3, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0,
-      0, 0 },
-    { { 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0 } },
-    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },
-    { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
-	  1, 0, 0, 0, 1, 0 } },
-      { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  0, 1, 0, 0, 0, 0 } } } },
   { MN_vbroadcastsd, 0x19, 2, SPACE_0F38, None,
     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
       0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
@@ -25792,18 +25782,6 @@ static const insn_template i386_optab[] =
 	  0, 1, 0, 0, 0, 0 } },
       { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0,
 	  1, 0, 0, 0, 1, 0 } } } },
-  { MN_vextractf128, 0x19, 3, SPACE_0F3A, None,
-    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
-      0, 0, 0, 0, 0, 1, 1, 0, 0, 3, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0,
-      0, 0 },
-    { { 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0 } },
-    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },
-    { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  0, 0, 0, 0, 0, 0 } },
-      { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  0, 1, 0, 0, 0, 0 } },
-      { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
-	  1, 0, 0, 0, 1, 0 } } } },
   { MN_vextractps, 0x17, 3, SPACE_0F3A, None,
     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
       0, 0, 0, 1, 0, 3, 1, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0,
@@ -25890,20 +25868,6 @@ static const insn_template i386_optab[] =
 	  0, 1, 0, 0, 0, 0 } },
       { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 	  0, 1, 0, 0, 0, 0 } } } },
-  { MN_vinsertf128, 0x18, 4, SPACE_0F3A, None,
-    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
-      0, 0, 0, 0, 1, 1, 1, 0, 0, 3, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0,
-      0, 0 },
-    { { 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0 } },
-    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },
-    { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  0, 0, 0, 0, 0, 0 } },
-      { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
-	  1, 0, 0, 0, 1, 0 } },
-      { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  0, 1, 0, 0, 0, 0 } },
-      { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  0, 1, 0, 0, 0, 0 } } } },
   { MN_vinsertps, 0x21, 4, SPACE_0F3A, None,
     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
       0, 0, 0, 1, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
@@ -30306,18 +30270,6 @@ static const insn_template i386_optab[] =
 	  1, 1, 0, 0, 1, 0 } },
       { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 	  1, 1, 0, 0, 0, 0 } } } },
-  { MN_vroundps, 0x08 | 0, 3, SPACE_0F3A, None,
-    { 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
-      0, 0, 0, 0, 0, 1, 1, 0, 0, 5, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0,
-      0, 0 },
-    { { 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0 } },
-    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },
-    { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  0, 0, 0, 0, 0, 0 } },
-      { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
-	  1, 1, 0, 0, 1, 0 } },
-      { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  1, 1, 0, 0, 0, 0 } } } },
   { MN_vroundpd, 0x08 | 1, 3, SPACE_0F3A, None,
     { 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
       0, 0, 0, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
@@ -30330,18 +30282,6 @@ static const insn_template i386_optab[] =
 	  1, 1, 0, 0, 1, 0 } },
       { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 	  1, 1, 0, 0, 0, 0 } } } },
-  { MN_vroundpd, 0x08 | 1, 3, SPACE_0F3A, None,
-    { 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
-      0, 0, 0, 0, 0, 2, 1, 0, 0, 5, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0,
-      0, 0 },
-    { { 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0 } },
-    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },
-    { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  0, 0, 0, 0, 0, 0 } },
-      { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
-	  1, 1, 0, 0, 1, 0 } },
-      { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  1, 1, 0, 0, 0, 0 } } } },
   { MN_vroundss, 0x0a | 0, 4, SPACE_0F3A, None,
     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
       0, 0, 0, 3, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
@@ -30356,20 +30296,6 @@ static const insn_template i386_optab[] =
 	  1, 0, 0, 0, 0, 0 } },
       { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 	  1, 0, 0, 0, 0, 0 } } } },
-  { MN_vroundss, 0x0a | 0, 4, SPACE_0F3A, None,
-    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
-      0, 0, 0, 0, 1, 1, 1, 0, 0, 4, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0,
-      0, 0 },
-    { { 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0 } },
-    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },
-    { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  0, 0, 0, 0, 0, 0 } },
-      { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0,
-	  0, 0, 0, 0, 1, 0 } },
-      { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  1, 0, 0, 0, 0, 0 } },
-      { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  1, 0, 0, 0, 0, 0 } } } },
   { MN_vroundsd, 0x0a | 1, 4, SPACE_0F3A, None,
     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
       0, 0, 0, 3, 1, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
@@ -30384,20 +30310,6 @@ static const insn_template i386_optab[] =
 	  1, 0, 0, 0, 0, 0 } },
       { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 	  1, 0, 0, 0, 0, 0 } } } },
-  { MN_vroundsd, 0x0a | 1, 4, SPACE_0F3A, None,
-    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
-      0, 0, 0, 0, 1, 2, 1, 0, 0, 4, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0,
-      0, 0 },
-    { { 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0 } },
-    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },
-    { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  0, 0, 0, 0, 0, 0 } },
-      { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0,
-	  0, 0, 0, 0, 1, 0 } },
-      { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  1, 0, 0, 0, 0, 0 } },
-      { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  1, 0, 0, 0, 0, 0 } } } },
   { MN_vrsqrtps, 0x52, 2, SPACE_0F, None,
     { 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
       0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
@@ -30898,16 +30810,6 @@ static const insn_template i386_optab[] =
 	  1, 0, 0, 0, 1, 0 } },
       { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 	  0, 1, 0, 0, 0, 0 } } } },
-  { MN_vbroadcasti128, 0x5a, 2, SPACE_0F38, None,
-    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
-      0, 0, 0, 0, 0, 1, 1, 0, 0, 3, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0,
-      0, 0 },
-    { { 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0 } },
-    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },
-    { { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
-	  1, 0, 0, 0, 1, 0 } },
-      { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  0, 1, 0, 0, 0, 0 } } } },
   { MN_vpblendd, 0x02, 4, SPACE_0F3A, None,
     { 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
       0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
@@ -31130,18 +31032,6 @@ static const insn_template i386_optab[] =
 	  0, 1, 0, 0, 0, 0 } },
       { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0,
 	  1, 0, 0, 0, 1, 0 } } } },
-  { MN_vextracti128, 0x39, 3, SPACE_0F3A, None,
-    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
-      0, 0, 0, 0, 0, 1, 1, 0, 0, 3, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0,
-      0, 0 },
-    { { 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0 } },
-    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },
-    { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  0, 0, 0, 0, 0, 0 } },
-      { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  0, 1, 0, 0, 0, 0 } },
-      { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
-	  1, 0, 0, 0, 1, 0 } } } },
   { MN_vinserti128, 0x38, 4, SPACE_0F3A, None,
     { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
       0, 0, 0, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
@@ -31156,20 +31046,6 @@ static const insn_template i386_optab[] =
 	  0, 1, 0, 0, 0, 0 } },
       { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 	  0, 1, 0, 0, 0, 0 } } } },
-  { MN_vinserti128, 0x38, 4, SPACE_0F3A, None,
-    { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
-      0, 0, 0, 0, 1, 1, 1, 0, 0, 3, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0,
-      0, 0 },
-    { { 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0 } },
-    { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } },
-    { { { 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  0, 0, 0, 0, 0, 0 } },
-      { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
-	  1, 0, 0, 0, 1, 0 } },
-      { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  0, 1, 0, 0, 0, 0 } },
-      { { 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-	  0, 1, 0, 0, 0, 0 } } } },
   { MN_vpmaskmovd, 0x8e, 3, SPACE_0F38, None,
     { 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,
       0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
@@ -46317,203 +46193,203 @@ static const i386_op_off_t i386_op_sets[] =
   2049, 2051, 2053, 2055, 2057, 2059, 2061, 2063,
   2065, 2067, 2069, 2071, 2073, 2075, 2077, 2079,
   2081, 2083, 2085, 2086, 2087, 2089, 2091, 2093,
-  2095, 2096, 2097, 2098, 2099, 2101, 2104, 2106,
-  2108, 2110, 2112, 2114, 2116, 2118, 2120, 2122,
-  2124, 2126, 2128, 2130, 2132, 2134, 2136, 2138,
-  2140, 2142, 2144, 2146, 2148, 2150, 2152, 2154,
-  2156, 2158, 2160, 2162, 2164, 2166, 2168, 2170,
-  2172, 2174, 2176, 2178, 2180, 2182, 2184, 2186,
-  2188, 2190, 2192, 2194, 2196, 2198, 2200, 2202,
-  2204, 2206, 2208, 2210, 2212, 2214, 2216, 2218,
-  2220, 2222, 2224, 2226, 2228, 2230, 2232, 2234,
-  2236, 2238, 2240, 2242, 2244, 2246, 2248, 2250,
-  2252, 2254, 2256, 2258, 2260, 2262, 2264, 2266,
-  2268, 2270, 2272, 2274, 2276, 2278, 2280, 2282,
-  2284, 2286, 2288, 2290, 2292, 2294, 2296, 2298,
-  2300, 2302, 2304, 2306, 2308, 2310, 2312, 2314,
-  2316, 2318, 2320, 2322, 2324, 2326, 2328, 2330,
-  2332, 2334, 2336, 2338, 2340, 2342, 2344, 2346,
-  2348, 2350, 2352, 2354, 2356, 2358, 2360, 2362,
-  2364, 2366, 2368, 2370, 2372, 2374, 2376, 2378,
-  2380, 2382, 2384, 2386, 2388, 2390, 2392, 2394,
-  2396, 2398, 2400, 2402, 2404, 2406, 2408, 2410,
-  2412, 2414, 2416, 2418, 2420, 2422, 2424, 2426,
-  2428, 2430, 2432, 2434, 2436, 2438, 2440, 2442,
-  2444, 2446, 2448, 2450, 2452, 2454, 2456, 2458,
-  2460, 2462, 2464, 2466, 2468, 2470, 2472, 2474,
-  2476, 2478, 2480, 2482, 2484, 2486, 2491, 2493,
-  2498, 2500, 2502, 2507, 2509, 2511, 2513, 2518,
-  2520, 2522, 2524, 2528, 2534, 2536, 2541, 2543,
-  2545, 2547, 2549, 2551, 2553, 2555, 2557, 2559,
-  2560, 2561, 2563, 2565, 2566, 2567, 2568, 2569,
-  2571, 2573, 2574, 2575, 2576, 2578, 2580, 2582,
-  2584, 2586, 2588, 2590, 2592, 2594, 2596, 2598,
-  2600, 2602, 2606, 2607, 2608, 2610, 2614, 2618,
-  2620, 2624, 2628, 2629, 2630, 2632, 2634, 2636,
-  2638, 2643, 2647, 2651, 2653, 2655, 2657, 2659,
-  2660, 2662, 2664, 2666, 2668, 2670, 2672, 2674,
-  2676, 2678, 2680, 2682, 2684, 2686, 2688, 2690,
-  2692, 2694, 2696, 2698, 2700, 2702, 2704, 2705,
-  2706, 2708, 2710, 2711, 2712, 2715, 2718, 2721,
-  2724, 2726, 2728, 2730, 2732, 2734, 2736, 2737,
-  2738, 2739, 2741, 2745, 2747, 2749, 2755, 2759,
-  2760, 2761, 2762, 2763, 2764, 2765, 2766, 2770,
-  2772, 2774, 2778, 2780, 2782, 2784, 2786, 2788,
-  2790, 2792, 2794, 2796, 2798, 2800, 2802, 2804,
-  2806, 2807, 2810, 2813, 2818, 2823, 2826, 2829,
-  2832, 2835, 2840, 2845, 2848, 2851, 2853, 2855,
-  2857, 2859, 2861, 2863, 2865, 2866, 2868, 2870,
-  2872, 2874, 2876, 2877, 2878, 2879, 2883, 2887,
-  2889, 2893, 2897, 2901, 2905, 2909, 2911, 2915,
-  2917, 2919, 2921, 2923, 2925, 2927, 2929, 2931,
-  2932, 2934, 2936, 2938, 2940, 2942, 2944, 2946,
-  2948, 2949, 2950, 2951, 2953, 2955, 2957, 2959,
-  2960, 2961, 2963, 2965, 2967, 2969, 2971, 2973,
-  2974, 2976, 2978, 2980, 2982, 2983, 2984, 2986,
-  2988, 2990, 2992, 2994, 2996, 2998, 3000, 3001,
-  3002, 3004, 3005, 3008, 3011, 3013, 3016, 3017,
-  3018, 3020, 3021, 3023, 3025, 3027, 3029, 3031,
-  3032, 3033, 3034, 3035, 3036, 3039, 3044, 3049,
-  3054, 3059, 3062, 3067, 3072, 3074, 3076, 3078,
-  3080, 3081, 3082, 3084, 3086, 3088, 3090, 3092,
-  3094, 3096, 3097, 3098, 3099, 3100, 3101, 3102,
-  3107, 3112, 3113, 3114, 3115, 3116, 3117, 3118,
-  3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126,
-  3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134,
-  3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142,
-  3143, 3144, 3145, 3146, 3147, 3148, 3149, 3150,
-  3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158,
-  3159, 3160, 3161, 3162, 3163, 3164, 3165, 3166,
-  3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174,
-  3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182,
-  3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190,
-  3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198,
-  3199, 3200, 3201, 3202, 3203, 3204, 3205, 3206,
-  3207, 3208, 3209, 3210, 3211, 3212, 3213, 3214,
-  3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222,
-  3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230,
-  3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238,
-  3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246,
-  3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254,
-  3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262,
-  3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270,
-  3271, 3272, 3273, 3274, 3275, 3276, 3277, 3278,
-  3279, 3280, 3281, 3282, 3283, 3284, 3285, 3286,
-  3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294,
-  3295, 3296, 3297, 3298, 3299, 3300, 3301, 3302,
-  3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310,
-  3311, 3312, 3313, 3315, 3317, 3318, 3319, 3320,
-  3321, 3322, 3323, 3324, 3325, 3326, 3327, 3328,
-  3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336,
-  3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344,
-  3345, 3347, 3349, 3351, 3353, 3354, 3355, 3356,
-  3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364,
-  3365, 3366, 3368, 3369, 3370, 3371, 3373, 3374,
-  3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382,
-  3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390,
-  3391, 3392, 3393, 3394, 3395, 3396, 3397, 3398,
-  3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406,
-  3407, 3408, 3409, 3410, 3411, 3412, 3413, 3414,
-  3416, 3418, 3419, 3420, 3422, 3423, 3425, 3427,
-  3428, 3429, 3431, 3433, 3435, 3437, 3438, 3439,
-  3440, 3441, 3442, 3443, 3444, 3445, 3446, 3447,
-  3448, 3449, 3450, 3451, 3452, 3453, 3456, 3459,
-  3460, 3461, 3462, 3463, 3464, 3465, 3467, 3469,
-  3471, 3472, 3473, 3474, 3475, 3476, 3477, 3479,
-  3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487,
-  3488, 3489, 3490, 3491, 3492, 3493, 3494, 3495,
-  3496, 3497, 3498, 3499, 3502, 3505, 3506, 3507,
-  3508, 3509, 3510, 3511, 3512, 3513, 3514, 3515,
-  3516, 3517, 3518, 3519, 3520, 3521, 3522, 3523,
-  3524, 3525, 3526, 3527, 3528, 3529, 3530, 3531,
-  3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539,
-  3540, 3541, 3542, 3543, 3544, 3545, 3546, 3547,
-  3548, 3549, 3550, 3551, 3552, 3553, 3554, 3555,
-  3556, 3557, 3558, 3559, 3562, 3564, 3567, 3570,
-  3572, 3575, 3578, 3581, 3584, 3585, 3588, 3589,
-  3590, 3591, 3592, 3593, 3597, 3599, 3602, 3603,
-  3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611,
-  3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619,
-  3620, 3621, 3622, 3623, 3624, 3625, 3626, 3627,
-  3628, 3629, 3630, 3631, 3632, 3633, 3634, 3635,
-  3636, 3637, 3638, 3639, 3640, 3641, 3642, 3643,
-  3644, 3645, 3646, 3647, 3648, 3649, 3650, 3651,
-  3652, 3653, 3654, 3655, 3656, 3657, 3659, 3660,
-  3661, 3662, 3663, 3664, 3665, 3666, 3667, 3668,
-  3669, 3670, 3671, 3672, 3673, 3674, 3675, 3676,
-  3677, 3678, 3679, 3680, 3681, 3682, 3683, 3684,
-  3685, 3686, 3687, 3688, 3689, 3690, 3691, 3692,
-  3693, 3694, 3695, 3696, 3697, 3698, 3701, 3704,
-  3707, 3710, 3713, 3716, 3719, 3722, 3725, 3728,
-  3731, 3734, 3737, 3740, 3743, 3744, 3745, 3746,
-  3747, 3749, 3750, 3751, 3752, 3753, 3754, 3755,
-  3756, 3757, 3758, 3759, 3760, 3761, 3762, 3763,
-  3764, 3765, 3766, 3767, 3768, 3769, 3770, 3771,
-  3772, 3773, 3774, 3775, 3776, 3777, 3778, 3779,
-  3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787,
-  3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795,
-  3796, 3797, 3798, 3799, 3800, 3801, 3802, 3803,
-  3804, 3805, 3806, 3807, 3808, 3809, 3810, 3813,
-  3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823,
-  3824, 3825, 3826, 3827, 3828, 3829, 3830, 3831,
-  3832, 3833, 3834, 3835, 3836, 3837, 3838, 3839,
-  3840, 3841, 3842, 3843, 3844, 3845, 3846, 3847,
-  3848, 3849, 3850, 3851, 3852, 3853, 3854, 3855,
-  3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863,
-  3864, 3865, 3866, 3867, 3868, 3869, 3870, 3871,
-  3872, 3873, 3874, 3875, 3876, 3877, 3878, 3881,
-  3884, 3887, 3888, 3889, 3890, 3891, 3892, 3893,
-  3894, 3895, 3896, 3897, 3898, 3899, 3900, 3901,
-  3902, 3903, 3906, 3909, 3910, 3911, 3914, 3915,
-  3916, 3917, 3918, 3921, 3924, 3927, 3928, 3929,
-  3930, 3931, 3932, 3933, 3934, 3935, 3936, 3937,
-  3939, 3941, 3942, 3943, 3944, 3945, 3946, 3947,
-  3948, 3949, 3950, 3951, 3952, 3953, 3954, 3955,
-  3956, 3957, 3958, 3959, 3960, 3961, 3962, 3963,
-  3964, 3965, 3966, 3968, 3970, 3971, 3972, 3973,
-  3974, 3975, 3976, 3977, 3978, 3979, 3980, 3981,
-  3982, 3983, 3984, 3985, 3986, 3987, 3988, 3989,
-  3990, 3991, 3992, 3993, 3994, 3995, 3997, 3999,
-  4001, 4003, 4004, 4005, 4006, 4007, 4008, 4009,
-  4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017,
-  4018, 4020, 4021, 4023, 4026, 4028, 4029, 4030,
-  4032, 4034, 4035, 4036, 4037, 4038, 4039, 4040,
-  4042, 4044, 4046, 4048, 4049, 4050, 4051, 4052,
-  4053, 4054, 4055, 4056, 4057, 4059, 4061, 4062,
-  4064, 4066, 4067, 4072, 4074, 4076, 4077, 4078,
-  4079, 4080, 4081, 4082, 4083, 4085, 4087, 4088,
-  4089, 4090, 4092, 4095, 4098, 4101, 4103, 4104,
-  4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112,
-  4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120,
-  4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128,
-  4129, 4130, 4131, 4132, 4133, 4134, 4135, 4136,
-  4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144,
-  4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152,
-  4153, 4154, 4155, 4156, 4157, 4158, 4159, 4160,
-  4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168,
-  4169, 4170, 4171, 4172, 4173, 4174, 4175, 4176,
-  4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184,
-  4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192,
-  4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200,
-  4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208,
-  4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216,
-  4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224,
-  4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232,
-  4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240,
-  4241, 4242, 4243, 4244, 4245, 4248, 4249, 4250,
-  4253, 4254, 4255, 4257, 4258, 4259, 4260, 4262,
-  4263, 4264, 4265, 4267, 4268, 4269, 4270, 4273,
-  4274, 4275, 4276, 4277, 4280, 4283, 4286, 4289,
-  4292, 4293, 4294, 4295, 4296, 4298, 4300, 4301,
-  4302, 4303, 4306, 4309, 4312, 4315, 4318, 4319,
-  4320, 4321, 4323, 4324, 4325, 4326, 4328, 4329,
-  4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337,
-  4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345,
-  4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353,
-  4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361,
-  4362, 4363, 4364, 4365, 4366, 4367, 4369, 4371,
-  4373, 4375, 4377, 4378, 4379, 4382, 4385, 4386,
-  4387, 4388, 4389
+  2095, 2096, 2097, 2098, 2099, 2100, 2103, 2105,
+  2107, 2109, 2111, 2113, 2115, 2117, 2119, 2121,
+  2123, 2125, 2127, 2129, 2131, 2133, 2135, 2137,
+  2139, 2141, 2143, 2145, 2147, 2149, 2151, 2153,
+  2155, 2157, 2159, 2161, 2163, 2165, 2167, 2169,
+  2171, 2173, 2175, 2177, 2179, 2181, 2183, 2185,
+  2187, 2189, 2191, 2193, 2195, 2197, 2199, 2201,
+  2203, 2205, 2207, 2209, 2211, 2213, 2215, 2217,
+  2219, 2221, 2223, 2225, 2227, 2229, 2231, 2233,
+  2235, 2237, 2239, 2241, 2243, 2245, 2247, 2249,
+  2251, 2253, 2255, 2257, 2259, 2261, 2263, 2265,
+  2267, 2269, 2271, 2273, 2275, 2277, 2279, 2281,
+  2283, 2285, 2287, 2289, 2291, 2293, 2295, 2297,
+  2299, 2301, 2303, 2305, 2307, 2309, 2311, 2313,
+  2315, 2317, 2319, 2321, 2323, 2325, 2327, 2329,
+  2331, 2333, 2335, 2337, 2339, 2341, 2343, 2345,
+  2347, 2349, 2351, 2353, 2355, 2357, 2359, 2361,
+  2363, 2365, 2367, 2369, 2371, 2373, 2375, 2377,
+  2379, 2381, 2383, 2385, 2387, 2389, 2391, 2393,
+  2395, 2397, 2399, 2401, 2403, 2405, 2407, 2409,
+  2411, 2413, 2415, 2417, 2419, 2421, 2423, 2425,
+  2427, 2429, 2431, 2433, 2435, 2437, 2439, 2441,
+  2443, 2445, 2447, 2449, 2451, 2453, 2455, 2457,
+  2459, 2461, 2463, 2465, 2467, 2469, 2471, 2473,
+  2475, 2477, 2479, 2481, 2483, 2485, 2490, 2492,
+  2497, 2499, 2501, 2506, 2508, 2510, 2512, 2517,
+  2519, 2521, 2523, 2527, 2533, 2535, 2540, 2542,
+  2544, 2546, 2548, 2550, 2552, 2554, 2556, 2558,
+  2559, 2560, 2561, 2563, 2564, 2565, 2566, 2567,
+  2568, 2570, 2571, 2572, 2573, 2575, 2577, 2579,
+  2581, 2583, 2585, 2587, 2589, 2591, 2593, 2595,
+  2597, 2599, 2603, 2604, 2605, 2607, 2611, 2615,
+  2617, 2621, 2625, 2626, 2627, 2629, 2631, 2633,
+  2635, 2640, 2644, 2648, 2650, 2652, 2654, 2656,
+  2657, 2659, 2661, 2663, 2665, 2667, 2669, 2671,
+  2673, 2675, 2677, 2679, 2681, 2683, 2685, 2687,
+  2689, 2691, 2693, 2695, 2697, 2699, 2701, 2702,
+  2703, 2705, 2707, 2708, 2709, 2712, 2715, 2718,
+  2721, 2723, 2725, 2727, 2729, 2731, 2733, 2734,
+  2735, 2736, 2738, 2742, 2744, 2746, 2752, 2756,
+  2757, 2758, 2759, 2760, 2761, 2762, 2763, 2767,
+  2769, 2771, 2775, 2777, 2779, 2781, 2783, 2785,
+  2787, 2789, 2791, 2793, 2795, 2797, 2799, 2801,
+  2803, 2804, 2807, 2810, 2815, 2820, 2823, 2826,
+  2829, 2832, 2837, 2842, 2845, 2848, 2850, 2852,
+  2854, 2856, 2858, 2860, 2862, 2863, 2865, 2867,
+  2869, 2871, 2873, 2874, 2875, 2876, 2880, 2884,
+  2886, 2890, 2894, 2898, 2902, 2906, 2908, 2912,
+  2914, 2916, 2918, 2920, 2922, 2924, 2926, 2928,
+  2929, 2931, 2933, 2935, 2937, 2939, 2941, 2943,
+  2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952,
+  2953, 2954, 2956, 2958, 2960, 2962, 2964, 2966,
+  2967, 2969, 2971, 2973, 2975, 2976, 2977, 2979,
+  2981, 2983, 2985, 2987, 2989, 2991, 2993, 2994,
+  2995, 2996, 2997, 3000, 3003, 3005, 3008, 3009,
+  3010, 3012, 3013, 3015, 3016, 3017, 3019, 3021,
+  3022, 3023, 3024, 3025, 3026, 3029, 3034, 3039,
+  3044, 3049, 3052, 3057, 3062, 3064, 3066, 3068,
+  3070, 3071, 3072, 3074, 3076, 3078, 3080, 3082,
+  3084, 3086, 3087, 3088, 3089, 3090, 3091, 3092,
+  3097, 3102, 3103, 3104, 3105, 3106, 3107, 3108,
+  3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116,
+  3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124,
+  3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132,
+  3133, 3134, 3135, 3136, 3137, 3138, 3139, 3140,
+  3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148,
+  3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156,
+  3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164,
+  3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172,
+  3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180,
+  3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188,
+  3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196,
+  3197, 3198, 3199, 3200, 3201, 3202, 3203, 3204,
+  3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212,
+  3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220,
+  3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228,
+  3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236,
+  3237, 3238, 3239, 3240, 3241, 3242, 3243, 3244,
+  3245, 3246, 3247, 3248, 3249, 3250, 3251, 3252,
+  3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260,
+  3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268,
+  3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276,
+  3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284,
+  3285, 3286, 3287, 3288, 3289, 3290, 3291, 3292,
+  3293, 3294, 3295, 3296, 3297, 3298, 3299, 3300,
+  3301, 3302, 3303, 3305, 3307, 3308, 3309, 3310,
+  3311, 3312, 3313, 3314, 3315, 3316, 3317, 3318,
+  3319, 3320, 3321, 3322, 3323, 3324, 3325, 3326,
+  3327, 3328, 3329, 3330, 3331, 3332, 3333, 3334,
+  3335, 3337, 3339, 3341, 3343, 3344, 3345, 3346,
+  3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354,
+  3355, 3356, 3358, 3359, 3360, 3361, 3363, 3364,
+  3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372,
+  3373, 3374, 3375, 3376, 3377, 3378, 3379, 3380,
+  3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388,
+  3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396,
+  3397, 3398, 3399, 3400, 3401, 3402, 3403, 3404,
+  3406, 3408, 3409, 3410, 3412, 3413, 3415, 3417,
+  3418, 3419, 3421, 3423, 3425, 3427, 3428, 3429,
+  3430, 3431, 3432, 3433, 3434, 3435, 3436, 3437,
+  3438, 3439, 3440, 3441, 3442, 3443, 3446, 3449,
+  3450, 3451, 3452, 3453, 3454, 3455, 3457, 3459,
+  3461, 3462, 3463, 3464, 3465, 3466, 3467, 3469,
+  3470, 3471, 3472, 3473, 3474, 3475, 3476, 3477,
+  3478, 3479, 3480, 3481, 3482, 3483, 3484, 3485,
+  3486, 3487, 3488, 3489, 3492, 3495, 3496, 3497,
+  3498, 3499, 3500, 3501, 3502, 3503, 3504, 3505,
+  3506, 3507, 3508, 3509, 3510, 3511, 3512, 3513,
+  3514, 3515, 3516, 3517, 3518, 3519, 3520, 3521,
+  3522, 3523, 3524, 3525, 3526, 3527, 3528, 3529,
+  3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537,
+  3538, 3539, 3540, 3541, 3542, 3543, 3544, 3545,
+  3546, 3547, 3548, 3549, 3552, 3554, 3557, 3560,
+  3562, 3565, 3568, 3571, 3574, 3575, 3578, 3579,
+  3580, 3581, 3582, 3583, 3587, 3589, 3592, 3593,
+  3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601,
+  3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609,
+  3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617,
+  3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625,
+  3626, 3627, 3628, 3629, 3630, 3631, 3632, 3633,
+  3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641,
+  3642, 3643, 3644, 3645, 3646, 3647, 3649, 3650,
+  3651, 3652, 3653, 3654, 3655, 3656, 3657, 3658,
+  3659, 3660, 3661, 3662, 3663, 3664, 3665, 3666,
+  3667, 3668, 3669, 3670, 3671, 3672, 3673, 3674,
+  3675, 3676, 3677, 3678, 3679, 3680, 3681, 3682,
+  3683, 3684, 3685, 3686, 3687, 3688, 3691, 3694,
+  3697, 3700, 3703, 3706, 3709, 3712, 3715, 3718,
+  3721, 3724, 3727, 3730, 3733, 3734, 3735, 3736,
+  3737, 3739, 3740, 3741, 3742, 3743, 3744, 3745,
+  3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753,
+  3754, 3755, 3756, 3757, 3758, 3759, 3760, 3761,
+  3762, 3763, 3764, 3765, 3766, 3767, 3768, 3769,
+  3770, 3771, 3772, 3773, 3774, 3775, 3776, 3777,
+  3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785,
+  3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793,
+  3794, 3795, 3796, 3797, 3798, 3799, 3800, 3803,
+  3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813,
+  3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821,
+  3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829,
+  3830, 3831, 3832, 3833, 3834, 3835, 3836, 3837,
+  3838, 3839, 3840, 3841, 3842, 3843, 3844, 3845,
+  3846, 3847, 3848, 3849, 3850, 3851, 3852, 3853,
+  3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861,
+  3862, 3863, 3864, 3865, 3866, 3867, 3868, 3871,
+  3874, 3877, 3878, 3879, 3880, 3881, 3882, 3883,
+  3884, 3885, 3886, 3887, 3888, 3889, 3890, 3891,
+  3892, 3893, 3896, 3899, 3900, 3901, 3904, 3905,
+  3906, 3907, 3908, 3911, 3914, 3917, 3918, 3919,
+  3920, 3921, 3922, 3923, 3924, 3925, 3926, 3927,
+  3929, 3931, 3932, 3933, 3934, 3935, 3936, 3937,
+  3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945,
+  3946, 3947, 3948, 3949, 3950, 3951, 3952, 3953,
+  3954, 3955, 3956, 3958, 3960, 3961, 3962, 3963,
+  3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971,
+  3972, 3973, 3974, 3975, 3976, 3977, 3978, 3979,
+  3980, 3981, 3982, 3983, 3984, 3985, 3987, 3989,
+  3991, 3993, 3994, 3995, 3996, 3997, 3998, 3999,
+  4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007,
+  4008, 4010, 4011, 4013, 4016, 4018, 4019, 4020,
+  4022, 4024, 4025, 4026, 4027, 4028, 4029, 4030,
+  4032, 4034, 4036, 4038, 4039, 4040, 4041, 4042,
+  4043, 4044, 4045, 4046, 4047, 4049, 4051, 4052,
+  4054, 4056, 4057, 4062, 4064, 4066, 4067, 4068,
+  4069, 4070, 4071, 4072, 4073, 4075, 4077, 4078,
+  4079, 4080, 4082, 4085, 4088, 4091, 4093, 4094,
+  4095, 4096, 4097, 4098, 4099, 4100, 4101, 4102,
+  4103, 4104, 4105, 4106, 4107, 4108, 4109, 4110,
+  4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118,
+  4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126,
+  4127, 4128, 4129, 4130, 4131, 4132, 4133, 4134,
+  4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142,
+  4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150,
+  4151, 4152, 4153, 4154, 4155, 4156, 4157, 4158,
+  4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166,
+  4167, 4168, 4169, 4170, 4171, 4172, 4173, 4174,
+  4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182,
+  4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190,
+  4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198,
+  4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206,
+  4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214,
+  4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222,
+  4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230,
+  4231, 4232, 4233, 4234, 4235, 4238, 4239, 4240,
+  4243, 4244, 4245, 4247, 4248, 4249, 4250, 4252,
+  4253, 4254, 4255, 4257, 4258, 4259, 4260, 4263,
+  4264, 4265, 4266, 4267, 4270, 4273, 4276, 4279,
+  4282, 4283, 4284, 4285, 4286, 4288, 4290, 4291,
+  4292, 4293, 4296, 4299, 4302, 4305, 4308, 4309,
+  4310, 4311, 4313, 4314, 4315, 4316, 4318, 4319,
+  4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327,
+  4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335,
+  4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343,
+  4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351,
+  4352, 4353, 4354, 4355, 4356, 4357, 4359, 4361,
+  4363, 4365, 4367, 4368, 4369, 4372, 4375, 4376,
+  4377, 4378, 4379
 };
 
 /* i386 mnemonics table.  */
diff --git a/opcodes/mips-formats.h b/opcodes/mips-formats.h
index 90df7100803..c4dec6352bf 100644
--- a/opcodes/mips-formats.h
+++ b/opcodes/mips-formats.h
@@ -49,7 +49,7 @@
 #define MAPPED_INT(SIZE, LSB, MAP, PRINT_HEX) \
   { \
     typedef char ATTRIBUTE_UNUSED \
-      static_assert[(1 << (SIZE)) == ARRAY_SIZE (MAP)]; \
+      static_assert_3[(1 << (SIZE)) == ARRAY_SIZE (MAP)]; \
     static const struct mips_mapped_int_operand op = { \
       { OP_MAPPED_INT, SIZE, LSB }, MAP, PRINT_HEX \
     }; \
@@ -83,7 +83,7 @@
 #define MAPPED_REG(SIZE, LSB, BANK, MAP) \
   { \
     typedef char ATTRIBUTE_UNUSED \
-      static_assert[(1 << (SIZE)) == ARRAY_SIZE (MAP)]; \
+      static_assert_4[(1 << (SIZE)) == ARRAY_SIZE (MAP)]; \
     static const struct mips_reg_operand op = { \
       { OP_REG, SIZE, LSB }, OP_REG_##BANK, MAP \
     }; \
@@ -93,7 +93,7 @@
 #define OPTIONAL_MAPPED_REG(SIZE, LSB, BANK, MAP) \
   { \
     typedef char ATTRIBUTE_UNUSED \
-      static_assert[(1 << (SIZE)) == ARRAY_SIZE (MAP)]; \
+      static_assert_5[(1 << (SIZE)) == ARRAY_SIZE (MAP)]; \
     static const struct mips_reg_operand op = { \
       { OP_OPTIONAL_REG, SIZE, LSB }, OP_REG_##BANK, MAP \
     }; \
diff --git a/opcodes/po/opcodes.pot b/opcodes/po/opcodes.pot
index 2eb0162775d..44f8f47a013 100644
--- a/opcodes/po/opcodes.pot
+++ b/opcodes/po/opcodes.pot
@@ -8,7 +8,7 @@ msgid ""
 msgstr ""
 "Project-Id-Version: PACKAGE VERSION\n"
 "Report-Msgid-Bugs-To: https://sourceware.org/bugzilla/\n"
-"POT-Creation-Date: 2024-08-04 14:00+0100\n"
+"POT-Creation-Date: 2024-08-17 17:40+0100\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
diff --git a/opcodes/riscv-opc.c b/opcodes/riscv-opc.c
index 14ec2903cdd..e6831bda9fd 100644
--- a/opcodes/riscv-opc.c
+++ b/opcodes/riscv-opc.c
@@ -1124,6 +1124,48 @@ const struct riscv_opcode riscv_opcodes[] =
 {"czero.eqz",  0, INSN_CLASS_ZICOND, "d,s,t", MATCH_CZERO_EQZ, MASK_CZERO_EQZ, match_opcode, 0 },
 {"czero.nez",  0, INSN_CLASS_ZICOND, "d,s,t", MATCH_CZERO_NEZ, MASK_CZERO_NEZ, match_opcode, 0 },
 
+/* Zimop instructions.  */
+{"mop.r.0",    0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_0,  MASK_MOP_R_0,  match_opcode, 0 },
+{"mop.r.1",    0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_1,  MASK_MOP_R_1,  match_opcode, 0 },
+{"mop.r.2",    0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_2,  MASK_MOP_R_2,  match_opcode, 0 },
+{"mop.r.3",    0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_3,  MASK_MOP_R_3,  match_opcode, 0 },
+{"mop.r.4",    0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_4,  MASK_MOP_R_4,  match_opcode, 0 },
+{"mop.r.5",    0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_5,  MASK_MOP_R_5,  match_opcode, 0 },
+{"mop.r.6",    0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_6,  MASK_MOP_R_6,  match_opcode, 0 },
+{"mop.r.7",    0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_7,  MASK_MOP_R_7,  match_opcode, 0 },
+{"mop.r.8",    0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_8,  MASK_MOP_R_8,  match_opcode, 0 },
+{"mop.r.9",    0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_9,  MASK_MOP_R_9,  match_opcode, 0 },
+{"mop.r.10",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_10, MASK_MOP_R_10, match_opcode, 0 },
+{"mop.r.11",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_11, MASK_MOP_R_11, match_opcode, 0 },
+{"mop.r.12",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_12, MASK_MOP_R_12, match_opcode, 0 },
+{"mop.r.13",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_13, MASK_MOP_R_13, match_opcode, 0 },
+{"mop.r.14",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_14, MASK_MOP_R_14, match_opcode, 0 },
+{"mop.r.15",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_15, MASK_MOP_R_15, match_opcode, 0 },
+{"mop.r.16",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_16, MASK_MOP_R_16, match_opcode, 0 },
+{"mop.r.17",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_17, MASK_MOP_R_17, match_opcode, 0 },
+{"mop.r.18",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_18, MASK_MOP_R_18, match_opcode, 0 },
+{"mop.r.19",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_19, MASK_MOP_R_19, match_opcode, 0 },
+{"mop.r.20",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_20, MASK_MOP_R_20, match_opcode, 0 },
+{"mop.r.21",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_21, MASK_MOP_R_21, match_opcode, 0 },
+{"mop.r.22",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_22, MASK_MOP_R_22, match_opcode, 0 },
+{"mop.r.23",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_23, MASK_MOP_R_23, match_opcode, 0 },
+{"mop.r.24",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_24, MASK_MOP_R_24, match_opcode, 0 },
+{"mop.r.25",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_25, MASK_MOP_R_25, match_opcode, 0 },
+{"mop.r.26",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_26, MASK_MOP_R_26, match_opcode, 0 },
+{"mop.r.27",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_27, MASK_MOP_R_27, match_opcode, 0 },
+{"mop.r.28",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_28, MASK_MOP_R_28, match_opcode, 0 },
+{"mop.r.29",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_29, MASK_MOP_R_29, match_opcode, 0 },
+{"mop.r.30",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_30, MASK_MOP_R_30, match_opcode, 0 },
+{"mop.r.31",   0, INSN_CLASS_ZIMOP, "d,s",    MATCH_MOP_R_31, MASK_MOP_R_31, match_opcode, 0 },
+{"mop.rr.0",   0, INSN_CLASS_ZIMOP, "d,s,t",  MATCH_MOP_RR_0, MASK_MOP_RR_0, match_opcode, 0 },
+{"mop.rr.1",   0, INSN_CLASS_ZIMOP, "d,s,t",  MATCH_MOP_RR_1, MASK_MOP_RR_1, match_opcode, 0 },
+{"mop.rr.2",   0, INSN_CLASS_ZIMOP, "d,s,t",  MATCH_MOP_RR_2, MASK_MOP_RR_2, match_opcode, 0 },
+{"mop.rr.3",   0, INSN_CLASS_ZIMOP, "d,s,t",  MATCH_MOP_RR_3, MASK_MOP_RR_3, match_opcode, 0 },
+{"mop.rr.4",   0, INSN_CLASS_ZIMOP, "d,s,t",  MATCH_MOP_RR_4, MASK_MOP_RR_4, match_opcode, 0 },
+{"mop.rr.5",   0, INSN_CLASS_ZIMOP, "d,s,t",  MATCH_MOP_RR_5, MASK_MOP_RR_5, match_opcode, 0 },
+{"mop.rr.6",   0, INSN_CLASS_ZIMOP, "d,s,t",  MATCH_MOP_RR_6, MASK_MOP_RR_6, match_opcode, 0 },
+{"mop.rr.7",   0, INSN_CLASS_ZIMOP, "d,s,t",  MATCH_MOP_RR_7, MASK_MOP_RR_7, match_opcode, 0 },
+
 /* Zawrs instructions.  */
 {"wrs.nto",    0, INSN_CLASS_ZAWRS, "", MATCH_WRS_NTO, MASK_WRS_NTO, match_opcode, 0 },
 {"wrs.sto",    0, INSN_CLASS_ZAWRS, "", MATCH_WRS_STO, MASK_WRS_STO, match_opcode, 0 },
@@ -2129,6 +2171,16 @@ const struct riscv_opcode riscv_opcodes[] =
 {"c.zext.b",   0, INSN_CLASS_ZCB, "Cs",  MATCH_C_ZEXT_B, MASK_C_ZEXT_B, match_opcode, 0 },
 {"c.sext.w",  64, INSN_CLASS_ZCB, "d",  MATCH_C_ADDIW, MASK_C_ADDIW|MASK_RVC_IMM, match_rd_nonzero, INSN_ALIAS },
 
+/* Zcmop instructions.  */
+{"c.mop.1",     0,  INSN_CLASS_ZCMOP, "",  MATCH_C_MOP_1,  MASK_C_MOP_1, match_opcode, 0 },
+{"c.mop.3",     0,  INSN_CLASS_ZCMOP, "",  MATCH_C_MOP_3,  MASK_C_MOP_3, match_opcode, 0 },
+{"c.mop.5",     0,  INSN_CLASS_ZCMOP, "",  MATCH_C_MOP_5,  MASK_C_MOP_5, match_opcode, 0 },
+{"c.mop.7",     0,  INSN_CLASS_ZCMOP, "",  MATCH_C_MOP_7,  MASK_C_MOP_7, match_opcode, 0 },
+{"c.mop.9",     0,  INSN_CLASS_ZCMOP, "",  MATCH_C_MOP_9,  MASK_C_MOP_9, match_opcode, 0 },
+{"c.mop.11",    0,  INSN_CLASS_ZCMOP, "",  MATCH_C_MOP_11, MASK_C_MOP_11, match_opcode, 0 },
+{"c.mop.13",    0,  INSN_CLASS_ZCMOP, "",  MATCH_C_MOP_13, MASK_C_MOP_13, match_opcode, 0 },
+{"c.mop.15",    0,  INSN_CLASS_ZCMOP, "",  MATCH_C_MOP_15, MASK_C_MOP_15, match_opcode, 0 },
+
 /* Zcmp instructions.  */
 {"cm.push",    0,  INSN_CLASS_ZCMP, "{Wcr},Wcp",  MATCH_CM_PUSH, MASK_CM_PUSH, match_opcode, 0 },
 {"cm.pop",     0,  INSN_CLASS_ZCMP, "{Wcr},Wcp",  MATCH_CM_POP, MASK_CM_POP, match_opcode, 0 },
diff --git a/opcodes/s390-dis.c b/opcodes/s390-dis.c
index ee2f2cb62ed..852d2f6ebb9 100644
--- a/opcodes/s390-dis.c
+++ b/opcodes/s390-dis.c
@@ -299,12 +299,14 @@ s390_print_insn_with_opcode (bfd_vma memaddr,
 	{
 	  enum disassembler_style style;
 
-	  if (flags & S390_OPERAND_OR1)
-	    val.u &= ~1;
-	  if (flags & S390_OPERAND_OR2)
-	    val.u &= ~2;
-	  if (flags & S390_OPERAND_OR8)
-	    val.u &= ~8;
+	  if (!(flags & S390_OPERAND_LENGTH))
+	    {
+	      union operand_value insn_opval;
+
+	      /* Mask any constant operand bits set in insn template.  */
+	      insn_opval = s390_extract_operand (opcode->opcode, operand);
+	      val.u &= ~insn_opval.u;
+	    }
 
 	  if ((opcode->flags & S390_INSTR_FLAG_OPTPARM)
 	      && val.u == 0
diff --git a/opcodes/s390-mkopc.c b/opcodes/s390-mkopc.c
index 1f5729a3db0..825188407ee 100644
--- a/opcodes/s390-mkopc.c
+++ b/opcodes/s390-mkopc.c
@@ -443,6 +443,8 @@ main (void)
       else if (strcmp (cpu_string, "z16") == 0
 	       || strcmp (cpu_string, "arch14") == 0)
 	min_cpu = S390_OPCODE_ARCH14;
+      else if (strcmp (cpu_string, "arch15") == 0)
+	min_cpu = S390_OPCODE_ARCH15;
       else {
 	print_error ("Mnemonic \"%s\": Couldn't parse CPU string: %s\n",
 		     mnemonic, cpu_string);
diff --git a/opcodes/s390-opc.c b/opcodes/s390-opc.c
index 10482fbc1e0..23c1c3a24e5 100644
--- a/opcodes/s390-opc.c
+++ b/opcodes/s390-opc.c
@@ -36,7 +36,9 @@
 
 /* Build-time checks are preferrable over runtime ones.  Use this construct
    in preference where possible.  */
+#ifndef static_assert
 #define static_assert(e) ((void)sizeof (struct { int _:1 - 2 * !(e); }))
+#endif
 
 #define ARRAY_SIZE(a) (sizeof(a) / sizeof((a)[0]))
 
@@ -208,31 +210,17 @@ const struct s390_operand s390_operands[] =
   { 4, 20, 0 },
 #define U4_24       (U4_20 + 1)   /* 4 bit unsigned value starting at 24 */
   { 4, 24, 0 },
-#define U4_OR1_24   (U4_24 + 1)   /* 4 bit unsigned value ORed with 1 */
-  { 4, 24, S390_OPERAND_OR1 },	  /* starting at 24 */
-#define U4_OR2_24   (U4_OR1_24+1) /* 4 bit unsigned value ORed with 2 */
-  { 4, 24, S390_OPERAND_OR2 },    /* starting at 24 */
-#define U4_OR3_24   (U4_OR2_24+1) /* 4 bit unsigned value ORed with 3 */
-  { 4, 24, S390_OPERAND_OR1 | S390_OPERAND_OR2 }, /* starting at 24 */
-#define U4_28       (U4_OR3_24+1) /* 4 bit unsigned value starting at 28 */
+#define U4_28       (U4_24+1)     /* 4 bit unsigned value starting at 28 */
   { 4, 28, 0 },
-#define U4_OR8_28   (U4_28 + 1)   /* 4 bit unsigned value ORed with 8 */
-  { 4, 28, S390_OPERAND_OR8 },    /* starting at 28 */
-#define U4_32       (U4_OR8_28+1) /* 4 bit unsigned value starting at 32 */
+#define U4_32       (U4_28+1)     /* 4 bit unsigned value starting at 32 */
   { 4, 32, 0 },
 #define U4_36       (U4_32 + 1)   /* 4 bit unsigned value starting at 36 */
   { 4, 36, 0 },
 #define U8_8        (U4_36 + 1)   /* 8 bit unsigned value starting at 8 */
   { 8, 8, 0 },
-#define U6_18       (U8_8 + 1)    /* 6 bit unsigned value starting at 18 */
-  { 6, 18, 0 },
-#define U8_16       (U6_18 + 1)   /* 8 bit unsigned value starting at 16 */
+#define U8_16       (U8_8 + 1)    /* 8 bit unsigned value starting at 16 */
   { 8, 16, 0 },
-#define U5_27       (U8_16 + 1)   /* 5 bit unsigned value starting at 27 */
-  { 5, 27, 0 },
-#define U6_26       (U5_27 + 1)   /* 6 bit unsigned value starting at 26 */
-  { 6, 26, 0 },
-#define U8_24       (U6_26 + 1)   /* 8 bit unsigned value starting at 24 */
+#define U8_24       (U8_16 + 1)   /* 8 bit unsigned value starting at 24 */
   { 8, 24, 0 },
 #define U8_28       (U8_24 + 1)   /* 8 bit unsigned value starting at 28 */
   { 8, 28, 0 },
@@ -242,7 +230,9 @@ const struct s390_operand s390_operands[] =
   { 12, 16, 0 },
 #define U16_16      (U12_16 + 1)  /* 16 bit unsigned value starting at 16 */
   { 16, 16, 0 },
-#define U16_32      (U16_16 + 1)  /* 16 bit unsigned value starting at 32 */
+#define U16_20      (U16_16 + 1)  /* 16 bit unsigned value starting at 20 */
+  { 16, 20, 0 },
+#define U16_32      (U16_20 + 1)  /* 16 bit unsigned value starting at 32 */
   { 16, 32, 0 },
 #define U32_16      (U16_32 + 1)  /* 32 bit unsigned value starting at 16 */
   { 32, 16, 0 },
@@ -296,7 +286,7 @@ unused_s390_operands_static_asserts (void)
       p - pc relative
       r - general purpose register
       re - gpr extended operand, a valid general purpose register pair
-      u - unsigned integer, 4, 6, 8, 16 or 32 bit
+      u - unsigned integer, 4, 8, 16 or 32 bit
       m - mode field, 4 bit
       0 - operand skipped.
       The order of the letters reflects the layout of the format in
@@ -332,9 +322,9 @@ unused_s390_operands_static_asserts (void)
 #define INSTR_RIE_R0U0     6, { R_8,U16_16,0,0,0,0 }             /* e.g. clfitne */
 #define INSTR_RIE_RUI0     6, { R_8,I16_16,U4_12,0,0,0 }         /* e.g. lochi */
 #define INSTR_RIE_RRUUU    6, { R_8,R_12,U8_16,U8_24,U8_32,0 }   /* e.g. rnsbg */
-#define INSTR_RIE_RRUUU2   6, { R_8,R_12,U8_16,U6_26,U8_32,0 }   /* e.g. risbgz */
-#define INSTR_RIE_RRUUU3   6, { R_8,R_12,U8_16,U5_27,U8_32,0 }   /* e.g. risbhg */
-#define INSTR_RIE_RRUUU4   6, { R_8,R_12,U6_18,U8_24,U8_32,0 }   /* e.g. rnsbgt */
+#define INSTR_RIE_RRUUU2   INSTR_RIE_RRUUU                       /* e.g. risbgz */
+#define INSTR_RIE_RRUUU3   INSTR_RIE_RRUUU                       /* e.g. risbhg */
+#define INSTR_RIE_RRUUU4   INSTR_RIE_RRUUU                       /* e.g. rnsbgt */
 #define INSTR_RIL_0P       6, { J32_16,0,0,0,0 }                 /* e.g. jg    */
 #define INSTR_RIL_RP       6, { R_8,J32_16,0,0,0,0 }             /* e.g. brasl */
 #define INSTR_RIL_UP       6, { U4_8,J32_16,0,0,0,0 }            /* e.g. brcl  */
@@ -478,6 +468,7 @@ unused_s390_operands_static_asserts (void)
 #define INSTR_SS_RRRDRD2   6, { R_8,D_20,B_16,R_12,D_36,B_32 }   /* e.g. plo   */
 #define INSTR_SS_RRRDRD3   6, { R_8,R_12,D_20,B_16,D_36,B_32 }   /* e.g. lmd   */
 #define INSTR_SSF_RRDRD    6, { D_20,B_16,D_36,B_32,R_8,0 }      /* e.g. mvcos */
+#define INSTR_SSF_RRDRD2   6, { R_8,D_20,B_16,D_36,B_32,0 }      /* e.g. cal   */
 #define INSTR_SSF_RERDRD2  6, { RE_8,D_20,B_16,D_36,B_32,0 }     /* e.g. lpd   */
 #define INSTR_S_00         4, { 0,0,0,0,0,0 }                    /* e.g. hsch  */
 #define INSTR_S_RD         4, { D_20,B_16,0,0,0,0 }              /* e.g. stck  */
@@ -498,6 +489,8 @@ unused_s390_operands_static_asserts (void)
 #define INSTR_VRI_VVUUU    6, { V_8,V_12,U12_16,U4_32,U4_28,0 }  /* e.g. vftci */
 #define INSTR_VRI_VVUUU2   6, { V_8,V_12,U8_28,U8_16,U4_24,0 }   /* e.g. vpsop */
 #define INSTR_VRI_VR0UU    6, { V_8,R_12,U8_28,U4_24,0,0 }       /* e.g. vcvd  */
+#define INSTR_VRI_VV0UU    6, { V_8,V_12,U8_28,U4_24,0,0 }       /* e.g. vcvdq */
+#define INSTR_VRI_VVV0UV   6, { V_8,V_12,V_16,V_32,U8_24,0 }     /* e.g. veval */
 #define INSTR_VRX_VRRD     6, { V_8,D_20,X_12,B_16,0,0 }         /* e.g. vl    */
 #define INSTR_VRX_VV       6, { V_8,V_12,0,0,0,0 }               /* e.g. vlr   */
 #define INSTR_VRX_VRRDU    6, { V_8,D_20,X_12,B_16,U4_32,0 }     /* e.g. vlrep */
@@ -508,27 +501,27 @@ unused_s390_operands_static_asserts (void)
 #define INSTR_VRS_VRRDU    6, { V_8,R_12,D_20,B_16,U4_32,0 }     /* e.g. vlvg  */
 #define INSTR_VRS_VRRD     6, { V_8,R_12,D_20,B_16,0,0 }         /* e.g. vlvgb */
 #define INSTR_VRS_RRDV     6, { V_32,R_12,D_20,B_16,0,0 }        /* e.g. vlrlr */
-#define INSTR_VRR_0V       6, { V_12,0,0,0,0,0 }                 /* e.g. vtp   */
 #define INSTR_VRR_VRR      6, { V_8,R_12,R_16,0,0,0 }            /* e.g. vlvgp */
 #define INSTR_VRR_VVV0U    6, { V_8,V_12,V_16,U4_32,0,0 }        /* e.g. vmrh  */
 #define INSTR_VRR_VVV0U0   6, { V_8,V_12,V_16,U4_24,0,0 }        /* e.g. vfaeb */
-#define INSTR_VRR_VVV0U1   6, { V_8,V_12,V_16,U4_OR1_24,0,0 }    /* e.g. vfaebs*/
-#define INSTR_VRR_VVV0U2   6, { V_8,V_12,V_16,U4_OR2_24,0,0 }    /* e.g. vfaezb*/
-#define INSTR_VRR_VVV0U3   6, { V_8,V_12,V_16,U4_OR3_24,0,0 }    /* e.g. vfaezbs*/
+#define INSTR_VRR_VVV0U02  6, { V_8,V_12,V_16,U4_28,0,0 }        /* e.g. vd */
+#define INSTR_VRR_VVV0U1   INSTR_VRR_VVV0U0                      /* e.g. vfaebs*/
+#define INSTR_VRR_VVV0U2   INSTR_VRR_VVV0U0                      /* e.g. vfaezb*/
+#define INSTR_VRR_VVV0U3   INSTR_VRR_VVV0U0                      /* e.g. vfaezbs*/
 #define INSTR_VRR_VVV      6, { V_8,V_12,V_16,0,0,0 }            /* e.g. vmrhb */
 #define INSTR_VRR_VVV2     6, { V_8,V_CP16_12,0,0,0,0 }          /* e.g. vnot  */
 #define INSTR_VRR_VV0U     6, { V_8,V_12,U4_32,0,0,0 }           /* e.g. vseg  */
 #define INSTR_VRR_VV0U2    6, { V_8,V_12,U4_24,0,0,0 }           /* e.g. vistrb*/
 #define INSTR_VRR_VV0UU    6, { V_8,V_12,U4_28,U4_24,0,0 }       /* e.g. vcdgb */
 #define INSTR_VRR_VV0UU2   6, { V_8,V_12,U4_32,U4_28,0,0 }       /* e.g. wfc */
-#define INSTR_VRR_VV0UU8   6, { V_8,V_12,U4_OR8_28,U4_24,0,0 }   /* e.g. wcdgb */
+#define INSTR_VRR_VV0UU8   INSTR_VRR_VV0UU                       /* e.g. wcdgb */
 #define INSTR_VRR_VV       6, { V_8,V_12,0,0,0,0 }               /* e.g. vsegb */
 #define INSTR_VRR_VVVUU0V  6, { V_8,V_12,V_16,V_32,U4_20,U4_24 } /* e.g. vstrc */
 #define INSTR_VRR_VVVU0V   6, { V_8,V_12,V_16,V_32,U4_20,0 }     /* e.g. vac   */
 #define INSTR_VRR_VVVU0VB  6, { V_8,V_12,V_16,V_32,U4_24,0 }     /* e.g. vstrcb*/
-#define INSTR_VRR_VVVU0VB1 6, { V_8,V_12,V_16,V_32,U4_OR1_24,0 } /* e.g. vstrcbs*/
-#define INSTR_VRR_VVVU0VB2 6, { V_8,V_12,V_16,V_32,U4_OR2_24,0 } /* e.g. vstrczb*/
-#define INSTR_VRR_VVVU0VB3 6, { V_8,V_12,V_16,V_32,U4_OR3_24,0 } /* e.g. vstrczbs*/
+#define INSTR_VRR_VVVU0VB1 INSTR_VRR_VVVU0VB                     /* e.g. vstrcbs*/
+#define INSTR_VRR_VVVU0VB2 INSTR_VRR_VVVU0VB                     /* e.g. vstrczb*/
+#define INSTR_VRR_VVVU0VB3 INSTR_VRR_VVVU0VB                     /* e.g. vstrczbs*/
 #define INSTR_VRR_VVV0V    6, { V_8,V_12,V_16,V_32,0,0 }         /* e.g. vacq  */
 #define INSTR_VRR_VVV0U0U  6, { V_8,V_12,V_16,U4_32,U4_24,0 }    /* e.g. vfae  */
 #define INSTR_VRR_VVVV     6, { V_8,V_12,V_16,V_32,0,0 }         /* e.g. vfmadb*/
@@ -537,6 +530,9 @@ unused_s390_operands_static_asserts (void)
 #define INSTR_VRR_VV0UUU   6, { V_8,V_12,U4_32,U4_28,U4_24,0 }   /* e.g. vcdg  */
 #define INSTR_VRR_VVVU0UV  6, { V_8,V_12,V_16,V_32,U4_28,U4_20 } /* e.g. vfma  */
 #define INSTR_VRR_VV0U0U   6, { V_8,V_12,U4_32,U4_24,0,0 }       /* e.g. vistr */
+#define INSTR_VRR_0V       6, { V_12,0,0,0,0,0 }                 /* e.g. vtp   */
+#define INSTR_VRR_0V0U     6, { V_12,U16_20,0,0,0,0 }            /* e.g. vtp   */
+#define INSTR_VRR_0VVU     6, { V_12,V_16,U16_20,0,0,0 }         /* e.g. vtz   */
 #define INSTR_VRR_0VV0U    6, { V_12,V_16,U4_24,0,0,0 }          /* e.g. vcp   */
 #define INSTR_VRR_RV0U     6, { R_8,V_12,U4_24,0,0,0 }           /* e.g. vcvb  */
 #define INSTR_VRR_RV0UU    6, { R_8,V_12,U4_24,U4_28,0,0 }       /* e.g. vcvb  */
@@ -559,9 +555,9 @@ unused_s390_operands_static_asserts (void)
 #define MASK_RIE_R0U0     { 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff }
 #define MASK_RIE_RUI0     { 0xff, 0x00, 0x00, 0x00, 0xff, 0xff }
 #define MASK_RIE_RRUUU    { 0xff, 0x00, 0x00, 0x00, 0x00, 0xff }
-#define MASK_RIE_RRUUU2   { 0xff, 0x00, 0x00, 0xc0, 0x00, 0xff }
-#define MASK_RIE_RRUUU3   { 0xff, 0x00, 0x00, 0xe0, 0x00, 0xff }
-#define MASK_RIE_RRUUU4   { 0xff, 0x00, 0xc0, 0x00, 0x00, 0xff }
+#define MASK_RIE_RRUUU2   { 0xff, 0x00, 0x00, 0x80, 0x00, 0xff }
+#define MASK_RIE_RRUUU3   { 0xff, 0x00, 0x00, 0x80, 0x00, 0xff }
+#define MASK_RIE_RRUUU4   { 0xff, 0x00, 0x80, 0x00, 0x00, 0xff }
 #define MASK_RIL_0P       { 0xff, 0xff, 0x00, 0x00, 0x00, 0x00 }
 #define MASK_RIL_RP       { 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00 }
 #define MASK_RIL_UP       { 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00 }
@@ -705,6 +701,7 @@ unused_s390_operands_static_asserts (void)
 #define MASK_SS_RRRDRD2   { 0xff, 0x00, 0x00, 0x00, 0x00, 0x00 }
 #define MASK_SS_RRRDRD3   { 0xff, 0x00, 0x00, 0x00, 0x00, 0x00 }
 #define MASK_SSF_RRDRD    { 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00 }
+#define MASK_SSF_RRDRD2   { 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00 }
 #define MASK_SSF_RERDRD2  { 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00 }
 #define MASK_S_00         { 0xff, 0xff, 0xff, 0xff, 0x00, 0x00 }
 #define MASK_S_RD         { 0xff, 0xff, 0x00, 0x00, 0x00, 0x00 }
@@ -725,6 +722,8 @@ unused_s390_operands_static_asserts (void)
 #define MASK_VRI_VVUUU    { 0xff, 0x00, 0x00, 0x00, 0x00, 0xff }
 #define MASK_VRI_VVUUU2   { 0xff, 0x00, 0x00, 0x00, 0x00, 0xff }
 #define MASK_VRI_VR0UU    { 0xff, 0x00, 0xff, 0x00, 0x00, 0xff }
+#define MASK_VRI_VV0UU    { 0xff, 0x00, 0xff, 0x00, 0x00, 0xff }
+#define MASK_VRI_VVV0UV   { 0xff, 0x00, 0x0f, 0x00, 0x00, 0xff }
 #define MASK_VRX_VRRD     { 0xff, 0x00, 0x00, 0x00, 0xf0, 0xff }
 #define MASK_VRX_VV       { 0xff, 0x00, 0xff, 0xff, 0xf0, 0xff }
 #define MASK_VRX_VRRDU    { 0xff, 0x00, 0x00, 0x00, 0x00, 0xff }
@@ -735,10 +734,10 @@ unused_s390_operands_static_asserts (void)
 #define MASK_VRS_VRRDU    { 0xff, 0x00, 0x00, 0x00, 0x00, 0xff }
 #define MASK_VRS_VRRD     { 0xff, 0x00, 0x00, 0x00, 0xf0, 0xff }
 #define MASK_VRS_RRDV     { 0xff, 0xf0, 0x00, 0x00, 0x00, 0xff }
-#define MASK_VRR_0V       { 0xff, 0xf0, 0xff, 0xff, 0xf0, 0xff }
 #define MASK_VRR_VRR      { 0xff, 0x00, 0x0f, 0xff, 0xf0, 0xff }
 #define MASK_VRR_VVV0U    { 0xff, 0x00, 0x0f, 0xff, 0x00, 0xff }
 #define MASK_VRR_VVV0U0   { 0xff, 0x00, 0x0f, 0x0f, 0xf0, 0xff }
+#define MASK_VRR_VVV0U02  { 0xff, 0x00, 0x0f, 0xf0, 0xf0, 0xff }
 #define MASK_VRR_VVV0U1   { 0xff, 0x00, 0x0f, 0x1f, 0xf0, 0xff }
 #define MASK_VRR_VVV0U2   { 0xff, 0x00, 0x0f, 0x2f, 0xf0, 0xff }
 #define MASK_VRR_VVV0U3   { 0xff, 0x00, 0x0f, 0x3f, 0xf0, 0xff }
@@ -764,6 +763,9 @@ unused_s390_operands_static_asserts (void)
 #define MASK_VRR_VV0UUU   { 0xff, 0x00, 0xff, 0x00, 0x00, 0xff }
 #define MASK_VRR_VVVU0UV  { 0xff, 0x00, 0x00, 0xf0, 0x00, 0xff }
 #define MASK_VRR_VV0U0U   { 0xff, 0x00, 0xff, 0x0f, 0x00, 0xff }
+#define MASK_VRR_0V       { 0xff, 0xf0, 0xff, 0xff, 0xf0, 0xff }
+#define MASK_VRR_0V0U     { 0xff, 0xf0, 0xf0, 0x00, 0x00, 0xff }
+#define MASK_VRR_0VVU     { 0xff, 0xf0, 0x00, 0x00, 0x00, 0xff }
 #define MASK_VRR_0VV0U    { 0xff, 0xf0, 0x0f, 0x0f, 0xf0, 0xff }
 #define MASK_VRR_RV0U     { 0xff, 0x00, 0xff, 0x0f, 0xf0, 0xff }
 #define MASK_VRR_RV0UU    { 0xff, 0x00, 0xff, 0x00, 0xf0, 0xff }
diff --git a/opcodes/s390-opc.txt b/opcodes/s390-opc.txt
index 1182e196059..68d8896bf4e 100644
--- a/opcodes/s390-opc.txt
+++ b/opcodes/s390-opc.txt
@@ -2061,7 +2061,7 @@ e60000000055 vcnf VRR_VV0UU2 "vector fp convert to nnp" arch14 zarch
 
 # Reset-DAT-Protection Facility
 
-b98B rdp RRF_RURR2 "reset dat protection" arch14 zarch optparm
+b98b rdp RRF_RURR2 "reset dat protection" arch14 zarch optparm
 
 # BEAR-Enhancement Facility
 
@@ -2072,3 +2072,129 @@ b201 stbear S_RD "store bear" arch14 zarch
 # Processor-Activity-Instrumentation Facility
 
 b28f qpaci S_RD "query processor activity counter information" arch14 zarch
+
+
+# arch15 instructions
+
+# Vector-Enhancements Facility 3
+
+e70000000089 vblend VRR_VVVU0V "vector blend" arch15 zarch
+e70000000089 vblendb VRR_VVV0V "vector blend byte" arch15 zarch
+e70001000089 vblendh VRR_VVV0V "vector blend halfword" arch15 zarch
+e70002000089 vblendf VRR_VVV0V "vector blend word" arch15 zarch
+e70003000089 vblendg VRR_VVV0V "vector blend doubleword" arch15 zarch
+e70004000089 vblendq VRR_VVV0V "vector blend quadword" arch15 zarch
+
+e70000000088 veval VRI_VVV0UV "vector evaluate" arch15 zarch
+
+e70000000054 vgem VRR_VV0U "vector generate element masks" arch15 zarch
+e70000000054 vgemb VRR_VV "vector generate element masks byte" arch15 zarch
+e70000001054 vgemh VRR_VV "vector generate element masks halfword" arch15 zarch
+e70000002054 vgemf VRR_VV "vector generate element masks word" arch15 zarch
+e70000003054 vgemg VRR_VV "vector generate element masks doubleword" arch15 zarch
+e70000004054 vgemq VRR_VV "vector generate element masks quadword" arch15 zarch
+
+e700000030d7 vuphg VRR_VV "vector unpack high doubleword" arch15 zarch
+e700000030d5 vuplhg VRR_VV "vector unpack logical high doubleword" arch15 zarch
+e700000030d6 vuplg VRR_VV "vector unpack low doubleword" arch15 zarch
+e700000030d4 vupllg VRR_VV "vector unpack logical low doubleword" arch15 zarch
+
+e700000040f2 vavgq VRR_VVV "vector average quadword" arch15 zarch
+e700000040f0 vavglq VRR_VVV "vector average logical quadword" arch15 zarch
+e700000040db vecq VRR_VV "vector element compare quadword" arch15 zarch
+e700000040d9 veclq VRR_VV "vector element compare logical quadword" arch15 zarch
+e700000040f8 vceqq VRR_VVV "vector compare equal quadword" arch15 zarch
+e700001040f8 vceqqs VRR_VVV "vector compare equal quadword" arch15 zarch
+e700000040fb vchq VRR_VVV "vector compare high quadword" arch15 zarch
+e700001040fb vchqs VRR_VVV "vector compare high quadword" arch15 zarch
+e700000040f9 vchlq VRR_VVV "vector compare high logical quadword" arch15 zarch
+e700001040f9 vchlqs VRR_VVV "vector compare high logical quadword" arch15 zarch
+e70000004053 vclzq VRR_VV "vector count leading zeros quadword" arch15 zarch
+e70000004052 vctzq VRR_VV "vector count trailing zeros quadword" arch15 zarch
+e700000040de vlcq VRR_VV "vector load complement quadword" arch15 zarch
+e700000040df vlpq VRR_VV "vector load positive quadword" arch15 zarch
+e700000040ff vmxq VRR_VVV "vector maximum quadword" arch15 zarch
+e700000040fd vmxlq VRR_VVV "vector maximum logical quadword" arch15 zarch
+e700000040fe vmnq VRR_VVV "vector minimum quadword" arch15 zarch
+e700000040fc vmnlq VRR_VVV "vector minimum logical quadword" arch15 zarch
+e700030000aa vmalg VRR_VVV0V "vector multiply and add low doubleword" arch15 zarch
+e700040000aa vmalq VRR_VVV0V "vector multiply and add low quadword" arch15 zarch
+e700030000ab vmahg VRR_VVV0V "vector multiply and add high doubleword" arch15 zarch
+e700040000ab vmahq VRR_VVV0V "vector multiply and add high quadword" arch15 zarch
+e700030000a9 vmalhg VRR_VVV0V "vector multiply and add logical high doubleword" arch15 zarch
+e700040000a9 vmalhq VRR_VVV0V "vector multiply and add logical high quadword" arch15 zarch
+e700030000ae vmaeg VRR_VVV0V "vector multiply and add even doubleword" arch15 zarch
+e700030000ac vmaleg VRR_VVV0V "vector multiply and add logical even doubleword" arch15 zarch
+e700030000af vmaog VRR_VVV0V "vector multiply and add odd doubleword" arch15 zarch
+e700030000ad vmalog VRR_VVV0V "vector multiply and add logical odd doubleword" arch15 zarch
+e700000030a3 vmhg VRR_VVV "vector multiply high doubleword" arch15 zarch
+e700000040a3 vmhq VRR_VVV "vector multiply high quadword" arch15 zarch
+e700000030a1 vmlhg VRR_VVV "vector multiply logical high doubleword" arch15 zarch
+e700000040a1 vmlhq VRR_VVV "vector multiply logical high quadword" arch15 zarch
+e700000030a2 vmlg VRR_VVV "vector multiply low doubleword" arch15 zarch
+e700000040a2 vmlq VRR_VVV "vector multiply low quadword" arch15 zarch
+e700000030a6 vmeg VRR_VVV "vector multiply even doubleword" arch15 zarch
+e700000030a4 vmleg VRR_VVV "vector multiply logical even doubleword" arch15 zarch
+e700000030a7 vmog VRR_VVV "vector multiply odd doubleword" arch15 zarch
+e700000030a5 vmlog VRR_VVV "vector multiply logical odd doubleword" arch15 zarch
+
+e700000000b2 vd VRR_VVV0UU "vector divide" arch15 zarch
+e700000020b2 vdf VRR_VVV0U02 "vector divide word" arch15 zarch
+e700000030b2 vdg VRR_VVV0U02 "vector divide doubleword" arch15 zarch
+e700000040b2 vdq VRR_VVV0U02 "vector divide quadword" arch15 zarch
+
+e700000000b0 vdl VRR_VVV0UU "vector divide logical" arch15 zarch
+e700000020b0 vdlf VRR_VVV0U02 "vector divide logical word" arch15 zarch
+e700000030b0 vdlg VRR_VVV0U02 "vector divide logical doubleword" arch15 zarch
+e700000040b0 vdlq VRR_VVV0U02 "vector divide logical quadword" arch15 zarch
+
+e700000000b3 vr VRR_VVV0UU "vector remainder" arch15 zarch
+e700000020b3 vrf VRR_VVV0U02 "vector remainder word" arch15 zarch
+e700000030b3 vrg VRR_VVV0U02 "vector remainder doubleword" arch15 zarch
+e700000040b3 vrq VRR_VVV0U02 "vector remainder quadword" arch15 zarch
+
+e700000000b1 vrl VRR_VVV0UU "vector remainder logical" arch15 zarch
+e700000020b1 vrlf VRR_VVV0U02 "vector remainder logical word" arch15 zarch
+e700000030b1 vrlg VRR_VVV0U02 "vector remainder logical doubleword" arch15 zarch
+e700000040b1 vrlq VRR_VVV0U02 "vector remainder logical quadword" arch15 zarch
+
+# Miscellaneous-Instruction-Extensions Facility 4
+
+b968 clzg RRE_RR "count leading zeros" arch15 zarch
+b969 ctzg RRE_RR "count trailing zeros" arch15 zarch
+
+e30000000060 lxab RXY_RRRD "load indexed address (shift left 0)" arch15 zarch
+e30000000062 lxah RXY_RRRD "load indexed address (shift left 1)" arch15 zarch
+e30000000064 lxaf RXY_RRRD "load indexed address (shift left 2)" arch15 zarch
+e30000000066 lxag RXY_RRRD "load indexed address (shift left 3)" arch15 zarch
+e30000000068 lxaq RXY_RRRD "load indexed address (shift left 4)" arch15 zarch
+
+e30000000061 llxab RXY_RRRD "load logical indexed address (shift left 0)" arch15 zarch
+e30000000063 llxah RXY_RRRD "load logical indexed address (shift left 1)" arch15 zarch
+e30000000065 llxaf RXY_RRRD "load logical indexed address (shift left 2)" arch15 zarch
+e30000000067 llxag RXY_RRRD "load logical indexed address (shift left 3)" arch15 zarch
+e30000000069 llxaq RXY_RRRD "load logical indexed address (shift left 4)" arch15 zarch
+
+b96c bextg RRF_R0RR2 "bit extract" arch15 zarch
+b96d bdepg RRF_R0RR2 "bit deposit" arch15 zarch
+
+# Message-Security-Assist Extension 12
+
+b93e kimd RRF_U0RR "compute intermediate message digest" arch15 zarch optparm
+b93f klmd RRF_U0RR "compute last message digest" arch15 zarch optparm
+
+# Vector-Packed-Decimal-Enhancement Facility 3
+
+e6000000004e vcvbq VRR_VV0U2 "vector convert to binary 128 bit" arch15 zarch
+e6000000004a vcvdq VRI_VV0UU "vector convert to decimal 128 bit" arch15 zarch
+
+e6000000005f vtp VRR_0V0U "vector test decimal" arch15 zarch optparm
+e6000000007f vtz VRR_0VVU "vector test zoned" arch15 zarch
+
+# Concurrent-Functions Facility
+
+c806 cal SSF_RRDRD2 "compare and load 32" arch15 zarch
+c807 calg SSF_RRDRD2 "compare and load 64" arch15 zarch
+c80f calgf SSF_RRDRD2 "compare and load 64<32" arch15 zarch
+
+eb0000000016 pfcr RSY_RRRD "perform functions with concurrent results" arch15 zarch
diff --git a/opcodes/sparc-opc.c b/opcodes/sparc-opc.c
index fb7ebe38d46..19f7f62f1a3 100644
--- a/opcodes/sparc-opc.c
+++ b/opcodes/sparc-opc.c
@@ -2016,7 +2016,7 @@ SLCBCC("cbnefr", 15),
 { "alignaddr",	F3F(2, 0x36, 0x018), F3F(~2, ~0x36, ~0x018), "1,2,d", 0, HWCAP_VIS, 0, v9a },
 { "alignaddrl",	F3F(2, 0x36, 0x01a), F3F(~2, ~0x36, ~0x01a), "1,2,d", 0, HWCAP_VIS, 0, v9a },
 { "faligndata",	F3F(2, 0x36, 0x048), F3F(~2, ~0x36, ~0x048), "v,B,H", 0, HWCAP_VIS, 0, v9a }, /* faligndatag */
-{ "faligndata", F3F(2, 0x36, 0x049), F3F(~2, ~0x36, ~0x049), "v,B,5,}", 0, 0, HWCAP2_SPARC5, v9m }, /* faligndatai  */
+{ "faligndata", F3F(2, 0x36, 0x049), F3F(~2, ~0x36, ~0x049), "1,H,B,}", 0, 0, HWCAP2_SPARC5, v9m }, /* faligndatai  */
 
 { "fzerod",	F3F(2, 0x36, 0x060), F3F(~2, ~0x36, ~0x060), "H", 0, HWCAP_VIS, 0, v9a },
 { "fzero",	F3F(2, 0x36, 0x060), F3F(~2, ~0x36, ~0x060), "H", F_ALIAS, HWCAP_VIS, 0, v9a },
